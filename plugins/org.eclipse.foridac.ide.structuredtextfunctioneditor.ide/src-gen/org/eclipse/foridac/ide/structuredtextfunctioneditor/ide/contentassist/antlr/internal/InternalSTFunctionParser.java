package org.eclipse.foridac.ide.structuredtextfunctioneditor.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.foridac.ide.structuredtextfunctioneditor.services.STFunctionGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTFunctionParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LDATE_AND_TIME", "DATE_AND_TIME", "END_FUNCTION", "TIME_OF_DAY", "END_REPEAT", "VAR_OUTPUT", "END_WHILE", "VAR_INPUT", "CONSTANT", "CONTINUE", "END_CASE", "FUNCTION", "VAR_TEMP", "WSTRING", "END_FOR", "END_VAR", "STRING", "DWORD", "END_IF", "LDATE", "LREAL", "LTIME", "LWORD", "REPEAT", "RETURN", "UDINT", "ULINT", "USINT", "WCHAR", "ARRAY", "BOOL", "BYTE", "CHAR", "DATE", "DINT", "ELSIF", "LINT", "LTOD", "REAL", "SINT", "TIME", "UINT", "UNTIL", "WHILE", "WORD", "CASE", "ELSE", "EXIT", "INT", "LDT", "THEN", "TOD", "B", "D_1", "L", "W", "X", "AND", "DT", "FOR", "LD", "LT", "MOD", "NOT", "VAR", "XOR", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "D", "DO", "IF", "OF", "OR", "T", "TO", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "LeftSquareBracket", "RightSquareBracket", "RULE_BOOL_VALUES", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_TIME", "RULE_EXT_INT", "RULE_ID", "RULE_STRING", "RULE_WSTRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=26;
    public static final int LessThanSignGreaterThanSign=74;
    public static final int VAR=68;
    public static final int END_IF=22;
    public static final int ULINT=30;
    public static final int END_CASE=14;
    public static final int LessThanSign=97;
    public static final int LeftParenthesis=87;
    public static final int BYTE=35;
    public static final int ELSE=50;
    public static final int RULE_TIME=106;
    public static final int IF=80;
    public static final int LINT=40;
    public static final int GreaterThanSign=99;
    public static final int WORD=48;
    public static final int DATE_AND_TIME=5;
    public static final int RULE_ID=108;
    public static final int TOD=55;
    public static final int DINT=38;
    public static final int FUNCTION=15;
    public static final int UDINT=29;
    public static final int CASE=49;
    public static final int GreaterThanSignEqualsSign=75;
    public static final int AT=76;
    public static final int PlusSign=90;
    public static final int RULE_INT=105;
    public static final int END_FOR=18;
    public static final int RULE_ML_COMMENT=111;
    public static final int THEN=54;
    public static final int XOR=69;
    public static final int LeftSquareBracket=100;
    public static final int EXIT=51;
    public static final int TIME_OF_DAY=7;
    public static final int B=56;
    public static final int LDATE_AND_TIME=4;
    public static final int REPEAT=27;
    public static final int D=78;
    public static final int CHAR=36;
    public static final int L=58;
    public static final int LTIME=25;
    public static final int Comma=91;
    public static final int HyphenMinus=92;
    public static final int T=83;
    public static final int W=59;
    public static final int BY=77;
    public static final int X=60;
    public static final int ELSIF=39;
    public static final int END_REPEAT=8;
    public static final int LessThanSignEqualsSign=73;
    public static final int Solidus=94;
    public static final int VAR_INPUT=11;
    public static final int FullStop=93;
    public static final int VAR_TEMP=16;
    public static final int CONSTANT=12;
    public static final int CONTINUE=13;
    public static final int Semicolon=96;
    public static final int LD=64;
    public static final int VAR_OUTPUT=9;
    public static final int STRING=20;
    public static final int RULE_HEX_DIGIT=103;
    public static final int TO=84;
    public static final int RULE_BOOL_VALUES=102;
    public static final int UINT=45;
    public static final int LTOD=41;
    public static final int ARRAY=33;
    public static final int LT=65;
    public static final int DO=79;
    public static final int WSTRING=17;
    public static final int DT=62;
    public static final int END_VAR=19;
    public static final int FullStopFullStop=71;
    public static final int Ampersand=86;
    public static final int RightSquareBracket=101;
    public static final int USINT=31;
    public static final int DWORD=21;
    public static final int FOR=63;
    public static final int RightParenthesis=88;
    public static final int ColonEqualsSign=72;
    public static final int RULE_WSTRING=110;
    public static final int END_FUNCTION=6;
    public static final int END_WHILE=10;
    public static final int DATE=37;
    public static final int NOT=67;
    public static final int LDATE=23;
    public static final int AND=61;
    public static final int NumberSign=85;
    public static final int REAL=42;
    public static final int AsteriskAsterisk=70;
    public static final int SINT=43;
    public static final int LREAL=24;
    public static final int WCHAR=32;
    public static final int RULE_STRING=109;
    public static final int INT=52;
    public static final int RULE_SL_COMMENT=112;
    public static final int RETURN=28;
    public static final int EqualsSign=98;
    public static final int OF=81;
    public static final int Colon=95;
    public static final int EOF=-1;
    public static final int LDT=53;
    public static final int Asterisk=89;
    public static final int MOD=66;
    public static final int OR=82;
    public static final int RULE_WS=113;
    public static final int RULE_EXT_INT=107;
    public static final int TIME=44;
    public static final int RULE_ANY_OTHER=114;
    public static final int UNTIL=46;
    public static final int BOOL=34;
    public static final int D_1=57;
    public static final int WHILE=47;
    public static final int RULE_NON_DECIMAL=104;

    // delegates
    // delegators


        public InternalSTFunctionParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTFunctionParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTFunctionParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTFunctionParser.g"; }


    	private STFunctionGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("D", "'D#'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("T", "'T#'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("B", "'.%B'");
    		tokenNameToValue.put("D_1", "'.%D'");
    		tokenNameToValue.put("L", "'.%L'");
    		tokenNameToValue.put("W", "'.%W'");
    		tokenNameToValue.put("X", "'.%X'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("DT", "'DT#'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("LD", "'LD#'");
    		tokenNameToValue.put("LT", "'LT#'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("INT", "'INT#'");
    		tokenNameToValue.put("LDT", "'LDT#'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TOD", "'TOD#'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("BOOL", "'BOOL#'");
    		tokenNameToValue.put("BYTE", "'BYTE#'");
    		tokenNameToValue.put("CHAR", "'CHAR#'");
    		tokenNameToValue.put("DATE", "'DATE#'");
    		tokenNameToValue.put("DINT", "'DINT#'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("LINT", "'LINT#'");
    		tokenNameToValue.put("LTOD", "'LTOD#'");
    		tokenNameToValue.put("REAL", "'REAL#'");
    		tokenNameToValue.put("SINT", "'SINT#'");
    		tokenNameToValue.put("TIME", "'TIME#'");
    		tokenNameToValue.put("UINT", "'UINT#'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("WORD", "'WORD#'");
    		tokenNameToValue.put("DWORD", "'DWORD#'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("LDATE", "'LDATE#'");
    		tokenNameToValue.put("LREAL", "'LREAL#'");
    		tokenNameToValue.put("LTIME", "'LTIME#'");
    		tokenNameToValue.put("LWORD", "'LWORD#'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("UDINT", "'UDINT#'");
    		tokenNameToValue.put("ULINT", "'ULINT#'");
    		tokenNameToValue.put("USINT", "'USINT#'");
    		tokenNameToValue.put("WCHAR", "'WCHAR#'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("STRING", "'STRING#'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("FUNCTION", "'FUNCTION'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("WSTRING", "'WSTRING#'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("END_FUNCTION", "'END_FUNCTION'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY#'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME#'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME#'");
    	}

    	public void setGrammarAccess(STFunctionGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleSTFunction"
    // InternalSTFunctionParser.g:154:1: entryRuleSTFunction : ruleSTFunction EOF ;
    public final void entryRuleSTFunction() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:155:1: ( ruleSTFunction EOF )
            // InternalSTFunctionParser.g:156:1: ruleSTFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFunction"


    // $ANTLR start "ruleSTFunction"
    // InternalSTFunctionParser.g:163:1: ruleSTFunction : ( ( rule__STFunction__FunctionsAssignment )* ) ;
    public final void ruleSTFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:167:2: ( ( ( rule__STFunction__FunctionsAssignment )* ) )
            // InternalSTFunctionParser.g:168:2: ( ( rule__STFunction__FunctionsAssignment )* )
            {
            // InternalSTFunctionParser.g:168:2: ( ( rule__STFunction__FunctionsAssignment )* )
            // InternalSTFunctionParser.g:169:3: ( rule__STFunction__FunctionsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getFunctionsAssignment()); 
            }
            // InternalSTFunctionParser.g:170:3: ( rule__STFunction__FunctionsAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==FUNCTION) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSTFunctionParser.g:170:4: rule__STFunction__FunctionsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STFunction__FunctionsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getFunctionsAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFunction"


    // $ANTLR start "entryRuleFunctionDefinition"
    // InternalSTFunctionParser.g:179:1: entryRuleFunctionDefinition : ruleFunctionDefinition EOF ;
    public final void entryRuleFunctionDefinition() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:180:1: ( ruleFunctionDefinition EOF )
            // InternalSTFunctionParser.g:181:1: ruleFunctionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionDefinition"


    // $ANTLR start "ruleFunctionDefinition"
    // InternalSTFunctionParser.g:188:1: ruleFunctionDefinition : ( ( rule__FunctionDefinition__Group__0 ) ) ;
    public final void ruleFunctionDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:192:2: ( ( ( rule__FunctionDefinition__Group__0 ) ) )
            // InternalSTFunctionParser.g:193:2: ( ( rule__FunctionDefinition__Group__0 ) )
            {
            // InternalSTFunctionParser.g:193:2: ( ( rule__FunctionDefinition__Group__0 ) )
            // InternalSTFunctionParser.g:194:3: ( rule__FunctionDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:195:3: ( rule__FunctionDefinition__Group__0 )
            // InternalSTFunctionParser.g:195:4: rule__FunctionDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "entryRuleVarTempDeclarationBlock"
    // InternalSTFunctionParser.g:204:1: entryRuleVarTempDeclarationBlock : ruleVarTempDeclarationBlock EOF ;
    public final void entryRuleVarTempDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:205:1: ( ruleVarTempDeclarationBlock EOF )
            // InternalSTFunctionParser.g:206:1: ruleVarTempDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarTempDeclarationBlock"


    // $ANTLR start "ruleVarTempDeclarationBlock"
    // InternalSTFunctionParser.g:213:1: ruleVarTempDeclarationBlock : ( ( rule__VarTempDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarTempDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:217:2: ( ( ( rule__VarTempDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:218:2: ( ( rule__VarTempDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:218:2: ( ( rule__VarTempDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:219:3: ( rule__VarTempDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:220:3: ( rule__VarTempDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:220:4: rule__VarTempDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarTempDeclarationBlock"


    // $ANTLR start "entryRuleVarInputDeclarationBlock"
    // InternalSTFunctionParser.g:229:1: entryRuleVarInputDeclarationBlock : ruleVarInputDeclarationBlock EOF ;
    public final void entryRuleVarInputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:230:1: ( ruleVarInputDeclarationBlock EOF )
            // InternalSTFunctionParser.g:231:1: ruleVarInputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarInputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarInputDeclarationBlock"


    // $ANTLR start "ruleVarInputDeclarationBlock"
    // InternalSTFunctionParser.g:238:1: ruleVarInputDeclarationBlock : ( ( rule__VarInputDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarInputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:242:2: ( ( ( rule__VarInputDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:243:2: ( ( rule__VarInputDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:243:2: ( ( rule__VarInputDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:244:3: ( rule__VarInputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:245:3: ( rule__VarInputDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:245:4: rule__VarInputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarInputDeclarationBlock"


    // $ANTLR start "entryRuleVarOutputDeclarationBlock"
    // InternalSTFunctionParser.g:254:1: entryRuleVarOutputDeclarationBlock : ruleVarOutputDeclarationBlock EOF ;
    public final void entryRuleVarOutputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:255:1: ( ruleVarOutputDeclarationBlock EOF )
            // InternalSTFunctionParser.g:256:1: ruleVarOutputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarOutputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarOutputDeclarationBlock"


    // $ANTLR start "ruleVarOutputDeclarationBlock"
    // InternalSTFunctionParser.g:263:1: ruleVarOutputDeclarationBlock : ( ( rule__VarOutputDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarOutputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:267:2: ( ( ( rule__VarOutputDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:268:2: ( ( rule__VarOutputDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:268:2: ( ( rule__VarOutputDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:269:3: ( rule__VarOutputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:270:3: ( rule__VarOutputDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:270:4: rule__VarOutputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarOutputDeclarationBlock"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSTFunctionParser.g:279:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:280:1: ( ruleVarDeclaration EOF )
            // InternalSTFunctionParser.g:281:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSTFunctionParser.g:288:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:292:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSTFunctionParser.g:293:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSTFunctionParser.g:293:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSTFunctionParser.g:294:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:295:3: ( rule__VarDeclaration__Group__0 )
            // InternalSTFunctionParser.g:295:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleInitializerExpression"
    // InternalSTFunctionParser.g:304:1: entryRuleInitializerExpression : ruleInitializerExpression EOF ;
    public final void entryRuleInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:305:1: ( ruleInitializerExpression EOF )
            // InternalSTFunctionParser.g:306:1: ruleInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializerExpression"


    // $ANTLR start "ruleInitializerExpression"
    // InternalSTFunctionParser.g:313:1: ruleInitializerExpression : ( ( rule__InitializerExpression__Alternatives ) ) ;
    public final void ruleInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:317:2: ( ( ( rule__InitializerExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:318:2: ( ( rule__InitializerExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:318:2: ( ( rule__InitializerExpression__Alternatives ) )
            // InternalSTFunctionParser.g:319:3: ( rule__InitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:320:3: ( rule__InitializerExpression__Alternatives )
            // InternalSTFunctionParser.g:320:4: rule__InitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializerExpression"


    // $ANTLR start "entryRuleArrayInitializerExpression"
    // InternalSTFunctionParser.g:329:1: entryRuleArrayInitializerExpression : ruleArrayInitializerExpression EOF ;
    public final void entryRuleArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:330:1: ( ruleArrayInitializerExpression EOF )
            // InternalSTFunctionParser.g:331:1: ruleArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitializerExpression"


    // $ANTLR start "ruleArrayInitializerExpression"
    // InternalSTFunctionParser.g:338:1: ruleArrayInitializerExpression : ( ( rule__ArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:342:2: ( ( ( rule__ArrayInitializerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:343:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:343:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:344:3: ( rule__ArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:345:3: ( rule__ArrayInitializerExpression__Group__0 )
            // InternalSTFunctionParser.g:345:4: rule__ArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitializerExpression"


    // $ANTLR start "entryRuleArrayInitElement"
    // InternalSTFunctionParser.g:354:1: entryRuleArrayInitElement : ruleArrayInitElement EOF ;
    public final void entryRuleArrayInitElement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:355:1: ( ruleArrayInitElement EOF )
            // InternalSTFunctionParser.g:356:1: ruleArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitElement"


    // $ANTLR start "ruleArrayInitElement"
    // InternalSTFunctionParser.g:363:1: ruleArrayInitElement : ( ( rule__ArrayInitElement__Group__0 ) ) ;
    public final void ruleArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:367:2: ( ( ( rule__ArrayInitElement__Group__0 ) ) )
            // InternalSTFunctionParser.g:368:2: ( ( rule__ArrayInitElement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:368:2: ( ( rule__ArrayInitElement__Group__0 ) )
            // InternalSTFunctionParser.g:369:3: ( rule__ArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:370:3: ( rule__ArrayInitElement__Group__0 )
            // InternalSTFunctionParser.g:370:4: rule__ArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTFunctionParser.g:379:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:380:1: ( ruleSTStatement EOF )
            // InternalSTFunctionParser.g:381:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTFunctionParser.g:388:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:392:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTFunctionParser.g:393:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTFunctionParser.g:393:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTFunctionParser.g:394:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:395:3: ( rule__STStatement__Alternatives )
            // InternalSTFunctionParser.g:395:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTFunctionParser.g:404:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:405:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTFunctionParser.g:406:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTFunctionParser.g:413:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:417:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:418:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:418:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTFunctionParser.g:419:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:420:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTFunctionParser.g:420:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTBranchStatement"
    // InternalSTFunctionParser.g:429:1: entryRuleSTBranchStatement : ruleSTBranchStatement EOF ;
    public final void entryRuleSTBranchStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:430:1: ( ruleSTBranchStatement EOF )
            // InternalSTFunctionParser.g:431:1: ruleSTBranchStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBranchStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTBranchStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBranchStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTBranchStatement"


    // $ANTLR start "ruleSTBranchStatement"
    // InternalSTFunctionParser.g:438:1: ruleSTBranchStatement : ( ( rule__STBranchStatement__Alternatives ) ) ;
    public final void ruleSTBranchStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:442:2: ( ( ( rule__STBranchStatement__Alternatives ) ) )
            // InternalSTFunctionParser.g:443:2: ( ( rule__STBranchStatement__Alternatives ) )
            {
            // InternalSTFunctionParser.g:443:2: ( ( rule__STBranchStatement__Alternatives ) )
            // InternalSTFunctionParser.g:444:3: ( rule__STBranchStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTBranchStatementAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:445:3: ( rule__STBranchStatement__Alternatives )
            // InternalSTFunctionParser.g:445:4: rule__STBranchStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STBranchStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTBranchStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTBranchStatement"


    // $ANTLR start "entryRuleSTIfStatment"
    // InternalSTFunctionParser.g:454:1: entryRuleSTIfStatment : ruleSTIfStatment EOF ;
    public final void entryRuleSTIfStatment() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:455:1: ( ruleSTIfStatment EOF )
            // InternalSTFunctionParser.g:456:1: ruleSTIfStatment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatment"


    // $ANTLR start "ruleSTIfStatment"
    // InternalSTFunctionParser.g:463:1: ruleSTIfStatment : ( ( rule__STIfStatment__Group__0 ) ) ;
    public final void ruleSTIfStatment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:467:2: ( ( ( rule__STIfStatment__Group__0 ) ) )
            // InternalSTFunctionParser.g:468:2: ( ( rule__STIfStatment__Group__0 ) )
            {
            // InternalSTFunctionParser.g:468:2: ( ( rule__STIfStatment__Group__0 ) )
            // InternalSTFunctionParser.g:469:3: ( rule__STIfStatment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:470:3: ( rule__STIfStatment__Group__0 )
            // InternalSTFunctionParser.g:470:4: rule__STIfStatment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatment"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTFunctionParser.g:479:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:480:1: ( ruleSTElseIfPart EOF )
            // InternalSTFunctionParser.g:481:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTFunctionParser.g:488:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:492:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTFunctionParser.g:493:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTFunctionParser.g:493:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTFunctionParser.g:494:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:495:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTFunctionParser.g:495:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTFunctionParser.g:504:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:505:1: ( ruleSTCaseStatement EOF )
            // InternalSTFunctionParser.g:506:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTFunctionParser.g:513:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:517:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:518:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:518:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTFunctionParser.g:519:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:520:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTFunctionParser.g:520:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTFunctionParser.g:529:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:530:1: ( ruleSTCaseCases EOF )
            // InternalSTFunctionParser.g:531:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTFunctionParser.g:538:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:542:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTFunctionParser.g:543:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTFunctionParser.g:543:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTFunctionParser.g:544:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:545:3: ( rule__STCaseCases__Group__0 )
            // InternalSTFunctionParser.g:545:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTFunctionParser.g:554:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:555:1: ( ruleSTElsePart EOF )
            // InternalSTFunctionParser.g:556:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTFunctionParser.g:563:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:567:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTFunctionParser.g:568:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTFunctionParser.g:568:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTFunctionParser.g:569:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:570:3: ( rule__STElsePart__Group__0 )
            // InternalSTFunctionParser.g:570:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTLoopStatement"
    // InternalSTFunctionParser.g:579:1: entryRuleSTLoopStatement : ruleSTLoopStatement EOF ;
    public final void entryRuleSTLoopStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:580:1: ( ruleSTLoopStatement EOF )
            // InternalSTFunctionParser.g:581:1: ruleSTLoopStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLoopStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLoopStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLoopStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLoopStatement"


    // $ANTLR start "ruleSTLoopStatement"
    // InternalSTFunctionParser.g:588:1: ruleSTLoopStatement : ( ( rule__STLoopStatement__Alternatives ) ) ;
    public final void ruleSTLoopStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:592:2: ( ( ( rule__STLoopStatement__Alternatives ) ) )
            // InternalSTFunctionParser.g:593:2: ( ( rule__STLoopStatement__Alternatives ) )
            {
            // InternalSTFunctionParser.g:593:2: ( ( rule__STLoopStatement__Alternatives ) )
            // InternalSTFunctionParser.g:594:3: ( rule__STLoopStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLoopStatementAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:595:3: ( rule__STLoopStatement__Alternatives )
            // InternalSTFunctionParser.g:595:4: rule__STLoopStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLoopStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLoopStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLoopStatement"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTFunctionParser.g:604:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:605:1: ( ruleSTForStatement EOF )
            // InternalSTFunctionParser.g:606:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTFunctionParser.g:613:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:617:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:618:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:618:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTFunctionParser.g:619:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:620:3: ( rule__STForStatement__Group__0 )
            // InternalSTFunctionParser.g:620:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTFunctionParser.g:629:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:630:1: ( ruleSTWhileStatement EOF )
            // InternalSTFunctionParser.g:631:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTFunctionParser.g:638:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:642:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:643:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:643:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTFunctionParser.g:644:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:645:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTFunctionParser.g:645:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTFunctionParser.g:654:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:655:1: ( ruleSTRepeatStatement EOF )
            // InternalSTFunctionParser.g:656:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTFunctionParser.g:663:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:667:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:668:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:668:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTFunctionParser.g:669:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:670:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTFunctionParser.g:670:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTFunctionParser.g:679:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:680:1: ( ruleSTExpression EOF )
            // InternalSTFunctionParser.g:681:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTFunctionParser.g:688:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:692:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTFunctionParser.g:693:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTFunctionParser.g:693:2: ( ruleSTSubrangeExpression )
            // InternalSTFunctionParser.g:694:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTFunctionParser.g:704:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:705:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTFunctionParser.g:706:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTFunctionParser.g:713:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:717:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:718:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:718:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTFunctionParser.g:719:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:720:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTFunctionParser.g:720:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTFunctionParser.g:729:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:730:1: ( ruleSTOrExpression EOF )
            // InternalSTFunctionParser.g:731:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTFunctionParser.g:738:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:742:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:743:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:743:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTFunctionParser.g:744:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:745:3: ( rule__STOrExpression__Group__0 )
            // InternalSTFunctionParser.g:745:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTFunctionParser.g:754:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:755:1: ( ruleSTXorExpression EOF )
            // InternalSTFunctionParser.g:756:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTFunctionParser.g:763:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:767:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:768:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:768:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTFunctionParser.g:769:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:770:3: ( rule__STXorExpression__Group__0 )
            // InternalSTFunctionParser.g:770:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTFunctionParser.g:779:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:780:1: ( ruleSTAndExpression EOF )
            // InternalSTFunctionParser.g:781:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTFunctionParser.g:788:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:792:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:793:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:793:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTFunctionParser.g:794:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:795:3: ( rule__STAndExpression__Group__0 )
            // InternalSTFunctionParser.g:795:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTFunctionParser.g:804:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:805:1: ( ruleSTEqualityExpression EOF )
            // InternalSTFunctionParser.g:806:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTFunctionParser.g:813:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:817:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:818:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:818:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTFunctionParser.g:819:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:820:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTFunctionParser.g:820:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTFunctionParser.g:829:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:830:1: ( ruleSTComparisonExpression EOF )
            // InternalSTFunctionParser.g:831:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTFunctionParser.g:838:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:842:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:843:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:843:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTFunctionParser.g:844:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:845:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTFunctionParser.g:845:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTFunctionParser.g:854:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:855:1: ( ruleSTAddSubExpression EOF )
            // InternalSTFunctionParser.g:856:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTFunctionParser.g:863:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:867:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:868:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:868:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTFunctionParser.g:869:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:870:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTFunctionParser.g:870:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTFunctionParser.g:879:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:880:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTFunctionParser.g:881:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTFunctionParser.g:888:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:892:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:893:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:893:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTFunctionParser.g:894:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:895:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTFunctionParser.g:895:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTFunctionParser.g:904:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:905:1: ( ruleSTPowerExpression EOF )
            // InternalSTFunctionParser.g:906:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTFunctionParser.g:913:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:917:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:918:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:918:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:919:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:920:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTFunctionParser.g:920:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTSignumExpression"
    // InternalSTFunctionParser.g:929:1: entryRuleSTSignumExpression : ruleSTSignumExpression EOF ;
    public final void entryRuleSTSignumExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:930:1: ( ruleSTSignumExpression EOF )
            // InternalSTFunctionParser.g:931:1: ruleSTSignumExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSignumExpression"


    // $ANTLR start "ruleSTSignumExpression"
    // InternalSTFunctionParser.g:938:1: ruleSTSignumExpression : ( ( rule__STSignumExpression__Alternatives ) ) ;
    public final void ruleSTSignumExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:942:2: ( ( ( rule__STSignumExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:943:2: ( ( rule__STSignumExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:943:2: ( ( rule__STSignumExpression__Alternatives ) )
            // InternalSTFunctionParser.g:944:3: ( rule__STSignumExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:945:3: ( rule__STSignumExpression__Alternatives )
            // InternalSTFunctionParser.g:945:4: rule__STSignumExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSignumExpression"


    // $ANTLR start "entryRuleSTSelectionExpression"
    // InternalSTFunctionParser.g:954:1: entryRuleSTSelectionExpression : ruleSTSelectionExpression EOF ;
    public final void entryRuleSTSelectionExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:955:1: ( ruleSTSelectionExpression EOF )
            // InternalSTFunctionParser.g:956:1: ruleSTSelectionExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSelectionExpression"


    // $ANTLR start "ruleSTSelectionExpression"
    // InternalSTFunctionParser.g:963:1: ruleSTSelectionExpression : ( ( rule__STSelectionExpression__Group__0 ) ) ;
    public final void ruleSTSelectionExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:967:2: ( ( ( rule__STSelectionExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:968:2: ( ( rule__STSelectionExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:968:2: ( ( rule__STSelectionExpression__Group__0 ) )
            // InternalSTFunctionParser.g:969:3: ( rule__STSelectionExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:970:3: ( rule__STSelectionExpression__Group__0 )
            // InternalSTFunctionParser.g:970:4: rule__STSelectionExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSelectionExpression"


    // $ANTLR start "entryRuleMultibitPartialAccess"
    // InternalSTFunctionParser.g:979:1: entryRuleMultibitPartialAccess : ruleMultibitPartialAccess EOF ;
    public final void entryRuleMultibitPartialAccess() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:980:1: ( ruleMultibitPartialAccess EOF )
            // InternalSTFunctionParser.g:981:1: ruleMultibitPartialAccess EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleMultibitPartialAccess"


    // $ANTLR start "ruleMultibitPartialAccess"
    // InternalSTFunctionParser.g:988:1: ruleMultibitPartialAccess : ( ( rule__MultibitPartialAccess__Group__0 ) ) ;
    public final void ruleMultibitPartialAccess() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:992:2: ( ( ( rule__MultibitPartialAccess__Group__0 ) ) )
            // InternalSTFunctionParser.g:993:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            {
            // InternalSTFunctionParser.g:993:2: ( ( rule__MultibitPartialAccess__Group__0 ) )
            // InternalSTFunctionParser.g:994:3: ( rule__MultibitPartialAccess__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:995:3: ( rule__MultibitPartialAccess__Group__0 )
            // InternalSTFunctionParser.g:995:4: rule__MultibitPartialAccess__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultibitPartialAccess"


    // $ANTLR start "entryRuleSTAtomicExpression"
    // InternalSTFunctionParser.g:1004:1: entryRuleSTAtomicExpression : ruleSTAtomicExpression EOF ;
    public final void entryRuleSTAtomicExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1005:1: ( ruleSTAtomicExpression EOF )
            // InternalSTFunctionParser.g:1006:1: ruleSTAtomicExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAtomicExpression"


    // $ANTLR start "ruleSTAtomicExpression"
    // InternalSTFunctionParser.g:1013:1: ruleSTAtomicExpression : ( ( rule__STAtomicExpression__Alternatives ) ) ;
    public final void ruleSTAtomicExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1017:2: ( ( ( rule__STAtomicExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:1018:2: ( ( rule__STAtomicExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1018:2: ( ( rule__STAtomicExpression__Alternatives ) )
            // InternalSTFunctionParser.g:1019:3: ( rule__STAtomicExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1020:3: ( rule__STAtomicExpression__Alternatives )
            // InternalSTFunctionParser.g:1020:4: rule__STAtomicExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAtomicExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTFunctionParser.g:1029:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1030:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTFunctionParser.g:1031:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTFunctionParser.g:1038:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1042:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTFunctionParser.g:1043:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1043:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTFunctionParser.g:1044:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1045:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTFunctionParser.g:1045:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleBOOL_LITERAL"
    // InternalSTFunctionParser.g:1054:1: entryRuleBOOL_LITERAL : ruleBOOL_LITERAL EOF ;
    public final void entryRuleBOOL_LITERAL() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1055:1: ( ruleBOOL_LITERAL EOF )
            // InternalSTFunctionParser.g:1056:1: ruleBOOL_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBOOL_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBOOL_LITERAL"


    // $ANTLR start "ruleBOOL_LITERAL"
    // InternalSTFunctionParser.g:1063:1: ruleBOOL_LITERAL : ( ( rule__BOOL_LITERAL__Group__0 ) ) ;
    public final void ruleBOOL_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1067:2: ( ( ( rule__BOOL_LITERAL__Group__0 ) ) )
            // InternalSTFunctionParser.g:1068:2: ( ( rule__BOOL_LITERAL__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1068:2: ( ( rule__BOOL_LITERAL__Group__0 ) )
            // InternalSTFunctionParser.g:1069:3: ( rule__BOOL_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1070:3: ( rule__BOOL_LITERAL__Group__0 )
            // InternalSTFunctionParser.g:1070:4: rule__BOOL_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBOOL_LITERAL"


    // $ANTLR start "entryRuleNUMERIC_LITERAL"
    // InternalSTFunctionParser.g:1079:1: entryRuleNUMERIC_LITERAL : ruleNUMERIC_LITERAL EOF ;
    public final void entryRuleNUMERIC_LITERAL() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1080:1: ( ruleNUMERIC_LITERAL EOF )
            // InternalSTFunctionParser.g:1081:1: ruleNUMERIC_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNUMERIC_LITERAL"


    // $ANTLR start "ruleNUMERIC_LITERAL"
    // InternalSTFunctionParser.g:1088:1: ruleNUMERIC_LITERAL : ( ( rule__NUMERIC_LITERAL__Group__0 ) ) ;
    public final void ruleNUMERIC_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1092:2: ( ( ( rule__NUMERIC_LITERAL__Group__0 ) ) )
            // InternalSTFunctionParser.g:1093:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1093:2: ( ( rule__NUMERIC_LITERAL__Group__0 ) )
            // InternalSTFunctionParser.g:1094:3: ( rule__NUMERIC_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1095:3: ( rule__NUMERIC_LITERAL__Group__0 )
            // InternalSTFunctionParser.g:1095:4: rule__NUMERIC_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNUMERIC_LITERAL"


    // $ANTLR start "entryRuleDATE_LITERAL"
    // InternalSTFunctionParser.g:1104:1: entryRuleDATE_LITERAL : ruleDATE_LITERAL EOF ;
    public final void entryRuleDATE_LITERAL() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1105:1: ( ruleDATE_LITERAL EOF )
            // InternalSTFunctionParser.g:1106:1: ruleDATE_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_LITERAL"


    // $ANTLR start "ruleDATE_LITERAL"
    // InternalSTFunctionParser.g:1113:1: ruleDATE_LITERAL : ( ( rule__DATE_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1117:2: ( ( ( rule__DATE_LITERAL__Group__0 ) ) )
            // InternalSTFunctionParser.g:1118:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1118:2: ( ( rule__DATE_LITERAL__Group__0 ) )
            // InternalSTFunctionParser.g:1119:3: ( rule__DATE_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1120:3: ( rule__DATE_LITERAL__Group__0 )
            // InternalSTFunctionParser.g:1120:4: rule__DATE_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_LITERAL"


    // $ANTLR start "entryRuleTIME_LITERAL"
    // InternalSTFunctionParser.g:1129:1: entryRuleTIME_LITERAL : ruleTIME_LITERAL EOF ;
    public final void entryRuleTIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1130:1: ( ruleTIME_LITERAL EOF )
            // InternalSTFunctionParser.g:1131:1: ruleTIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_LITERAL"


    // $ANTLR start "ruleTIME_LITERAL"
    // InternalSTFunctionParser.g:1138:1: ruleTIME_LITERAL : ( ( rule__TIME_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1142:2: ( ( ( rule__TIME_LITERAL__Group__0 ) ) )
            // InternalSTFunctionParser.g:1143:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1143:2: ( ( rule__TIME_LITERAL__Group__0 ) )
            // InternalSTFunctionParser.g:1144:3: ( rule__TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1145:3: ( rule__TIME_LITERAL__Group__0 )
            // InternalSTFunctionParser.g:1145:4: rule__TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_LITERAL"


    // $ANTLR start "entryRuleTIME_OF_DAY_LITERAL"
    // InternalSTFunctionParser.g:1154:1: entryRuleTIME_OF_DAY_LITERAL : ruleTIME_OF_DAY_LITERAL EOF ;
    public final void entryRuleTIME_OF_DAY_LITERAL() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1155:1: ( ruleTIME_OF_DAY_LITERAL EOF )
            // InternalSTFunctionParser.g:1156:1: ruleTIME_OF_DAY_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY_LITERAL"


    // $ANTLR start "ruleTIME_OF_DAY_LITERAL"
    // InternalSTFunctionParser.g:1163:1: ruleTIME_OF_DAY_LITERAL : ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1167:2: ( ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) ) )
            // InternalSTFunctionParser.g:1168:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1168:2: ( ( rule__TIME_OF_DAY_LITERAL__Group__0 ) )
            // InternalSTFunctionParser.g:1169:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1170:3: ( rule__TIME_OF_DAY_LITERAL__Group__0 )
            // InternalSTFunctionParser.g:1170:4: rule__TIME_OF_DAY_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY_LITERAL"


    // $ANTLR start "entryRuleDATE_AND_TIME_LITERAL"
    // InternalSTFunctionParser.g:1179:1: entryRuleDATE_AND_TIME_LITERAL : ruleDATE_AND_TIME_LITERAL EOF ;
    public final void entryRuleDATE_AND_TIME_LITERAL() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1180:1: ( ruleDATE_AND_TIME_LITERAL EOF )
            // InternalSTFunctionParser.g:1181:1: ruleDATE_AND_TIME_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE_AND_TIME_LITERAL"


    // $ANTLR start "ruleDATE_AND_TIME_LITERAL"
    // InternalSTFunctionParser.g:1188:1: ruleDATE_AND_TIME_LITERAL : ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) ;
    public final void ruleDATE_AND_TIME_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1192:2: ( ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) ) )
            // InternalSTFunctionParser.g:1193:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1193:2: ( ( rule__DATE_AND_TIME_LITERAL__Group__0 ) )
            // InternalSTFunctionParser.g:1194:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1195:3: ( rule__DATE_AND_TIME_LITERAL__Group__0 )
            // InternalSTFunctionParser.g:1195:4: rule__DATE_AND_TIME_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE_AND_TIME_LITERAL"


    // $ANTLR start "entryRuleSTRING_LITERAL"
    // InternalSTFunctionParser.g:1204:1: entryRuleSTRING_LITERAL : ruleSTRING_LITERAL EOF ;
    public final void entryRuleSTRING_LITERAL() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1205:1: ( ruleSTRING_LITERAL EOF )
            // InternalSTFunctionParser.g:1206:1: ruleSTRING_LITERAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRING_LITERAL"


    // $ANTLR start "ruleSTRING_LITERAL"
    // InternalSTFunctionParser.g:1213:1: ruleSTRING_LITERAL : ( ( rule__STRING_LITERAL__Group__0 ) ) ;
    public final void ruleSTRING_LITERAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1217:2: ( ( ( rule__STRING_LITERAL__Group__0 ) ) )
            // InternalSTFunctionParser.g:1218:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1218:2: ( ( rule__STRING_LITERAL__Group__0 ) )
            // InternalSTFunctionParser.g:1219:3: ( rule__STRING_LITERAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1220:3: ( rule__STRING_LITERAL__Group__0 )
            // InternalSTFunctionParser.g:1220:4: rule__STRING_LITERAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRING_LITERAL"


    // $ANTLR start "entryRuleINTEGER"
    // InternalSTFunctionParser.g:1229:1: entryRuleINTEGER : ruleINTEGER EOF ;
    public final void entryRuleINTEGER() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1230:1: ( ruleINTEGER EOF )
            // InternalSTFunctionParser.g:1231:1: ruleINTEGER EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleINTEGER"


    // $ANTLR start "ruleINTEGER"
    // InternalSTFunctionParser.g:1238:1: ruleINTEGER : ( ( rule__INTEGER__Group__0 ) ) ;
    public final void ruleINTEGER() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1242:2: ( ( ( rule__INTEGER__Group__0 ) ) )
            // InternalSTFunctionParser.g:1243:2: ( ( rule__INTEGER__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1243:2: ( ( rule__INTEGER__Group__0 ) )
            // InternalSTFunctionParser.g:1244:3: ( rule__INTEGER__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1245:3: ( rule__INTEGER__Group__0 )
            // InternalSTFunctionParser.g:1245:4: rule__INTEGER__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleINTEGER"


    // $ANTLR start "entryRuleREAL"
    // InternalSTFunctionParser.g:1254:1: entryRuleREAL : ruleREAL EOF ;
    public final void entryRuleREAL() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1255:1: ( ruleREAL EOF )
            // InternalSTFunctionParser.g:1256:1: ruleREAL EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleREAL"


    // $ANTLR start "ruleREAL"
    // InternalSTFunctionParser.g:1263:1: ruleREAL : ( ( rule__REAL__Group__0 ) ) ;
    public final void ruleREAL() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1267:2: ( ( ( rule__REAL__Group__0 ) ) )
            // InternalSTFunctionParser.g:1268:2: ( ( rule__REAL__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1268:2: ( ( rule__REAL__Group__0 ) )
            // InternalSTFunctionParser.g:1269:3: ( rule__REAL__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1270:3: ( rule__REAL__Group__0 )
            // InternalSTFunctionParser.g:1270:4: rule__REAL__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleREAL"


    // $ANTLR start "entryRuleDATE"
    // InternalSTFunctionParser.g:1279:1: entryRuleDATE : ruleDATE EOF ;
    public final void entryRuleDATE() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1280:1: ( ruleDATE EOF )
            // InternalSTFunctionParser.g:1281:1: ruleDATE EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATERule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATERule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDATE"


    // $ANTLR start "ruleDATE"
    // InternalSTFunctionParser.g:1288:1: ruleDATE : ( ( rule__DATE__Group__0 ) ) ;
    public final void ruleDATE() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1292:2: ( ( ( rule__DATE__Group__0 ) ) )
            // InternalSTFunctionParser.g:1293:2: ( ( rule__DATE__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1293:2: ( ( rule__DATE__Group__0 ) )
            // InternalSTFunctionParser.g:1294:3: ( rule__DATE__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1295:3: ( rule__DATE__Group__0 )
            // InternalSTFunctionParser.g:1295:4: rule__DATE__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDATE"


    // $ANTLR start "entryRuleTIME_OF_DAY"
    // InternalSTFunctionParser.g:1304:1: entryRuleTIME_OF_DAY : ruleTIME_OF_DAY EOF ;
    public final void entryRuleTIME_OF_DAY() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1305:1: ( ruleTIME_OF_DAY EOF )
            // InternalSTFunctionParser.g:1306:1: ruleTIME_OF_DAY EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTIME_OF_DAY"


    // $ANTLR start "ruleTIME_OF_DAY"
    // InternalSTFunctionParser.g:1313:1: ruleTIME_OF_DAY : ( ( rule__TIME_OF_DAY__Group__0 ) ) ;
    public final void ruleTIME_OF_DAY() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1317:2: ( ( ( rule__TIME_OF_DAY__Group__0 ) ) )
            // InternalSTFunctionParser.g:1318:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1318:2: ( ( rule__TIME_OF_DAY__Group__0 ) )
            // InternalSTFunctionParser.g:1319:3: ( rule__TIME_OF_DAY__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1320:3: ( rule__TIME_OF_DAY__Group__0 )
            // InternalSTFunctionParser.g:1320:4: rule__TIME_OF_DAY__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTIME_OF_DAY"


    // $ANTLR start "ruleMultiBitAccessSpecifier"
    // InternalSTFunctionParser.g:1329:1: ruleMultiBitAccessSpecifier : ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1333:1: ( ( ( rule__MultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTFunctionParser.g:1334:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1334:2: ( ( rule__MultiBitAccessSpecifier__Alternatives ) )
            // InternalSTFunctionParser.g:1335:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1336:3: ( rule__MultiBitAccessSpecifier__Alternatives )
            // InternalSTFunctionParser.g:1336:4: rule__MultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMultiBitAccessSpecifier"


    // $ANTLR start "rule__FunctionDefinition__Alternatives_3"
    // InternalSTFunctionParser.g:1344:1: rule__FunctionDefinition__Alternatives_3 : ( ( ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 ) ) | ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 ) ) | ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 ) ) | ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 ) ) );
    public final void rule__FunctionDefinition__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1348:1: ( ( ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 ) ) | ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 ) ) | ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 ) ) | ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 ) ) )
            int alt2=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt2=1;
                }
                break;
            case VAR_TEMP:
                {
                alt2=2;
                }
                break;
            case VAR_INPUT:
                {
                alt2=3;
                }
                break;
            case VAR_OUTPUT:
                {
                alt2=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 2, 0, input);

                throw nvae;
            }

            switch (alt2) {
                case 1 :
                    // InternalSTFunctionParser.g:1349:2: ( ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 ) )
                    {
                    // InternalSTFunctionParser.g:1349:2: ( ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 ) )
                    // InternalSTFunctionParser.g:1350:3: ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsAssignment_3_0()); 
                    }
                    // InternalSTFunctionParser.g:1351:3: ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 )
                    // InternalSTFunctionParser.g:1351:4: rule__FunctionDefinition__VarDeclarationsAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarDeclarationsAssignment_3_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsAssignment_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1355:2: ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 ) )
                    {
                    // InternalSTFunctionParser.g:1355:2: ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 ) )
                    // InternalSTFunctionParser.g:1356:3: ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsAssignment_3_1()); 
                    }
                    // InternalSTFunctionParser.g:1357:3: ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 )
                    // InternalSTFunctionParser.g:1357:4: rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsAssignment_3_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1361:2: ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 ) )
                    {
                    // InternalSTFunctionParser.g:1361:2: ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 ) )
                    // InternalSTFunctionParser.g:1362:3: ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsAssignment_3_2()); 
                    }
                    // InternalSTFunctionParser.g:1363:3: ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 )
                    // InternalSTFunctionParser.g:1363:4: rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsAssignment_3_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1367:2: ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 ) )
                    {
                    // InternalSTFunctionParser.g:1367:2: ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 ) )
                    // InternalSTFunctionParser.g:1368:3: ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsAssignment_3_3()); 
                    }
                    // InternalSTFunctionParser.g:1369:3: ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 )
                    // InternalSTFunctionParser.g:1369:4: rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsAssignment_3_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Alternatives_3"


    // $ANTLR start "rule__VarDeclaration__Alternatives_3_1"
    // InternalSTFunctionParser.g:1377:1: rule__VarDeclaration__Alternatives_3_1 : ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) );
    public final void rule__VarDeclaration__Alternatives_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1381:1: ( ( ( rule__VarDeclaration__Group_3_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_3_1_1__0 ) ) )
            int alt3=2;
            int LA3_0 = input.LA(1);

            if ( (LA3_0==LeftSquareBracket) ) {
                int LA3_1 = input.LA(2);

                if ( (LA3_1==Asterisk) ) {
                    alt3=2;
                }
                else if ( ((LA3_1>=LDATE_AND_TIME && LA3_1<=DATE_AND_TIME)||LA3_1==TIME_OF_DAY||LA3_1==WSTRING||(LA3_1>=STRING && LA3_1<=DWORD)||(LA3_1>=LDATE && LA3_1<=LWORD)||(LA3_1>=UDINT && LA3_1<=WCHAR)||(LA3_1>=BOOL && LA3_1<=DINT)||(LA3_1>=LINT && LA3_1<=UINT)||LA3_1==WORD||(LA3_1>=INT && LA3_1<=LDT)||LA3_1==TOD||LA3_1==DT||(LA3_1>=LD && LA3_1<=LT)||LA3_1==NOT||LA3_1==D||LA3_1==T||LA3_1==LeftParenthesis||LA3_1==PlusSign||LA3_1==HyphenMinus||LA3_1==RULE_BOOL_VALUES||(LA3_1>=RULE_NON_DECIMAL && LA3_1<=RULE_INT)||(LA3_1>=RULE_ID && LA3_1<=RULE_STRING)) ) {
                    alt3=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 3, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }
            switch (alt3) {
                case 1 :
                    // InternalSTFunctionParser.g:1382:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1382:2: ( ( rule__VarDeclaration__Group_3_1_0__0 ) )
                    // InternalSTFunctionParser.g:1383:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }
                    // InternalSTFunctionParser.g:1384:3: ( rule__VarDeclaration__Group_3_1_0__0 )
                    // InternalSTFunctionParser.g:1384:4: rule__VarDeclaration__Group_3_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1388:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1388:2: ( ( rule__VarDeclaration__Group_3_1_1__0 ) )
                    // InternalSTFunctionParser.g:1389:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }
                    // InternalSTFunctionParser.g:1390:3: ( rule__VarDeclaration__Group_3_1_1__0 )
                    // InternalSTFunctionParser.g:1390:4: rule__VarDeclaration__Group_3_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_3_1"


    // $ANTLR start "rule__InitializerExpression__Alternatives"
    // InternalSTFunctionParser.g:1398:1: rule__InitializerExpression__Alternatives : ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) );
    public final void rule__InitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1402:1: ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( ((LA4_0>=LDATE_AND_TIME && LA4_0<=DATE_AND_TIME)||LA4_0==TIME_OF_DAY||LA4_0==WSTRING||(LA4_0>=STRING && LA4_0<=DWORD)||(LA4_0>=LDATE && LA4_0<=LWORD)||(LA4_0>=UDINT && LA4_0<=WCHAR)||(LA4_0>=BOOL && LA4_0<=DINT)||(LA4_0>=LINT && LA4_0<=UINT)||LA4_0==WORD||(LA4_0>=INT && LA4_0<=LDT)||LA4_0==TOD||LA4_0==DT||(LA4_0>=LD && LA4_0<=LT)||LA4_0==NOT||LA4_0==D||LA4_0==T||LA4_0==LeftParenthesis||LA4_0==PlusSign||LA4_0==HyphenMinus||LA4_0==RULE_BOOL_VALUES||(LA4_0>=RULE_NON_DECIMAL && LA4_0<=RULE_INT)||(LA4_0>=RULE_ID && LA4_0<=RULE_STRING)) ) {
                alt4=1;
            }
            else if ( (LA4_0==LeftSquareBracket) ) {
                alt4=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSTFunctionParser.g:1403:2: ( ruleSTExpression )
                    {
                    // InternalSTFunctionParser.g:1403:2: ( ruleSTExpression )
                    // InternalSTFunctionParser.g:1404:3: ruleSTExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1409:2: ( ruleArrayInitializerExpression )
                    {
                    // InternalSTFunctionParser.g:1409:2: ( ruleArrayInitializerExpression )
                    // InternalSTFunctionParser.g:1410:3: ruleArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTFunctionParser.g:1419:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) | ( ( rule__STStatement__Group_2__0 ) ) | ( ( rule__STStatement__Group_3__0 ) ) | ( ( rule__STStatement__Group_4__0 ) ) | ( ( rule__STStatement__Group_5__0 ) ) | ( ( rule__STStatement__Group_6__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1423:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) | ( ( rule__STStatement__Group_2__0 ) ) | ( ( rule__STStatement__Group_3__0 ) ) | ( ( rule__STStatement__Group_4__0 ) ) | ( ( rule__STStatement__Group_5__0 ) ) | ( ( rule__STStatement__Group_6__0 ) ) )
            int alt5=7;
            switch ( input.LA(1) ) {
            case CASE:
            case IF:
                {
                alt5=1;
                }
                break;
            case REPEAT:
            case WHILE:
            case FOR:
                {
                alt5=2;
                }
                break;
            case RULE_ID:
                {
                alt5=3;
                }
                break;
            case Semicolon:
                {
                alt5=4;
                }
                break;
            case RETURN:
                {
                alt5=5;
                }
                break;
            case CONTINUE:
                {
                alt5=6;
                }
                break;
            case EXIT:
                {
                alt5=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }

            switch (alt5) {
                case 1 :
                    // InternalSTFunctionParser.g:1424:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1424:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTFunctionParser.g:1425:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:1426:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTFunctionParser.g:1426:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1430:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1430:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTFunctionParser.g:1431:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:1432:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTFunctionParser.g:1432:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1436:2: ( ( rule__STStatement__Group_2__0 ) )
                    {
                    // InternalSTFunctionParser.g:1436:2: ( ( rule__STStatement__Group_2__0 ) )
                    // InternalSTFunctionParser.g:1437:3: ( rule__STStatement__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_2()); 
                    }
                    // InternalSTFunctionParser.g:1438:3: ( rule__STStatement__Group_2__0 )
                    // InternalSTFunctionParser.g:1438:4: rule__STStatement__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1442:2: ( ( rule__STStatement__Group_3__0 ) )
                    {
                    // InternalSTFunctionParser.g:1442:2: ( ( rule__STStatement__Group_3__0 ) )
                    // InternalSTFunctionParser.g:1443:3: ( rule__STStatement__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_3()); 
                    }
                    // InternalSTFunctionParser.g:1444:3: ( rule__STStatement__Group_3__0 )
                    // InternalSTFunctionParser.g:1444:4: rule__STStatement__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:1448:2: ( ( rule__STStatement__Group_4__0 ) )
                    {
                    // InternalSTFunctionParser.g:1448:2: ( ( rule__STStatement__Group_4__0 ) )
                    // InternalSTFunctionParser.g:1449:3: ( rule__STStatement__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_4()); 
                    }
                    // InternalSTFunctionParser.g:1450:3: ( rule__STStatement__Group_4__0 )
                    // InternalSTFunctionParser.g:1450:4: rule__STStatement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:1454:2: ( ( rule__STStatement__Group_5__0 ) )
                    {
                    // InternalSTFunctionParser.g:1454:2: ( ( rule__STStatement__Group_5__0 ) )
                    // InternalSTFunctionParser.g:1455:3: ( rule__STStatement__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_5()); 
                    }
                    // InternalSTFunctionParser.g:1456:3: ( rule__STStatement__Group_5__0 )
                    // InternalSTFunctionParser.g:1456:4: rule__STStatement__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:1460:2: ( ( rule__STStatement__Group_6__0 ) )
                    {
                    // InternalSTFunctionParser.g:1460:2: ( ( rule__STStatement__Group_6__0 ) )
                    // InternalSTFunctionParser.g:1461:3: ( rule__STStatement__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_6()); 
                    }
                    // InternalSTFunctionParser.g:1462:3: ( rule__STStatement__Group_6__0 )
                    // InternalSTFunctionParser.g:1462:4: rule__STStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STBranchStatement__Alternatives"
    // InternalSTFunctionParser.g:1470:1: rule__STBranchStatement__Alternatives : ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) );
    public final void rule__STBranchStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1474:1: ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( (LA6_0==IF) ) {
                alt6=1;
            }
            else if ( (LA6_0==CASE) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSTFunctionParser.g:1475:2: ( ruleSTIfStatment )
                    {
                    // InternalSTFunctionParser.g:1475:2: ( ruleSTIfStatment )
                    // InternalSTFunctionParser.g:1476:3: ruleSTIfStatment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTBranchStatementAccess().getSTIfStatmentParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTBranchStatementAccess().getSTIfStatmentParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1481:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTFunctionParser.g:1481:2: ( ruleSTCaseStatement )
                    // InternalSTFunctionParser.g:1482:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTBranchStatementAccess().getSTCaseStatementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTBranchStatementAccess().getSTCaseStatementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STBranchStatement__Alternatives"


    // $ANTLR start "rule__STLoopStatement__Alternatives"
    // InternalSTFunctionParser.g:1491:1: rule__STLoopStatement__Alternatives : ( ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) );
    public final void rule__STLoopStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1495:1: ( ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) )
            int alt7=3;
            switch ( input.LA(1) ) {
            case FOR:
                {
                alt7=1;
                }
                break;
            case WHILE:
                {
                alt7=2;
                }
                break;
            case REPEAT:
                {
                alt7=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalSTFunctionParser.g:1496:2: ( ruleSTForStatement )
                    {
                    // InternalSTFunctionParser.g:1496:2: ( ruleSTForStatement )
                    // InternalSTFunctionParser.g:1497:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementAccess().getSTForStatementParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementAccess().getSTForStatementParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1502:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTFunctionParser.g:1502:2: ( ruleSTWhileStatement )
                    // InternalSTFunctionParser.g:1503:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementAccess().getSTWhileStatementParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementAccess().getSTWhileStatementParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1508:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTFunctionParser.g:1508:2: ( ruleSTRepeatStatement )
                    // InternalSTFunctionParser.g:1509:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLoopStatementAccess().getSTRepeatStatementParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLoopStatementAccess().getSTRepeatStatementParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLoopStatement__Alternatives"


    // $ANTLR start "rule__STAndExpression__OpAlternatives_1_0_1_0"
    // InternalSTFunctionParser.g:1518:1: rule__STAndExpression__OpAlternatives_1_0_1_0 : ( ( Ampersand ) | ( AND ) );
    public final void rule__STAndExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1522:1: ( ( Ampersand ) | ( AND ) )
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( (LA8_0==Ampersand) ) {
                alt8=1;
            }
            else if ( (LA8_0==AND) ) {
                alt8=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }
            switch (alt8) {
                case 1 :
                    // InternalSTFunctionParser.g:1523:2: ( Ampersand )
                    {
                    // InternalSTFunctionParser.g:1523:2: ( Ampersand )
                    // InternalSTFunctionParser.g:1524:3: Ampersand
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAndExpressionAccess().getOpAmpersandKeyword_1_0_1_0_0()); 
                    }
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAndExpressionAccess().getOpAmpersandKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1529:2: ( AND )
                    {
                    // InternalSTFunctionParser.g:1529:2: ( AND )
                    // InternalSTFunctionParser.g:1530:3: AND
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAndExpressionAccess().getOpANDKeyword_1_0_1_0_1()); 
                    }
                    match(input,AND,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAndExpressionAccess().getOpANDKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STEqualityExpression__OpAlternatives_1_0_1_0"
    // InternalSTFunctionParser.g:1539:1: rule__STEqualityExpression__OpAlternatives_1_0_1_0 : ( ( EqualsSign ) | ( LessThanSignGreaterThanSign ) );
    public final void rule__STEqualityExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1543:1: ( ( EqualsSign ) | ( LessThanSignGreaterThanSign ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==EqualsSign) ) {
                alt9=1;
            }
            else if ( (LA9_0==LessThanSignGreaterThanSign) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSTFunctionParser.g:1544:2: ( EqualsSign )
                    {
                    // InternalSTFunctionParser.g:1544:2: ( EqualsSign )
                    // InternalSTFunctionParser.g:1545:3: EqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_1_0_0()); 
                    }
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualsSignKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1550:2: ( LessThanSignGreaterThanSign )
                    {
                    // InternalSTFunctionParser.g:1550:2: ( LessThanSignGreaterThanSign )
                    // InternalSTFunctionParser.g:1551:3: LessThanSignGreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTEqualityExpressionAccess().getOpLessThanSignGreaterThanSignKeyword_1_0_1_0_1()); 
                    }
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTEqualityExpressionAccess().getOpLessThanSignGreaterThanSignKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STComparisonExpression__OpAlternatives_1_0_1_0"
    // InternalSTFunctionParser.g:1560:1: rule__STComparisonExpression__OpAlternatives_1_0_1_0 : ( ( LessThanSign ) | ( GreaterThanSign ) | ( LessThanSignEqualsSign ) | ( GreaterThanSignEqualsSign ) );
    public final void rule__STComparisonExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1564:1: ( ( LessThanSign ) | ( GreaterThanSign ) | ( LessThanSignEqualsSign ) | ( GreaterThanSignEqualsSign ) )
            int alt10=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt10=1;
                }
                break;
            case GreaterThanSign:
                {
                alt10=2;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt10=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt10=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }

            switch (alt10) {
                case 1 :
                    // InternalSTFunctionParser.g:1565:2: ( LessThanSign )
                    {
                    // InternalSTFunctionParser.g:1565:2: ( LessThanSign )
                    // InternalSTFunctionParser.g:1566:3: LessThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTComparisonExpressionAccess().getOpLessThanSignKeyword_1_0_1_0_0()); 
                    }
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTComparisonExpressionAccess().getOpLessThanSignKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1571:2: ( GreaterThanSign )
                    {
                    // InternalSTFunctionParser.g:1571:2: ( GreaterThanSign )
                    // InternalSTFunctionParser.g:1572:3: GreaterThanSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_0_1_0_1()); 
                    }
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTComparisonExpressionAccess().getOpGreaterThanSignKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1577:2: ( LessThanSignEqualsSign )
                    {
                    // InternalSTFunctionParser.g:1577:2: ( LessThanSignEqualsSign )
                    // InternalSTFunctionParser.g:1578:3: LessThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_2()); 
                    }
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTComparisonExpressionAccess().getOpLessThanSignEqualsSignKeyword_1_0_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1583:2: ( GreaterThanSignEqualsSign )
                    {
                    // InternalSTFunctionParser.g:1583:2: ( GreaterThanSignEqualsSign )
                    // InternalSTFunctionParser.g:1584:3: GreaterThanSignEqualsSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_3()); 
                    }
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTComparisonExpressionAccess().getOpGreaterThanSignEqualsSignKeyword_1_0_1_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STAddSubExpression__OpAlternatives_1_0_1_0"
    // InternalSTFunctionParser.g:1593:1: rule__STAddSubExpression__OpAlternatives_1_0_1_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__STAddSubExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1597:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==PlusSign) ) {
                alt11=1;
            }
            else if ( (LA11_0==HyphenMinus) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSTFunctionParser.g:1598:2: ( PlusSign )
                    {
                    // InternalSTFunctionParser.g:1598:2: ( PlusSign )
                    // InternalSTFunctionParser.g:1599:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAddSubExpressionAccess().getOpPlusSignKeyword_1_0_1_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAddSubExpressionAccess().getOpPlusSignKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1604:2: ( HyphenMinus )
                    {
                    // InternalSTFunctionParser.g:1604:2: ( HyphenMinus )
                    // InternalSTFunctionParser.g:1605:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAddSubExpressionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAddSubExpressionAccess().getOpHyphenMinusKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STMulDivModExpression__OpAlternatives_1_0_1_0"
    // InternalSTFunctionParser.g:1614:1: rule__STMulDivModExpression__OpAlternatives_1_0_1_0 : ( ( Asterisk ) | ( Solidus ) | ( MOD ) );
    public final void rule__STMulDivModExpression__OpAlternatives_1_0_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1618:1: ( ( Asterisk ) | ( Solidus ) | ( MOD ) )
            int alt12=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt12=1;
                }
                break;
            case Solidus:
                {
                alt12=2;
                }
                break;
            case MOD:
                {
                alt12=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTFunctionParser.g:1619:2: ( Asterisk )
                    {
                    // InternalSTFunctionParser.g:1619:2: ( Asterisk )
                    // InternalSTFunctionParser.g:1620:3: Asterisk
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMulDivModExpressionAccess().getOpAsteriskKeyword_1_0_1_0_0()); 
                    }
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMulDivModExpressionAccess().getOpAsteriskKeyword_1_0_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1625:2: ( Solidus )
                    {
                    // InternalSTFunctionParser.g:1625:2: ( Solidus )
                    // InternalSTFunctionParser.g:1626:3: Solidus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMulDivModExpressionAccess().getOpSolidusKeyword_1_0_1_0_1()); 
                    }
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMulDivModExpressionAccess().getOpSolidusKeyword_1_0_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1631:2: ( MOD )
                    {
                    // InternalSTFunctionParser.g:1631:2: ( MOD )
                    // InternalSTFunctionParser.g:1632:3: MOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMulDivModExpressionAccess().getOpMODKeyword_1_0_1_0_2()); 
                    }
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMulDivModExpressionAccess().getOpMODKeyword_1_0_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAlternatives_1_0_1_0"


    // $ANTLR start "rule__STSignumExpression__Alternatives"
    // InternalSTFunctionParser.g:1641:1: rule__STSignumExpression__Alternatives : ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) );
    public final void rule__STSignumExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1645:1: ( ( ruleSTLiteralExpressions ) | ( ruleSTSelectionExpression ) | ( ( rule__STSignumExpression__Group_2__0 ) ) )
            int alt13=3;
            switch ( input.LA(1) ) {
            case NOT:
                {
                int LA13_1 = input.LA(2);

                if ( (LA13_1==DWORD||LA13_1==LREAL||LA13_1==LWORD||(LA13_1>=UDINT && LA13_1<=USINT)||(LA13_1>=BOOL && LA13_1<=BYTE)||LA13_1==DINT||LA13_1==LINT||(LA13_1>=REAL && LA13_1<=SINT)||LA13_1==UINT||LA13_1==WORD||LA13_1==INT||LA13_1==PlusSign||LA13_1==HyphenMinus||LA13_1==RULE_BOOL_VALUES||(LA13_1>=RULE_NON_DECIMAL && LA13_1<=RULE_INT)) ) {
                    alt13=1;
                }
                else if ( (LA13_1==LeftParenthesis||LA13_1==RULE_ID) ) {
                    alt13=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 1, input);

                    throw nvae;
                }
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case D:
            case T:
            case RULE_BOOL_VALUES:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
                {
                alt13=1;
                }
                break;
            case PlusSign:
                {
                int LA13_3 = input.LA(2);

                if ( (LA13_3==LeftParenthesis||LA13_3==RULE_ID) ) {
                    alt13=3;
                }
                else if ( (LA13_3==RULE_INT) ) {
                    alt13=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 3, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA13_4 = input.LA(2);

                if ( (LA13_4==RULE_INT) ) {
                    alt13=1;
                }
                else if ( (LA13_4==LeftParenthesis||LA13_4==RULE_ID) ) {
                    alt13=3;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 13, 4, input);

                    throw nvae;
                }
                }
                break;
            case LeftParenthesis:
            case RULE_ID:
                {
                alt13=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTFunctionParser.g:1646:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTFunctionParser.g:1646:2: ( ruleSTLiteralExpressions )
                    // InternalSTFunctionParser.g:1647:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTLiteralExpressionsParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1652:2: ( ruleSTSelectionExpression )
                    {
                    // InternalSTFunctionParser.g:1652:2: ( ruleSTSelectionExpression )
                    // InternalSTFunctionParser.g:1653:3: ruleSTSelectionExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTSelectionExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSTSelectionExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1658:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    {
                    // InternalSTFunctionParser.g:1658:2: ( ( rule__STSignumExpression__Group_2__0 ) )
                    // InternalSTFunctionParser.g:1659:3: ( rule__STSignumExpression__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }
                    // InternalSTFunctionParser.g:1660:3: ( rule__STSignumExpression__Group_2__0 )
                    // InternalSTFunctionParser.g:1660:4: rule__STSignumExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSignumExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Alternatives"


    // $ANTLR start "rule__STSignumExpression__SignumAlternatives_2_1_0"
    // InternalSTFunctionParser.g:1668:1: rule__STSignumExpression__SignumAlternatives_2_1_0 : ( ( HyphenMinus ) | ( PlusSign ) | ( NOT ) );
    public final void rule__STSignumExpression__SignumAlternatives_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1672:1: ( ( HyphenMinus ) | ( PlusSign ) | ( NOT ) )
            int alt14=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt14=1;
                }
                break;
            case PlusSign:
                {
                alt14=2;
                }
                break;
            case NOT:
                {
                alt14=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalSTFunctionParser.g:1673:2: ( HyphenMinus )
                    {
                    // InternalSTFunctionParser.g:1673:2: ( HyphenMinus )
                    // InternalSTFunctionParser.g:1674:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSignumHyphenMinusKeyword_2_1_0_0()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSignumHyphenMinusKeyword_2_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1679:2: ( PlusSign )
                    {
                    // InternalSTFunctionParser.g:1679:2: ( PlusSign )
                    // InternalSTFunctionParser.g:1680:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSignumPlusSignKeyword_2_1_0_1()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSignumPlusSignKeyword_2_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1685:2: ( NOT )
                    {
                    // InternalSTFunctionParser.g:1685:2: ( NOT )
                    // InternalSTFunctionParser.g:1686:3: NOT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSignumExpressionAccess().getSignumNOTKeyword_2_1_0_2()); 
                    }
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSignumExpressionAccess().getSignumNOTKeyword_2_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__SignumAlternatives_2_1_0"


    // $ANTLR start "rule__STSelectionExpression__Alternatives_1_1"
    // InternalSTFunctionParser.g:1695:1: rule__STSelectionExpression__Alternatives_1_1 : ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) );
    public final void rule__STSelectionExpression__Alternatives_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1699:1: ( ( ( rule__STSelectionExpression__Group_1_1_0__0 ) ) | ( ( rule__STSelectionExpression__Group_1_1_1__0 ) ) )
            int alt15=2;
            int LA15_0 = input.LA(1);

            if ( (LA15_0==FullStop) ) {
                alt15=1;
            }
            else if ( (LA15_0==LeftSquareBracket) ) {
                alt15=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }
            switch (alt15) {
                case 1 :
                    // InternalSTFunctionParser.g:1700:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1700:2: ( ( rule__STSelectionExpression__Group_1_1_0__0 ) )
                    // InternalSTFunctionParser.g:1701:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }
                    // InternalSTFunctionParser.g:1702:3: ( rule__STSelectionExpression__Group_1_1_0__0 )
                    // InternalSTFunctionParser.g:1702:4: rule__STSelectionExpression__Group_1_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1706:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1706:2: ( ( rule__STSelectionExpression__Group_1_1_1__0 ) )
                    // InternalSTFunctionParser.g:1707:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }
                    // InternalSTFunctionParser.g:1708:3: ( rule__STSelectionExpression__Group_1_1_1__0 )
                    // InternalSTFunctionParser.g:1708:4: rule__STSelectionExpression__Group_1_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Alternatives_1_1"


    // $ANTLR start "rule__STAtomicExpression__Alternatives"
    // InternalSTFunctionParser.g:1716:1: rule__STAtomicExpression__Alternatives : ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) );
    public final void rule__STAtomicExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1720:1: ( ( ( rule__STAtomicExpression__Group_0__0 ) ) | ( ( rule__STAtomicExpression__Group_1__0 ) ) )
            int alt16=2;
            int LA16_0 = input.LA(1);

            if ( (LA16_0==LeftParenthesis) ) {
                alt16=1;
            }
            else if ( (LA16_0==RULE_ID) ) {
                alt16=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }
            switch (alt16) {
                case 1 :
                    // InternalSTFunctionParser.g:1721:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1721:2: ( ( rule__STAtomicExpression__Group_0__0 ) )
                    // InternalSTFunctionParser.g:1722:3: ( rule__STAtomicExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:1723:3: ( rule__STAtomicExpression__Group_0__0 )
                    // InternalSTFunctionParser.g:1723:4: rule__STAtomicExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1727:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1727:2: ( ( rule__STAtomicExpression__Group_1__0 ) )
                    // InternalSTFunctionParser.g:1728:3: ( rule__STAtomicExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:1729:3: ( rule__STAtomicExpression__Group_1__0 )
                    // InternalSTFunctionParser.g:1729:4: rule__STAtomicExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Alternatives"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTFunctionParser.g:1737:1: rule__STLiteralExpressions__Alternatives : ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) | ( ( rule__STLiteralExpressions__Group_6__0 ) ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1741:1: ( ( ( rule__STLiteralExpressions__Group_0__0 ) ) | ( ( rule__STLiteralExpressions__Group_1__0 ) ) | ( ( rule__STLiteralExpressions__Group_2__0 ) ) | ( ( rule__STLiteralExpressions__Group_3__0 ) ) | ( ( rule__STLiteralExpressions__Group_4__0 ) ) | ( ( rule__STLiteralExpressions__Group_5__0 ) ) | ( ( rule__STLiteralExpressions__Group_6__0 ) ) )
            int alt17=7;
            switch ( input.LA(1) ) {
            case NOT:
                {
                int LA17_1 = input.LA(2);

                if ( (LA17_1==BOOL||LA17_1==RULE_BOOL_VALUES) ) {
                    alt17=1;
                }
                else if ( (LA17_1==DWORD||LA17_1==LREAL||LA17_1==LWORD||(LA17_1>=UDINT && LA17_1<=USINT)||LA17_1==BYTE||LA17_1==DINT||LA17_1==LINT||(LA17_1>=REAL && LA17_1<=SINT)||LA17_1==UINT||LA17_1==WORD||LA17_1==INT||LA17_1==PlusSign||LA17_1==HyphenMinus||(LA17_1>=RULE_NON_DECIMAL && LA17_1<=RULE_INT)) ) {
                    alt17=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 17, 1, input);

                    throw nvae;
                }
                }
                break;
            case BOOL:
            case RULE_BOOL_VALUES:
                {
                alt17=1;
                }
                break;
            case DWORD:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case WORD:
            case INT:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt17=2;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt17=3;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt17=4;
                }
                break;
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt17=5;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt17=6;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
                {
                alt17=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSTFunctionParser.g:1742:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1742:2: ( ( rule__STLiteralExpressions__Group_0__0 ) )
                    // InternalSTFunctionParser.g:1743:3: ( rule__STLiteralExpressions__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:1744:3: ( rule__STLiteralExpressions__Group_0__0 )
                    // InternalSTFunctionParser.g:1744:4: rule__STLiteralExpressions__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1748:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1748:2: ( ( rule__STLiteralExpressions__Group_1__0 ) )
                    // InternalSTFunctionParser.g:1749:3: ( rule__STLiteralExpressions__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:1750:3: ( rule__STLiteralExpressions__Group_1__0 )
                    // InternalSTFunctionParser.g:1750:4: rule__STLiteralExpressions__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1754:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    {
                    // InternalSTFunctionParser.g:1754:2: ( ( rule__STLiteralExpressions__Group_2__0 ) )
                    // InternalSTFunctionParser.g:1755:3: ( rule__STLiteralExpressions__Group_2__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }
                    // InternalSTFunctionParser.g:1756:3: ( rule__STLiteralExpressions__Group_2__0 )
                    // InternalSTFunctionParser.g:1756:4: rule__STLiteralExpressions__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1760:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    {
                    // InternalSTFunctionParser.g:1760:2: ( ( rule__STLiteralExpressions__Group_3__0 ) )
                    // InternalSTFunctionParser.g:1761:3: ( rule__STLiteralExpressions__Group_3__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }
                    // InternalSTFunctionParser.g:1762:3: ( rule__STLiteralExpressions__Group_3__0 )
                    // InternalSTFunctionParser.g:1762:4: rule__STLiteralExpressions__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:1766:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    {
                    // InternalSTFunctionParser.g:1766:2: ( ( rule__STLiteralExpressions__Group_4__0 ) )
                    // InternalSTFunctionParser.g:1767:3: ( rule__STLiteralExpressions__Group_4__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }
                    // InternalSTFunctionParser.g:1768:3: ( rule__STLiteralExpressions__Group_4__0 )
                    // InternalSTFunctionParser.g:1768:4: rule__STLiteralExpressions__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:1772:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    {
                    // InternalSTFunctionParser.g:1772:2: ( ( rule__STLiteralExpressions__Group_5__0 ) )
                    // InternalSTFunctionParser.g:1773:3: ( rule__STLiteralExpressions__Group_5__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }
                    // InternalSTFunctionParser.g:1774:3: ( rule__STLiteralExpressions__Group_5__0 )
                    // InternalSTFunctionParser.g:1774:4: rule__STLiteralExpressions__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:1778:2: ( ( rule__STLiteralExpressions__Group_6__0 ) )
                    {
                    // InternalSTFunctionParser.g:1778:2: ( ( rule__STLiteralExpressions__Group_6__0 ) )
                    // InternalSTFunctionParser.g:1779:3: ( rule__STLiteralExpressions__Group_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getGroup_6()); 
                    }
                    // InternalSTFunctionParser.g:1780:3: ( rule__STLiteralExpressions__Group_6__0 )
                    // InternalSTFunctionParser.g:1780:4: rule__STLiteralExpressions__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STLiteralExpressions__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getGroup_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAlternatives_1_0"
    // InternalSTFunctionParser.g:1788:1: rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 : ( ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__NUMERIC_LITERAL__KeywordAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1792:1: ( ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt18=14;
            switch ( input.LA(1) ) {
            case BYTE:
                {
                alt18=1;
                }
                break;
            case WORD:
                {
                alt18=2;
                }
                break;
            case DWORD:
                {
                alt18=3;
                }
                break;
            case LWORD:
                {
                alt18=4;
                }
                break;
            case SINT:
                {
                alt18=5;
                }
                break;
            case INT:
                {
                alt18=6;
                }
                break;
            case DINT:
                {
                alt18=7;
                }
                break;
            case LINT:
                {
                alt18=8;
                }
                break;
            case USINT:
                {
                alt18=9;
                }
                break;
            case UINT:
                {
                alt18=10;
                }
                break;
            case UDINT:
                {
                alt18=11;
                }
                break;
            case ULINT:
                {
                alt18=12;
                }
                break;
            case REAL:
                {
                alt18=13;
                }
                break;
            case LREAL:
                {
                alt18=14;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalSTFunctionParser.g:1793:2: ( BYTE )
                    {
                    // InternalSTFunctionParser.g:1793:2: ( BYTE )
                    // InternalSTFunctionParser.g:1794:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_1_0_0()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordBYTEKeyword_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1799:2: ( WORD )
                    {
                    // InternalSTFunctionParser.g:1799:2: ( WORD )
                    // InternalSTFunctionParser.g:1800:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_1_0_1()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordWORDKeyword_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1805:2: ( DWORD )
                    {
                    // InternalSTFunctionParser.g:1805:2: ( DWORD )
                    // InternalSTFunctionParser.g:1806:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_1_0_2()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDWORDKeyword_1_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1811:2: ( LWORD )
                    {
                    // InternalSTFunctionParser.g:1811:2: ( LWORD )
                    // InternalSTFunctionParser.g:1812:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_1_0_3()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLWORDKeyword_1_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:1817:2: ( SINT )
                    {
                    // InternalSTFunctionParser.g:1817:2: ( SINT )
                    // InternalSTFunctionParser.g:1818:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_1_0_4()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordSINTKeyword_1_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:1823:2: ( INT )
                    {
                    // InternalSTFunctionParser.g:1823:2: ( INT )
                    // InternalSTFunctionParser.g:1824:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_1_0_5()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordINTKeyword_1_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:1829:2: ( DINT )
                    {
                    // InternalSTFunctionParser.g:1829:2: ( DINT )
                    // InternalSTFunctionParser.g:1830:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_1_0_6()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordDINTKeyword_1_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTFunctionParser.g:1835:2: ( LINT )
                    {
                    // InternalSTFunctionParser.g:1835:2: ( LINT )
                    // InternalSTFunctionParser.g:1836:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_1_0_7()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLINTKeyword_1_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTFunctionParser.g:1841:2: ( USINT )
                    {
                    // InternalSTFunctionParser.g:1841:2: ( USINT )
                    // InternalSTFunctionParser.g:1842:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_1_0_8()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUSINTKeyword_1_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTFunctionParser.g:1847:2: ( UINT )
                    {
                    // InternalSTFunctionParser.g:1847:2: ( UINT )
                    // InternalSTFunctionParser.g:1848:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_1_0_9()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUINTKeyword_1_0_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSTFunctionParser.g:1853:2: ( UDINT )
                    {
                    // InternalSTFunctionParser.g:1853:2: ( UDINT )
                    // InternalSTFunctionParser.g:1854:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_1_0_10()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordUDINTKeyword_1_0_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSTFunctionParser.g:1859:2: ( ULINT )
                    {
                    // InternalSTFunctionParser.g:1859:2: ( ULINT )
                    // InternalSTFunctionParser.g:1860:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_1_0_11()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordULINTKeyword_1_0_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSTFunctionParser.g:1865:2: ( REAL )
                    {
                    // InternalSTFunctionParser.g:1865:2: ( REAL )
                    // InternalSTFunctionParser.g:1866:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_1_0_12()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordREALKeyword_1_0_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSTFunctionParser.g:1871:2: ( LREAL )
                    {
                    // InternalSTFunctionParser.g:1871:2: ( LREAL )
                    // InternalSTFunctionParser.g:1872:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_1_0_13()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordLREALKeyword_1_0_13()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAlternatives_1_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Alternatives_2"
    // InternalSTFunctionParser.g:1881:1: rule__NUMERIC_LITERAL__Alternatives_2 : ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) ) );
    public final void rule__NUMERIC_LITERAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1885:1: ( ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) ) | ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) ) | ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) ) )
            int alt19=3;
            switch ( input.LA(1) ) {
            case PlusSign:
                {
                int LA19_1 = input.LA(2);

                if ( (LA19_1==RULE_INT) ) {
                    int LA19_3 = input.LA(3);

                    if ( (LA19_3==EOF||LA19_3==END_REPEAT||LA19_3==THEN||LA19_3==AND||LA19_3==MOD||(LA19_3>=XOR && LA19_3<=FullStopFullStop)||(LA19_3>=LessThanSignEqualsSign && LA19_3<=GreaterThanSignEqualsSign)||LA19_3==BY||LA19_3==DO||(LA19_3>=OF && LA19_3<=OR)||LA19_3==TO||(LA19_3>=Ampersand && LA19_3<=HyphenMinus)||(LA19_3>=Solidus && LA19_3<=GreaterThanSign)||LA19_3==RightSquareBracket) ) {
                        alt19=1;
                    }
                    else if ( (LA19_3==FullStop) ) {
                        alt19=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 1, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA19_2 = input.LA(2);

                if ( (LA19_2==RULE_INT) ) {
                    int LA19_3 = input.LA(3);

                    if ( (LA19_3==EOF||LA19_3==END_REPEAT||LA19_3==THEN||LA19_3==AND||LA19_3==MOD||(LA19_3>=XOR && LA19_3<=FullStopFullStop)||(LA19_3>=LessThanSignEqualsSign && LA19_3<=GreaterThanSignEqualsSign)||LA19_3==BY||LA19_3==DO||(LA19_3>=OF && LA19_3<=OR)||LA19_3==TO||(LA19_3>=Ampersand && LA19_3<=HyphenMinus)||(LA19_3>=Solidus && LA19_3<=GreaterThanSign)||LA19_3==RightSquareBracket) ) {
                        alt19=1;
                    }
                    else if ( (LA19_3==FullStop) ) {
                        alt19=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 19, 3, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 2, input);

                    throw nvae;
                }
                }
                break;
            case RULE_INT:
                {
                int LA19_3 = input.LA(2);

                if ( (LA19_3==EOF||LA19_3==END_REPEAT||LA19_3==THEN||LA19_3==AND||LA19_3==MOD||(LA19_3>=XOR && LA19_3<=FullStopFullStop)||(LA19_3>=LessThanSignEqualsSign && LA19_3<=GreaterThanSignEqualsSign)||LA19_3==BY||LA19_3==DO||(LA19_3>=OF && LA19_3<=OR)||LA19_3==TO||(LA19_3>=Ampersand && LA19_3<=HyphenMinus)||(LA19_3>=Solidus && LA19_3<=GreaterThanSign)||LA19_3==RightSquareBracket) ) {
                    alt19=1;
                }
                else if ( (LA19_3==FullStop) ) {
                    alt19=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 19, 3, input);

                    throw nvae;
                }
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt19=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalSTFunctionParser.g:1886:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) )
                    {
                    // InternalSTFunctionParser.g:1886:2: ( ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 ) )
                    // InternalSTFunctionParser.g:1887:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_2_0()); 
                    }
                    // InternalSTFunctionParser.g:1888:3: ( rule__NUMERIC_LITERAL__IntValueAssignment_2_0 )
                    // InternalSTFunctionParser.g:1888:4: rule__NUMERIC_LITERAL__IntValueAssignment_2_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__IntValueAssignment_2_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueAssignment_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1892:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) )
                    {
                    // InternalSTFunctionParser.g:1892:2: ( ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 ) )
                    // InternalSTFunctionParser.g:1893:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_2_1()); 
                    }
                    // InternalSTFunctionParser.g:1894:3: ( rule__NUMERIC_LITERAL__RealValueAssignment_2_1 )
                    // InternalSTFunctionParser.g:1894:4: rule__NUMERIC_LITERAL__RealValueAssignment_2_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__RealValueAssignment_2_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueAssignment_2_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1898:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) )
                    {
                    // InternalSTFunctionParser.g:1898:2: ( ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 ) )
                    // InternalSTFunctionParser.g:1899:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_2_2()); 
                    }
                    // InternalSTFunctionParser.g:1900:3: ( rule__NUMERIC_LITERAL__HexValueAssignment_2_2 )
                    // InternalSTFunctionParser.g:1900:4: rule__NUMERIC_LITERAL__HexValueAssignment_2_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__HexValueAssignment_2_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueAssignment_2_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Alternatives_2"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAlternatives_0_0"
    // InternalSTFunctionParser.g:1908:1: rule__DATE_LITERAL__KeywordAlternatives_0_0 : ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) );
    public final void rule__DATE_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1912:1: ( ( DATE ) | ( LDATE ) | ( D ) | ( LD ) )
            int alt20=4;
            switch ( input.LA(1) ) {
            case DATE:
                {
                alt20=1;
                }
                break;
            case LDATE:
                {
                alt20=2;
                }
                break;
            case D:
                {
                alt20=3;
                }
                break;
            case LD:
                {
                alt20=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalSTFunctionParser.g:1913:2: ( DATE )
                    {
                    // InternalSTFunctionParser.g:1913:2: ( DATE )
                    // InternalSTFunctionParser.g:1914:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDATEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1919:2: ( LDATE )
                    {
                    // InternalSTFunctionParser.g:1919:2: ( LDATE )
                    // InternalSTFunctionParser.g:1920:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDATEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1925:2: ( D )
                    {
                    // InternalSTFunctionParser.g:1925:2: ( D )
                    // InternalSTFunctionParser.g:1926:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordDKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1931:2: ( LD )
                    {
                    // InternalSTFunctionParser.g:1931:2: ( LD )
                    // InternalSTFunctionParser.g:1932:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_LITERALAccess().getKeywordLDKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTFunctionParser.g:1941:1: rule__TIME_LITERAL__KeywordAlternatives_0_0 : ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) );
    public final void rule__TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1945:1: ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) )
            int alt21=4;
            switch ( input.LA(1) ) {
            case TIME:
                {
                alt21=1;
                }
                break;
            case LTIME:
                {
                alt21=2;
                }
                break;
            case T:
                {
                alt21=3;
                }
                break;
            case LT:
                {
                alt21=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSTFunctionParser.g:1946:2: ( TIME )
                    {
                    // InternalSTFunctionParser.g:1946:2: ( TIME )
                    // InternalSTFunctionParser.g:1947:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1952:2: ( LTIME )
                    {
                    // InternalSTFunctionParser.g:1952:2: ( LTIME )
                    // InternalSTFunctionParser.g:1953:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1958:2: ( T )
                    {
                    // InternalSTFunctionParser.g:1958:2: ( T )
                    // InternalSTFunctionParser.g:1959:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1964:2: ( LT )
                    {
                    // InternalSTFunctionParser.g:1964:2: ( LT )
                    // InternalSTFunctionParser.g:1965:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_LITERALAccess().getKeywordLTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"
    // InternalSTFunctionParser.g:1974:1: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 : ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1978:1: ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt22=3;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt22=1;
                }
                break;
            case TOD:
                {
                alt22=2;
                }
                break;
            case LTOD:
                {
                alt22=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSTFunctionParser.g:1979:2: ( TIME_OF_DAY )
                    {
                    // InternalSTFunctionParser.g:1979:2: ( TIME_OF_DAY )
                    // InternalSTFunctionParser.g:1980:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTIME_OF_DAYKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1985:2: ( TOD )
                    {
                    // InternalSTFunctionParser.g:1985:2: ( TOD )
                    // InternalSTFunctionParser.g:1986:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordTODKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1991:2: ( LTOD )
                    {
                    // InternalSTFunctionParser.g:1991:2: ( LTOD )
                    // InternalSTFunctionParser.g:1992:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordLTODKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"
    // InternalSTFunctionParser.g:2001:1: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2005:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt23=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt23=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt23=2;
                }
                break;
            case DT:
                {
                alt23=3;
                }
                break;
            case LDT:
                {
                alt23=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }

            switch (alt23) {
                case 1 :
                    // InternalSTFunctionParser.g:2006:2: ( DATE_AND_TIME )
                    {
                    // InternalSTFunctionParser.g:2006:2: ( DATE_AND_TIME )
                    // InternalSTFunctionParser.g:2007:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDATE_AND_TIMEKeyword_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2012:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTFunctionParser.g:2012:2: ( LDATE_AND_TIME )
                    // InternalSTFunctionParser.g:2013:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDATE_AND_TIMEKeyword_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2018:2: ( DT )
                    {
                    // InternalSTFunctionParser.g:2018:2: ( DT )
                    // InternalSTFunctionParser.g:2019:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordDTKeyword_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2024:2: ( LDT )
                    {
                    // InternalSTFunctionParser.g:2024:2: ( LDT )
                    // InternalSTFunctionParser.g:2025:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordLDTKeyword_0_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0"


    // $ANTLR start "rule__STRING_LITERAL__Alternatives_0"
    // InternalSTFunctionParser.g:2034:1: rule__STRING_LITERAL__Alternatives_0 : ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STRING_LITERAL__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2038:1: ( ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt24=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt24=1;
                }
                break;
            case WSTRING:
                {
                alt24=2;
                }
                break;
            case CHAR:
                {
                alt24=3;
                }
                break;
            case WCHAR:
                {
                alt24=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSTFunctionParser.g:2039:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    {
                    // InternalSTFunctionParser.g:2039:2: ( ( rule__STRING_LITERAL__KeywordAssignment_0_0 ) )
                    // InternalSTFunctionParser.g:2040:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }
                    // InternalSTFunctionParser.g:2041:3: ( rule__STRING_LITERAL__KeywordAssignment_0_0 )
                    // InternalSTFunctionParser.g:2041:4: rule__STRING_LITERAL__KeywordAssignment_0_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__KeywordAssignment_0_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getKeywordAssignment_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2045:2: ( WSTRING )
                    {
                    // InternalSTFunctionParser.g:2045:2: ( WSTRING )
                    // InternalSTFunctionParser.g:2046:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWSTRINGKeyword_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2051:2: ( CHAR )
                    {
                    // InternalSTFunctionParser.g:2051:2: ( CHAR )
                    // InternalSTFunctionParser.g:2052:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getCHARKeyword_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2057:2: ( WCHAR )
                    {
                    // InternalSTFunctionParser.g:2057:2: ( WCHAR )
                    // InternalSTFunctionParser.g:2058:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTRING_LITERALAccess().getWCHARKeyword_0_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Alternatives_0"


    // $ANTLR start "rule__INTEGER__Alternatives_0"
    // InternalSTFunctionParser.g:2067:1: rule__INTEGER__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__INTEGER__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2071:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==PlusSign) ) {
                alt25=1;
            }
            else if ( (LA25_0==HyphenMinus) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSTFunctionParser.g:2072:2: ( PlusSign )
                    {
                    // InternalSTFunctionParser.g:2072:2: ( PlusSign )
                    // InternalSTFunctionParser.g:2073:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2078:2: ( HyphenMinus )
                    {
                    // InternalSTFunctionParser.g:2078:2: ( HyphenMinus )
                    // InternalSTFunctionParser.g:2079:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getINTEGERAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Alternatives_0"


    // $ANTLR start "rule__REAL__Alternatives_2"
    // InternalSTFunctionParser.g:2088:1: rule__REAL__Alternatives_2 : ( ( RULE_EXT_INT ) | ( RULE_INT ) );
    public final void rule__REAL__Alternatives_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2092:1: ( ( RULE_EXT_INT ) | ( RULE_INT ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==RULE_EXT_INT) ) {
                alt26=1;
            }
            else if ( (LA26_0==RULE_INT) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSTFunctionParser.g:2093:2: ( RULE_EXT_INT )
                    {
                    // InternalSTFunctionParser.g:2093:2: ( RULE_EXT_INT )
                    // InternalSTFunctionParser.g:2094:3: RULE_EXT_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }
                    match(input,RULE_EXT_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getEXT_INTTerminalRuleCall_2_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2099:2: ( RULE_INT )
                    {
                    // InternalSTFunctionParser.g:2099:2: ( RULE_INT )
                    // InternalSTFunctionParser.g:2100:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getREALAccess().getINTTerminalRuleCall_2_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Alternatives_2"


    // $ANTLR start "rule__MultiBitAccessSpecifier__Alternatives"
    // InternalSTFunctionParser.g:2109:1: rule__MultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) );
    public final void rule__MultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2113:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) | ( ( FullStop ) ) )
            int alt27=6;
            switch ( input.LA(1) ) {
            case L:
                {
                alt27=1;
                }
                break;
            case D_1:
                {
                alt27=2;
                }
                break;
            case W:
                {
                alt27=3;
                }
                break;
            case B:
                {
                alt27=4;
                }
                break;
            case X:
                {
                alt27=5;
                }
                break;
            case FullStop:
                {
                alt27=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalSTFunctionParser.g:2114:2: ( ( L ) )
                    {
                    // InternalSTFunctionParser.g:2114:2: ( ( L ) )
                    // InternalSTFunctionParser.g:2115:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2116:3: ( L )
                    // InternalSTFunctionParser.g:2116:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getLwordAccessEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2120:2: ( ( D_1 ) )
                    {
                    // InternalSTFunctionParser.g:2120:2: ( ( D_1 ) )
                    // InternalSTFunctionParser.g:2121:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2122:3: ( D_1 )
                    // InternalSTFunctionParser.g:2122:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getDwordAccessEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2126:2: ( ( W ) )
                    {
                    // InternalSTFunctionParser.g:2126:2: ( ( W ) )
                    // InternalSTFunctionParser.g:2127:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:2128:3: ( W )
                    // InternalSTFunctionParser.g:2128:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getWordAccessEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2132:2: ( ( B ) )
                    {
                    // InternalSTFunctionParser.g:2132:2: ( ( B ) )
                    // InternalSTFunctionParser.g:2133:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTFunctionParser.g:2134:3: ( B )
                    // InternalSTFunctionParser.g:2134:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getByteAccessEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2138:2: ( ( X ) )
                    {
                    // InternalSTFunctionParser.g:2138:2: ( ( X ) )
                    // InternalSTFunctionParser.g:2139:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTFunctionParser.g:2140:3: ( X )
                    // InternalSTFunctionParser.g:2140:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:2144:2: ( ( FullStop ) )
                    {
                    // InternalSTFunctionParser.g:2144:2: ( ( FullStop ) )
                    // InternalSTFunctionParser.g:2145:3: ( FullStop )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }
                    // InternalSTFunctionParser.g:2146:3: ( FullStop )
                    // InternalSTFunctionParser.g:2146:4: FullStop
                    {
                    match(input,FullStop,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMultiBitAccessSpecifierAccess().getBitAccessShortcutEnumLiteralDeclaration_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__FunctionDefinition__Group__0"
    // InternalSTFunctionParser.g:2154:1: rule__FunctionDefinition__Group__0 : rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1 ;
    public final void rule__FunctionDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2158:1: ( rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1 )
            // InternalSTFunctionParser.g:2159:2: rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1
            {
            pushFollow(FOLLOW_4);
            rule__FunctionDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__0"


    // $ANTLR start "rule__FunctionDefinition__Group__0__Impl"
    // InternalSTFunctionParser.g:2166:1: rule__FunctionDefinition__Group__0__Impl : ( FUNCTION ) ;
    public final void rule__FunctionDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2170:1: ( ( FUNCTION ) )
            // InternalSTFunctionParser.g:2171:1: ( FUNCTION )
            {
            // InternalSTFunctionParser.g:2171:1: ( FUNCTION )
            // InternalSTFunctionParser.g:2172:2: FUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getFUNCTIONKeyword_0()); 
            }
            match(input,FUNCTION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getFUNCTIONKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__0__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__1"
    // InternalSTFunctionParser.g:2181:1: rule__FunctionDefinition__Group__1 : rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2 ;
    public final void rule__FunctionDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2185:1: ( rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2 )
            // InternalSTFunctionParser.g:2186:2: rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2
            {
            pushFollow(FOLLOW_5);
            rule__FunctionDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__1"


    // $ANTLR start "rule__FunctionDefinition__Group__1__Impl"
    // InternalSTFunctionParser.g:2193:1: rule__FunctionDefinition__Group__1__Impl : ( ( rule__FunctionDefinition__NameAssignment_1 ) ) ;
    public final void rule__FunctionDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2197:1: ( ( ( rule__FunctionDefinition__NameAssignment_1 ) ) )
            // InternalSTFunctionParser.g:2198:1: ( ( rule__FunctionDefinition__NameAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:2198:1: ( ( rule__FunctionDefinition__NameAssignment_1 ) )
            // InternalSTFunctionParser.g:2199:2: ( rule__FunctionDefinition__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_1()); 
            }
            // InternalSTFunctionParser.g:2200:2: ( rule__FunctionDefinition__NameAssignment_1 )
            // InternalSTFunctionParser.g:2200:3: rule__FunctionDefinition__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__1__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__2"
    // InternalSTFunctionParser.g:2208:1: rule__FunctionDefinition__Group__2 : rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3 ;
    public final void rule__FunctionDefinition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2212:1: ( rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3 )
            // InternalSTFunctionParser.g:2213:2: rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3
            {
            pushFollow(FOLLOW_5);
            rule__FunctionDefinition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__2"


    // $ANTLR start "rule__FunctionDefinition__Group__2__Impl"
    // InternalSTFunctionParser.g:2220:1: rule__FunctionDefinition__Group__2__Impl : ( ( rule__FunctionDefinition__Group_2__0 )? ) ;
    public final void rule__FunctionDefinition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2224:1: ( ( ( rule__FunctionDefinition__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:2225:1: ( ( rule__FunctionDefinition__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:2225:1: ( ( rule__FunctionDefinition__Group_2__0 )? )
            // InternalSTFunctionParser.g:2226:2: ( rule__FunctionDefinition__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:2227:2: ( rule__FunctionDefinition__Group_2__0 )?
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==Colon) ) {
                alt28=1;
            }
            switch (alt28) {
                case 1 :
                    // InternalSTFunctionParser.g:2227:3: rule__FunctionDefinition__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__2__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__3"
    // InternalSTFunctionParser.g:2235:1: rule__FunctionDefinition__Group__3 : rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4 ;
    public final void rule__FunctionDefinition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2239:1: ( rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4 )
            // InternalSTFunctionParser.g:2240:2: rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4
            {
            pushFollow(FOLLOW_5);
            rule__FunctionDefinition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__3"


    // $ANTLR start "rule__FunctionDefinition__Group__3__Impl"
    // InternalSTFunctionParser.g:2247:1: rule__FunctionDefinition__Group__3__Impl : ( ( rule__FunctionDefinition__Alternatives_3 )* ) ;
    public final void rule__FunctionDefinition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2251:1: ( ( ( rule__FunctionDefinition__Alternatives_3 )* ) )
            // InternalSTFunctionParser.g:2252:1: ( ( rule__FunctionDefinition__Alternatives_3 )* )
            {
            // InternalSTFunctionParser.g:2252:1: ( ( rule__FunctionDefinition__Alternatives_3 )* )
            // InternalSTFunctionParser.g:2253:2: ( rule__FunctionDefinition__Alternatives_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getAlternatives_3()); 
            }
            // InternalSTFunctionParser.g:2254:2: ( rule__FunctionDefinition__Alternatives_3 )*
            loop29:
            do {
                int alt29=2;
                int LA29_0 = input.LA(1);

                if ( (LA29_0==RULE_ID) ) {
                    int LA29_2 = input.LA(2);

                    if ( (LA29_2==AT||LA29_2==Colon) ) {
                        alt29=1;
                    }


                }
                else if ( (LA29_0==VAR_OUTPUT||LA29_0==VAR_INPUT||LA29_0==VAR_TEMP) ) {
                    alt29=1;
                }


                switch (alt29) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2254:3: rule__FunctionDefinition__Alternatives_3
            	    {
            	    pushFollow(FOLLOW_6);
            	    rule__FunctionDefinition__Alternatives_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop29;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__3__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__4"
    // InternalSTFunctionParser.g:2262:1: rule__FunctionDefinition__Group__4 : rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5 ;
    public final void rule__FunctionDefinition__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2266:1: ( rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5 )
            // InternalSTFunctionParser.g:2267:2: rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5
            {
            pushFollow(FOLLOW_5);
            rule__FunctionDefinition__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__4"


    // $ANTLR start "rule__FunctionDefinition__Group__4__Impl"
    // InternalSTFunctionParser.g:2274:1: rule__FunctionDefinition__Group__4__Impl : ( ( rule__FunctionDefinition__CodeAssignment_4 )* ) ;
    public final void rule__FunctionDefinition__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2278:1: ( ( ( rule__FunctionDefinition__CodeAssignment_4 )* ) )
            // InternalSTFunctionParser.g:2279:1: ( ( rule__FunctionDefinition__CodeAssignment_4 )* )
            {
            // InternalSTFunctionParser.g:2279:1: ( ( rule__FunctionDefinition__CodeAssignment_4 )* )
            // InternalSTFunctionParser.g:2280:2: ( rule__FunctionDefinition__CodeAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getCodeAssignment_4()); 
            }
            // InternalSTFunctionParser.g:2281:2: ( rule__FunctionDefinition__CodeAssignment_4 )*
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==CONTINUE||(LA30_0>=REPEAT && LA30_0<=RETURN)||LA30_0==WHILE||LA30_0==CASE||LA30_0==EXIT||LA30_0==FOR||LA30_0==IF||LA30_0==Semicolon||LA30_0==RULE_ID) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2281:3: rule__FunctionDefinition__CodeAssignment_4
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__FunctionDefinition__CodeAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop30;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getCodeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__4__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__5"
    // InternalSTFunctionParser.g:2289:1: rule__FunctionDefinition__Group__5 : rule__FunctionDefinition__Group__5__Impl ;
    public final void rule__FunctionDefinition__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2293:1: ( rule__FunctionDefinition__Group__5__Impl )
            // InternalSTFunctionParser.g:2294:2: rule__FunctionDefinition__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__5"


    // $ANTLR start "rule__FunctionDefinition__Group__5__Impl"
    // InternalSTFunctionParser.g:2300:1: rule__FunctionDefinition__Group__5__Impl : ( END_FUNCTION ) ;
    public final void rule__FunctionDefinition__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2304:1: ( ( END_FUNCTION ) )
            // InternalSTFunctionParser.g:2305:1: ( END_FUNCTION )
            {
            // InternalSTFunctionParser.g:2305:1: ( END_FUNCTION )
            // InternalSTFunctionParser.g:2306:2: END_FUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getEND_FUNCTIONKeyword_5()); 
            }
            match(input,END_FUNCTION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getEND_FUNCTIONKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__5__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group_2__0"
    // InternalSTFunctionParser.g:2316:1: rule__FunctionDefinition__Group_2__0 : rule__FunctionDefinition__Group_2__0__Impl rule__FunctionDefinition__Group_2__1 ;
    public final void rule__FunctionDefinition__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2320:1: ( rule__FunctionDefinition__Group_2__0__Impl rule__FunctionDefinition__Group_2__1 )
            // InternalSTFunctionParser.g:2321:2: rule__FunctionDefinition__Group_2__0__Impl rule__FunctionDefinition__Group_2__1
            {
            pushFollow(FOLLOW_4);
            rule__FunctionDefinition__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_2__0"


    // $ANTLR start "rule__FunctionDefinition__Group_2__0__Impl"
    // InternalSTFunctionParser.g:2328:1: rule__FunctionDefinition__Group_2__0__Impl : ( Colon ) ;
    public final void rule__FunctionDefinition__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2332:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:2333:1: ( Colon )
            {
            // InternalSTFunctionParser.g:2333:1: ( Colon )
            // InternalSTFunctionParser.g:2334:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_2__0__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group_2__1"
    // InternalSTFunctionParser.g:2343:1: rule__FunctionDefinition__Group_2__1 : rule__FunctionDefinition__Group_2__1__Impl ;
    public final void rule__FunctionDefinition__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2347:1: ( rule__FunctionDefinition__Group_2__1__Impl )
            // InternalSTFunctionParser.g:2348:2: rule__FunctionDefinition__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_2__1"


    // $ANTLR start "rule__FunctionDefinition__Group_2__1__Impl"
    // InternalSTFunctionParser.g:2354:1: rule__FunctionDefinition__Group_2__1__Impl : ( ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 ) ) ;
    public final void rule__FunctionDefinition__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2358:1: ( ( ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:2359:1: ( ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:2359:1: ( ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 ) )
            // InternalSTFunctionParser.g:2360:2: ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:2361:2: ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 )
            // InternalSTFunctionParser.g:2361:3: rule__FunctionDefinition__ReturnTypeAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__ReturnTypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_2__1__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:2370:1: rule__VarTempDeclarationBlock__Group__0 : rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1 ;
    public final void rule__VarTempDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2374:1: ( rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:2375:2: rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_8);
            rule__VarTempDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:2382:1: rule__VarTempDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarTempDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2386:1: ( ( () ) )
            // InternalSTFunctionParser.g:2387:1: ( () )
            {
            // InternalSTFunctionParser.g:2387:1: ( () )
            // InternalSTFunctionParser.g:2388:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:2389:2: ()
            // InternalSTFunctionParser.g:2389:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:2397:1: rule__VarTempDeclarationBlock__Group__1 : rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2 ;
    public final void rule__VarTempDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2401:1: ( rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:2402:2: rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__VarTempDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:2409:1: rule__VarTempDeclarationBlock__Group__1__Impl : ( VAR_TEMP ) ;
    public final void rule__VarTempDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2413:1: ( ( VAR_TEMP ) )
            // InternalSTFunctionParser.g:2414:1: ( VAR_TEMP )
            {
            // InternalSTFunctionParser.g:2414:1: ( VAR_TEMP )
            // InternalSTFunctionParser.g:2415:2: VAR_TEMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }
            match(input,VAR_TEMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:2424:1: rule__VarTempDeclarationBlock__Group__2 : rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3 ;
    public final void rule__VarTempDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2428:1: ( rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:2429:2: rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__VarTempDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:2436:1: rule__VarTempDeclarationBlock__Group__2__Impl : ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarTempDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2440:1: ( ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:2441:1: ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:2441:1: ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:2442:2: ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:2443:2: ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )?
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==CONSTANT) ) {
                alt31=1;
            }
            switch (alt31) {
                case 1 :
                    // InternalSTFunctionParser.g:2443:3: rule__VarTempDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarTempDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:2451:1: rule__VarTempDeclarationBlock__Group__3 : rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4 ;
    public final void rule__VarTempDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2455:1: ( rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:2456:2: rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__VarTempDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:2463:1: rule__VarTempDeclarationBlock__Group__3__Impl : ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarTempDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2467:1: ( ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:2468:1: ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:2468:1: ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:2469:2: ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:2470:2: ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( (LA32_0==RULE_ID) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2470:3: rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop32;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:2478:1: rule__VarTempDeclarationBlock__Group__4 : rule__VarTempDeclarationBlock__Group__4__Impl ;
    public final void rule__VarTempDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2482:1: ( rule__VarTempDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:2483:2: rule__VarTempDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:2489:1: rule__VarTempDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarTempDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2493:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:2494:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:2494:1: ( END_VAR )
            // InternalSTFunctionParser.g:2495:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:2505:1: rule__VarInputDeclarationBlock__Group__0 : rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1 ;
    public final void rule__VarInputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2509:1: ( rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:2510:2: rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_11);
            rule__VarInputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:2517:1: rule__VarInputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarInputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2521:1: ( ( () ) )
            // InternalSTFunctionParser.g:2522:1: ( () )
            {
            // InternalSTFunctionParser.g:2522:1: ( () )
            // InternalSTFunctionParser.g:2523:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:2524:2: ()
            // InternalSTFunctionParser.g:2524:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:2532:1: rule__VarInputDeclarationBlock__Group__1 : rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2 ;
    public final void rule__VarInputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2536:1: ( rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:2537:2: rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__VarInputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:2544:1: rule__VarInputDeclarationBlock__Group__1__Impl : ( VAR_INPUT ) ;
    public final void rule__VarInputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2548:1: ( ( VAR_INPUT ) )
            // InternalSTFunctionParser.g:2549:1: ( VAR_INPUT )
            {
            // InternalSTFunctionParser.g:2549:1: ( VAR_INPUT )
            // InternalSTFunctionParser.g:2550:2: VAR_INPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }
            match(input,VAR_INPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:2559:1: rule__VarInputDeclarationBlock__Group__2 : rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3 ;
    public final void rule__VarInputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2563:1: ( rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:2564:2: rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__VarInputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:2571:1: rule__VarInputDeclarationBlock__Group__2__Impl : ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarInputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2575:1: ( ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:2576:1: ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:2576:1: ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:2577:2: ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:2578:2: ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )?
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==CONSTANT) ) {
                alt33=1;
            }
            switch (alt33) {
                case 1 :
                    // InternalSTFunctionParser.g:2578:3: rule__VarInputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarInputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:2586:1: rule__VarInputDeclarationBlock__Group__3 : rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4 ;
    public final void rule__VarInputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2590:1: ( rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:2591:2: rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__VarInputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:2598:1: rule__VarInputDeclarationBlock__Group__3__Impl : ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarInputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2602:1: ( ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:2603:1: ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:2603:1: ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:2604:2: ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:2605:2: ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( (LA34_0==RULE_ID) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2605:3: rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:2613:1: rule__VarInputDeclarationBlock__Group__4 : rule__VarInputDeclarationBlock__Group__4__Impl ;
    public final void rule__VarInputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2617:1: ( rule__VarInputDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:2618:2: rule__VarInputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:2624:1: rule__VarInputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarInputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2628:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:2629:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:2629:1: ( END_VAR )
            // InternalSTFunctionParser.g:2630:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:2640:1: rule__VarOutputDeclarationBlock__Group__0 : rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1 ;
    public final void rule__VarOutputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2644:1: ( rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:2645:2: rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__VarOutputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:2652:1: rule__VarOutputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarOutputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2656:1: ( ( () ) )
            // InternalSTFunctionParser.g:2657:1: ( () )
            {
            // InternalSTFunctionParser.g:2657:1: ( () )
            // InternalSTFunctionParser.g:2658:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:2659:2: ()
            // InternalSTFunctionParser.g:2659:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:2667:1: rule__VarOutputDeclarationBlock__Group__1 : rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2 ;
    public final void rule__VarOutputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2671:1: ( rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:2672:2: rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_9);
            rule__VarOutputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:2679:1: rule__VarOutputDeclarationBlock__Group__1__Impl : ( VAR_OUTPUT ) ;
    public final void rule__VarOutputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2683:1: ( ( VAR_OUTPUT ) )
            // InternalSTFunctionParser.g:2684:1: ( VAR_OUTPUT )
            {
            // InternalSTFunctionParser.g:2684:1: ( VAR_OUTPUT )
            // InternalSTFunctionParser.g:2685:2: VAR_OUTPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }
            match(input,VAR_OUTPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:2694:1: rule__VarOutputDeclarationBlock__Group__2 : rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3 ;
    public final void rule__VarOutputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2698:1: ( rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:2699:2: rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_9);
            rule__VarOutputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:2706:1: rule__VarOutputDeclarationBlock__Group__2__Impl : ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarOutputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2710:1: ( ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:2711:1: ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:2711:1: ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:2712:2: ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:2713:2: ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==CONSTANT) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalSTFunctionParser.g:2713:3: rule__VarOutputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarOutputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:2721:1: rule__VarOutputDeclarationBlock__Group__3 : rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4 ;
    public final void rule__VarOutputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2725:1: ( rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:2726:2: rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_9);
            rule__VarOutputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:2733:1: rule__VarOutputDeclarationBlock__Group__3__Impl : ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarOutputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2737:1: ( ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:2738:1: ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:2738:1: ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:2739:2: ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:2740:2: ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==RULE_ID) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2740:3: rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_10);
            	    rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:2748:1: rule__VarOutputDeclarationBlock__Group__4 : rule__VarOutputDeclarationBlock__Group__4__Impl ;
    public final void rule__VarOutputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2752:1: ( rule__VarOutputDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:2753:2: rule__VarOutputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:2759:1: rule__VarOutputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarOutputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2763:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:2764:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:2764:1: ( END_VAR )
            // InternalSTFunctionParser.g:2765:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSTFunctionParser.g:2775:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2779:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSTFunctionParser.g:2780:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSTFunctionParser.g:2787:1: rule__VarDeclaration__Group__0__Impl : ( ( rule__VarDeclaration__NameAssignment_0 ) ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2791:1: ( ( ( rule__VarDeclaration__NameAssignment_0 ) ) )
            // InternalSTFunctionParser.g:2792:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:2792:1: ( ( rule__VarDeclaration__NameAssignment_0 ) )
            // InternalSTFunctionParser.g:2793:2: ( rule__VarDeclaration__NameAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }
            // InternalSTFunctionParser.g:2794:2: ( rule__VarDeclaration__NameAssignment_0 )
            // InternalSTFunctionParser.g:2794:3: rule__VarDeclaration__NameAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__NameAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSTFunctionParser.g:2802:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2806:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSTFunctionParser.g:2807:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FOLLOW_13);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSTFunctionParser.g:2814:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__Group_1__0 )? ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2818:1: ( ( ( rule__VarDeclaration__Group_1__0 )? ) )
            // InternalSTFunctionParser.g:2819:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            {
            // InternalSTFunctionParser.g:2819:1: ( ( rule__VarDeclaration__Group_1__0 )? )
            // InternalSTFunctionParser.g:2820:2: ( rule__VarDeclaration__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:2821:2: ( rule__VarDeclaration__Group_1__0 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==AT) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSTFunctionParser.g:2821:3: rule__VarDeclaration__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSTFunctionParser.g:2829:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2833:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSTFunctionParser.g:2834:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSTFunctionParser.g:2841:1: rule__VarDeclaration__Group__2__Impl : ( Colon ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2845:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:2846:1: ( Colon )
            {
            // InternalSTFunctionParser.g:2846:1: ( Colon )
            // InternalSTFunctionParser.g:2847:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSTFunctionParser.g:2856:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2860:1: ( rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 )
            // InternalSTFunctionParser.g:2861:2: rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4
            {
            pushFollow(FOLLOW_14);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSTFunctionParser.g:2868:1: rule__VarDeclaration__Group__3__Impl : ( ( rule__VarDeclaration__Group_3__0 )? ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2872:1: ( ( ( rule__VarDeclaration__Group_3__0 )? ) )
            // InternalSTFunctionParser.g:2873:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            {
            // InternalSTFunctionParser.g:2873:1: ( ( rule__VarDeclaration__Group_3__0 )? )
            // InternalSTFunctionParser.g:2874:2: ( rule__VarDeclaration__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }
            // InternalSTFunctionParser.g:2875:2: ( rule__VarDeclaration__Group_3__0 )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( (LA38_0==ARRAY) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // InternalSTFunctionParser.g:2875:3: rule__VarDeclaration__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__4"
    // InternalSTFunctionParser.g:2883:1: rule__VarDeclaration__Group__4 : rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 ;
    public final void rule__VarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2887:1: ( rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 )
            // InternalSTFunctionParser.g:2888:2: rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4"


    // $ANTLR start "rule__VarDeclaration__Group__4__Impl"
    // InternalSTFunctionParser.g:2895:1: rule__VarDeclaration__Group__4__Impl : ( ( rule__VarDeclaration__TypeAssignment_4 ) ) ;
    public final void rule__VarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2899:1: ( ( ( rule__VarDeclaration__TypeAssignment_4 ) ) )
            // InternalSTFunctionParser.g:2900:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            {
            // InternalSTFunctionParser.g:2900:1: ( ( rule__VarDeclaration__TypeAssignment_4 ) )
            // InternalSTFunctionParser.g:2901:2: ( rule__VarDeclaration__TypeAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }
            // InternalSTFunctionParser.g:2902:2: ( rule__VarDeclaration__TypeAssignment_4 )
            // InternalSTFunctionParser.g:2902:3: rule__VarDeclaration__TypeAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__TypeAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__5"
    // InternalSTFunctionParser.g:2910:1: rule__VarDeclaration__Group__5 : rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 ;
    public final void rule__VarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2914:1: ( rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 )
            // InternalSTFunctionParser.g:2915:2: rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5"


    // $ANTLR start "rule__VarDeclaration__Group__5__Impl"
    // InternalSTFunctionParser.g:2922:1: rule__VarDeclaration__Group__5__Impl : ( ( rule__VarDeclaration__Group_5__0 )? ) ;
    public final void rule__VarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2926:1: ( ( ( rule__VarDeclaration__Group_5__0 )? ) )
            // InternalSTFunctionParser.g:2927:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            {
            // InternalSTFunctionParser.g:2927:1: ( ( rule__VarDeclaration__Group_5__0 )? )
            // InternalSTFunctionParser.g:2928:2: ( rule__VarDeclaration__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }
            // InternalSTFunctionParser.g:2929:2: ( rule__VarDeclaration__Group_5__0 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==LeftSquareBracket) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSTFunctionParser.g:2929:3: rule__VarDeclaration__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__6"
    // InternalSTFunctionParser.g:2937:1: rule__VarDeclaration__Group__6 : rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 ;
    public final void rule__VarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2941:1: ( rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 )
            // InternalSTFunctionParser.g:2942:2: rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6"


    // $ANTLR start "rule__VarDeclaration__Group__6__Impl"
    // InternalSTFunctionParser.g:2949:1: rule__VarDeclaration__Group__6__Impl : ( ( rule__VarDeclaration__Group_6__0 )? ) ;
    public final void rule__VarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2953:1: ( ( ( rule__VarDeclaration__Group_6__0 )? ) )
            // InternalSTFunctionParser.g:2954:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            {
            // InternalSTFunctionParser.g:2954:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            // InternalSTFunctionParser.g:2955:2: ( rule__VarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTFunctionParser.g:2956:2: ( rule__VarDeclaration__Group_6__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==ColonEqualsSign) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSTFunctionParser.g:2956:3: rule__VarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__7"
    // InternalSTFunctionParser.g:2964:1: rule__VarDeclaration__Group__7 : rule__VarDeclaration__Group__7__Impl ;
    public final void rule__VarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2968:1: ( rule__VarDeclaration__Group__7__Impl )
            // InternalSTFunctionParser.g:2969:2: rule__VarDeclaration__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7"


    // $ANTLR start "rule__VarDeclaration__Group__7__Impl"
    // InternalSTFunctionParser.g:2975:1: rule__VarDeclaration__Group__7__Impl : ( Semicolon ) ;
    public final void rule__VarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2979:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:2980:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:2980:1: ( Semicolon )
            // InternalSTFunctionParser.g:2981:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__0"
    // InternalSTFunctionParser.g:2991:1: rule__VarDeclaration__Group_1__0 : rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 ;
    public final void rule__VarDeclaration__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2995:1: ( rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1 )
            // InternalSTFunctionParser.g:2996:2: rule__VarDeclaration__Group_1__0__Impl rule__VarDeclaration__Group_1__1
            {
            pushFollow(FOLLOW_4);
            rule__VarDeclaration__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_1__0__Impl"
    // InternalSTFunctionParser.g:3003:1: rule__VarDeclaration__Group_1__0__Impl : ( AT ) ;
    public final void rule__VarDeclaration__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3007:1: ( ( AT ) )
            // InternalSTFunctionParser.g:3008:1: ( AT )
            {
            // InternalSTFunctionParser.g:3008:1: ( AT )
            // InternalSTFunctionParser.g:3009:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getATKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_1__1"
    // InternalSTFunctionParser.g:3018:1: rule__VarDeclaration__Group_1__1 : rule__VarDeclaration__Group_1__1__Impl ;
    public final void rule__VarDeclaration__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3022:1: ( rule__VarDeclaration__Group_1__1__Impl )
            // InternalSTFunctionParser.g:3023:2: rule__VarDeclaration__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_1__1__Impl"
    // InternalSTFunctionParser.g:3029:1: rule__VarDeclaration__Group_1__1__Impl : ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3033:1: ( ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:3034:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:3034:1: ( ( rule__VarDeclaration__LocatedAtAssignment_1_1 ) )
            // InternalSTFunctionParser.g:3035:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:3036:2: ( rule__VarDeclaration__LocatedAtAssignment_1_1 )
            // InternalSTFunctionParser.g:3036:3: rule__VarDeclaration__LocatedAtAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__LocatedAtAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__0"
    // InternalSTFunctionParser.g:3045:1: rule__VarDeclaration__Group_3__0 : rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 ;
    public final void rule__VarDeclaration__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3049:1: ( rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1 )
            // InternalSTFunctionParser.g:3050:2: rule__VarDeclaration__Group_3__0__Impl rule__VarDeclaration__Group_3__1
            {
            pushFollow(FOLLOW_16);
            rule__VarDeclaration__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0"


    // $ANTLR start "rule__VarDeclaration__Group_3__0__Impl"
    // InternalSTFunctionParser.g:3057:1: rule__VarDeclaration__Group_3__0__Impl : ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) ;
    public final void rule__VarDeclaration__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3061:1: ( ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) ) )
            // InternalSTFunctionParser.g:3062:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            {
            // InternalSTFunctionParser.g:3062:1: ( ( rule__VarDeclaration__ArrayAssignment_3_0 ) )
            // InternalSTFunctionParser.g:3063:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }
            // InternalSTFunctionParser.g:3064:2: ( rule__VarDeclaration__ArrayAssignment_3_0 )
            // InternalSTFunctionParser.g:3064:3: rule__VarDeclaration__ArrayAssignment_3_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__ArrayAssignment_3_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayAssignment_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__1"
    // InternalSTFunctionParser.g:3072:1: rule__VarDeclaration__Group_3__1 : rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 ;
    public final void rule__VarDeclaration__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3076:1: ( rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2 )
            // InternalSTFunctionParser.g:3077:2: rule__VarDeclaration__Group_3__1__Impl rule__VarDeclaration__Group_3__2
            {
            pushFollow(FOLLOW_17);
            rule__VarDeclaration__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1"


    // $ANTLR start "rule__VarDeclaration__Group_3__1__Impl"
    // InternalSTFunctionParser.g:3084:1: rule__VarDeclaration__Group_3__1__Impl : ( ( rule__VarDeclaration__Alternatives_3_1 ) ) ;
    public final void rule__VarDeclaration__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3088:1: ( ( ( rule__VarDeclaration__Alternatives_3_1 ) ) )
            // InternalSTFunctionParser.g:3089:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            {
            // InternalSTFunctionParser.g:3089:1: ( ( rule__VarDeclaration__Alternatives_3_1 ) )
            // InternalSTFunctionParser.g:3090:2: ( rule__VarDeclaration__Alternatives_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }
            // InternalSTFunctionParser.g:3091:2: ( rule__VarDeclaration__Alternatives_3_1 )
            // InternalSTFunctionParser.g:3091:3: rule__VarDeclaration__Alternatives_3_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Alternatives_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3__2"
    // InternalSTFunctionParser.g:3099:1: rule__VarDeclaration__Group_3__2 : rule__VarDeclaration__Group_3__2__Impl ;
    public final void rule__VarDeclaration__Group_3__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3103:1: ( rule__VarDeclaration__Group_3__2__Impl )
            // InternalSTFunctionParser.g:3104:2: rule__VarDeclaration__Group_3__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2"


    // $ANTLR start "rule__VarDeclaration__Group_3__2__Impl"
    // InternalSTFunctionParser.g:3110:1: rule__VarDeclaration__Group_3__2__Impl : ( OF ) ;
    public final void rule__VarDeclaration__Group_3__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3114:1: ( ( OF ) )
            // InternalSTFunctionParser.g:3115:1: ( OF )
            {
            // InternalSTFunctionParser.g:3115:1: ( OF )
            // InternalSTFunctionParser.g:3116:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getOFKeyword_3_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0"
    // InternalSTFunctionParser.g:3126:1: rule__VarDeclaration__Group_3_1_0__0 : rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 ;
    public final void rule__VarDeclaration__Group_3_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3130:1: ( rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1 )
            // InternalSTFunctionParser.g:3131:2: rule__VarDeclaration__Group_3_1_0__0__Impl rule__VarDeclaration__Group_3_1_0__1
            {
            pushFollow(FOLLOW_18);
            rule__VarDeclaration__Group_3_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__0__Impl"
    // InternalSTFunctionParser.g:3138:1: rule__VarDeclaration__Group_3_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3142:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:3143:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:3143:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:3144:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1"
    // InternalSTFunctionParser.g:3153:1: rule__VarDeclaration__Group_3_1_0__1 : rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 ;
    public final void rule__VarDeclaration__Group_3_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3157:1: ( rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2 )
            // InternalSTFunctionParser.g:3158:2: rule__VarDeclaration__Group_3_1_0__1__Impl rule__VarDeclaration__Group_3_1_0__2
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_3_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__1__Impl"
    // InternalSTFunctionParser.g:3165:1: rule__VarDeclaration__Group_3_1_0__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3169:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) ) )
            // InternalSTFunctionParser.g:3170:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:3170:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_1 ) )
            // InternalSTFunctionParser.g:3171:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }
            // InternalSTFunctionParser.g:3172:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_1 )
            // InternalSTFunctionParser.g:3172:3: rule__VarDeclaration__RangesAssignment_3_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2"
    // InternalSTFunctionParser.g:3180:1: rule__VarDeclaration__Group_3_1_0__2 : rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 ;
    public final void rule__VarDeclaration__Group_3_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3184:1: ( rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3 )
            // InternalSTFunctionParser.g:3185:2: rule__VarDeclaration__Group_3_1_0__2__Impl rule__VarDeclaration__Group_3_1_0__3
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_3_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__2__Impl"
    // InternalSTFunctionParser.g:3192:1: rule__VarDeclaration__Group_3_1_0__2__Impl : ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3196:1: ( ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* ) )
            // InternalSTFunctionParser.g:3197:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            {
            // InternalSTFunctionParser.g:3197:1: ( ( rule__VarDeclaration__Group_3_1_0_2__0 )* )
            // InternalSTFunctionParser.g:3198:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }
            // InternalSTFunctionParser.g:3199:2: ( rule__VarDeclaration__Group_3_1_0_2__0 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==Comma) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3199:3: rule__VarDeclaration__Group_3_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__VarDeclaration__Group_3_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3"
    // InternalSTFunctionParser.g:3207:1: rule__VarDeclaration__Group_3_1_0__3 : rule__VarDeclaration__Group_3_1_0__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3211:1: ( rule__VarDeclaration__Group_3_1_0__3__Impl )
            // InternalSTFunctionParser.g:3212:2: rule__VarDeclaration__Group_3_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0__3__Impl"
    // InternalSTFunctionParser.g:3218:1: rule__VarDeclaration__Group_3_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3222:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:3223:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:3223:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:3224:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0"
    // InternalSTFunctionParser.g:3234:1: rule__VarDeclaration__Group_3_1_0_2__0 : rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3238:1: ( rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1 )
            // InternalSTFunctionParser.g:3239:2: rule__VarDeclaration__Group_3_1_0_2__0__Impl rule__VarDeclaration__Group_3_1_0_2__1
            {
            pushFollow(FOLLOW_18);
            rule__VarDeclaration__Group_3_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__0__Impl"
    // InternalSTFunctionParser.g:3246:1: rule__VarDeclaration__Group_3_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3250:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:3251:1: ( Comma )
            {
            // InternalSTFunctionParser.g:3251:1: ( Comma )
            // InternalSTFunctionParser.g:3252:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1"
    // InternalSTFunctionParser.g:3261:1: rule__VarDeclaration__Group_3_1_0_2__1 : rule__VarDeclaration__Group_3_1_0_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3265:1: ( rule__VarDeclaration__Group_3_1_0_2__1__Impl )
            // InternalSTFunctionParser.g:3266:2: rule__VarDeclaration__Group_3_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_0_2__1__Impl"
    // InternalSTFunctionParser.g:3272:1: rule__VarDeclaration__Group_3_1_0_2__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3276:1: ( ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) ) )
            // InternalSTFunctionParser.g:3277:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            {
            // InternalSTFunctionParser.g:3277:1: ( ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 ) )
            // InternalSTFunctionParser.g:3278:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }
            // InternalSTFunctionParser.g:3279:2: ( rule__VarDeclaration__RangesAssignment_3_1_0_2_1 )
            // InternalSTFunctionParser.g:3279:3: rule__VarDeclaration__RangesAssignment_3_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_3_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_3_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_0_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0"
    // InternalSTFunctionParser.g:3288:1: rule__VarDeclaration__Group_3_1_1__0 : rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 ;
    public final void rule__VarDeclaration__Group_3_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3292:1: ( rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1 )
            // InternalSTFunctionParser.g:3293:2: rule__VarDeclaration__Group_3_1_1__0__Impl rule__VarDeclaration__Group_3_1_1__1
            {
            pushFollow(FOLLOW_21);
            rule__VarDeclaration__Group_3_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__0__Impl"
    // InternalSTFunctionParser.g:3300:1: rule__VarDeclaration__Group_3_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3304:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:3305:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:3305:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:3306:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_3_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1"
    // InternalSTFunctionParser.g:3315:1: rule__VarDeclaration__Group_3_1_1__1 : rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 ;
    public final void rule__VarDeclaration__Group_3_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3319:1: ( rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2 )
            // InternalSTFunctionParser.g:3320:2: rule__VarDeclaration__Group_3_1_1__1__Impl rule__VarDeclaration__Group_3_1_1__2
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_3_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__1__Impl"
    // InternalSTFunctionParser.g:3327:1: rule__VarDeclaration__Group_3_1_1__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3331:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) ) )
            // InternalSTFunctionParser.g:3332:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:3332:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_1 ) )
            // InternalSTFunctionParser.g:3333:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }
            // InternalSTFunctionParser.g:3334:2: ( rule__VarDeclaration__CountAssignment_3_1_1_1 )
            // InternalSTFunctionParser.g:3334:3: rule__VarDeclaration__CountAssignment_3_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2"
    // InternalSTFunctionParser.g:3342:1: rule__VarDeclaration__Group_3_1_1__2 : rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 ;
    public final void rule__VarDeclaration__Group_3_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3346:1: ( rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3 )
            // InternalSTFunctionParser.g:3347:2: rule__VarDeclaration__Group_3_1_1__2__Impl rule__VarDeclaration__Group_3_1_1__3
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_3_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__2__Impl"
    // InternalSTFunctionParser.g:3354:1: rule__VarDeclaration__Group_3_1_1__2__Impl : ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_3_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3358:1: ( ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* ) )
            // InternalSTFunctionParser.g:3359:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            {
            // InternalSTFunctionParser.g:3359:1: ( ( rule__VarDeclaration__Group_3_1_1_2__0 )* )
            // InternalSTFunctionParser.g:3360:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }
            // InternalSTFunctionParser.g:3361:2: ( rule__VarDeclaration__Group_3_1_1_2__0 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==Comma) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3361:3: rule__VarDeclaration__Group_3_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__VarDeclaration__Group_3_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_3_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3"
    // InternalSTFunctionParser.g:3369:1: rule__VarDeclaration__Group_3_1_1__3 : rule__VarDeclaration__Group_3_1_1__3__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3373:1: ( rule__VarDeclaration__Group_3_1_1__3__Impl )
            // InternalSTFunctionParser.g:3374:2: rule__VarDeclaration__Group_3_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1__3__Impl"
    // InternalSTFunctionParser.g:3380:1: rule__VarDeclaration__Group_3_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_3_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3384:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:3385:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:3385:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:3386:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_3_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0"
    // InternalSTFunctionParser.g:3396:1: rule__VarDeclaration__Group_3_1_1_2__0 : rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3400:1: ( rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1 )
            // InternalSTFunctionParser.g:3401:2: rule__VarDeclaration__Group_3_1_1_2__0__Impl rule__VarDeclaration__Group_3_1_1_2__1
            {
            pushFollow(FOLLOW_21);
            rule__VarDeclaration__Group_3_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__0__Impl"
    // InternalSTFunctionParser.g:3408:1: rule__VarDeclaration__Group_3_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3412:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:3413:1: ( Comma )
            {
            // InternalSTFunctionParser.g:3413:1: ( Comma )
            // InternalSTFunctionParser.g:3414:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_3_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1"
    // InternalSTFunctionParser.g:3423:1: rule__VarDeclaration__Group_3_1_1_2__1 : rule__VarDeclaration__Group_3_1_1_2__1__Impl ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3427:1: ( rule__VarDeclaration__Group_3_1_1_2__1__Impl )
            // InternalSTFunctionParser.g:3428:2: rule__VarDeclaration__Group_3_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_3_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_3_1_1_2__1__Impl"
    // InternalSTFunctionParser.g:3434:1: rule__VarDeclaration__Group_3_1_1_2__1__Impl : ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_3_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3438:1: ( ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) ) )
            // InternalSTFunctionParser.g:3439:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            {
            // InternalSTFunctionParser.g:3439:1: ( ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 ) )
            // InternalSTFunctionParser.g:3440:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }
            // InternalSTFunctionParser.g:3441:2: ( rule__VarDeclaration__CountAssignment_3_1_1_2_1 )
            // InternalSTFunctionParser.g:3441:3: rule__VarDeclaration__CountAssignment_3_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_3_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_3_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_3_1_1_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__0"
    // InternalSTFunctionParser.g:3450:1: rule__VarDeclaration__Group_5__0 : rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 ;
    public final void rule__VarDeclaration__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3454:1: ( rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1 )
            // InternalSTFunctionParser.g:3455:2: rule__VarDeclaration__Group_5__0__Impl rule__VarDeclaration__Group_5__1
            {
            pushFollow(FOLLOW_18);
            rule__VarDeclaration__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0"


    // $ANTLR start "rule__VarDeclaration__Group_5__0__Impl"
    // InternalSTFunctionParser.g:3462:1: rule__VarDeclaration__Group_5__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3466:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:3467:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:3467:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:3468:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__1"
    // InternalSTFunctionParser.g:3477:1: rule__VarDeclaration__Group_5__1 : rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 ;
    public final void rule__VarDeclaration__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3481:1: ( rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2 )
            // InternalSTFunctionParser.g:3482:2: rule__VarDeclaration__Group_5__1__Impl rule__VarDeclaration__Group_5__2
            {
            pushFollow(FOLLOW_22);
            rule__VarDeclaration__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1"


    // $ANTLR start "rule__VarDeclaration__Group_5__1__Impl"
    // InternalSTFunctionParser.g:3489:1: rule__VarDeclaration__Group_5__1__Impl : ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) ;
    public final void rule__VarDeclaration__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3493:1: ( ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) ) )
            // InternalSTFunctionParser.g:3494:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            {
            // InternalSTFunctionParser.g:3494:1: ( ( rule__VarDeclaration__MaxLengthAssignment_5_1 ) )
            // InternalSTFunctionParser.g:3495:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }
            // InternalSTFunctionParser.g:3496:2: ( rule__VarDeclaration__MaxLengthAssignment_5_1 )
            // InternalSTFunctionParser.g:3496:3: rule__VarDeclaration__MaxLengthAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__MaxLengthAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_5__2"
    // InternalSTFunctionParser.g:3504:1: rule__VarDeclaration__Group_5__2 : rule__VarDeclaration__Group_5__2__Impl ;
    public final void rule__VarDeclaration__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3508:1: ( rule__VarDeclaration__Group_5__2__Impl )
            // InternalSTFunctionParser.g:3509:2: rule__VarDeclaration__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2"


    // $ANTLR start "rule__VarDeclaration__Group_5__2__Impl"
    // InternalSTFunctionParser.g:3515:1: rule__VarDeclaration__Group_5__2__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3519:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:3520:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:3520:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:3521:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_5__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__0"
    // InternalSTFunctionParser.g:3531:1: rule__VarDeclaration__Group_6__0 : rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 ;
    public final void rule__VarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3535:1: ( rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 )
            // InternalSTFunctionParser.g:3536:2: rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_23);
            rule__VarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0"


    // $ANTLR start "rule__VarDeclaration__Group_6__0__Impl"
    // InternalSTFunctionParser.g:3543:1: rule__VarDeclaration__Group_6__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__VarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3547:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:3548:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:3548:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:3549:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__1"
    // InternalSTFunctionParser.g:3558:1: rule__VarDeclaration__Group_6__1 : rule__VarDeclaration__Group_6__1__Impl ;
    public final void rule__VarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3562:1: ( rule__VarDeclaration__Group_6__1__Impl )
            // InternalSTFunctionParser.g:3563:2: rule__VarDeclaration__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1"


    // $ANTLR start "rule__VarDeclaration__Group_6__1__Impl"
    // InternalSTFunctionParser.g:3569:1: rule__VarDeclaration__Group_6__1__Impl : ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) ;
    public final void rule__VarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3573:1: ( ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) ) )
            // InternalSTFunctionParser.g:3574:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            {
            // InternalSTFunctionParser.g:3574:1: ( ( rule__VarDeclaration__DefaultValueAssignment_6_1 ) )
            // InternalSTFunctionParser.g:3575:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }
            // InternalSTFunctionParser.g:3576:2: ( rule__VarDeclaration__DefaultValueAssignment_6_1 )
            // InternalSTFunctionParser.g:3576:3: rule__VarDeclaration__DefaultValueAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__DefaultValueAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0"
    // InternalSTFunctionParser.g:3585:1: rule__ArrayInitializerExpression__Group__0 : rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 ;
    public final void rule__ArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3589:1: ( rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 )
            // InternalSTFunctionParser.g:3590:2: rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__ArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:3597:1: rule__ArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3601:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:3602:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:3602:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:3603:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1"
    // InternalSTFunctionParser.g:3612:1: rule__ArrayInitializerExpression__Group__1 : rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 ;
    public final void rule__ArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3616:1: ( rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 )
            // InternalSTFunctionParser.g:3617:2: rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__ArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:3624:1: rule__ArrayInitializerExpression__Group__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3628:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTFunctionParser.g:3629:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:3629:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTFunctionParser.g:3630:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTFunctionParser.g:3631:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTFunctionParser.g:3631:3: rule__ArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2"
    // InternalSTFunctionParser.g:3639:1: rule__ArrayInitializerExpression__Group__2 : rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 ;
    public final void rule__ArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3643:1: ( rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 )
            // InternalSTFunctionParser.g:3644:2: rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__ArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:3651:1: rule__ArrayInitializerExpression__Group__2__Impl : ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__ArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3655:1: ( ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTFunctionParser.g:3656:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTFunctionParser.g:3656:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            // InternalSTFunctionParser.g:3657:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:3658:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( (LA43_0==Comma) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3658:3: rule__ArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__ArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop43;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3"
    // InternalSTFunctionParser.g:3666:1: rule__ArrayInitializerExpression__Group__3 : rule__ArrayInitializerExpression__Group__3__Impl ;
    public final void rule__ArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3670:1: ( rule__ArrayInitializerExpression__Group__3__Impl )
            // InternalSTFunctionParser.g:3671:2: rule__ArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3__Impl"
    // InternalSTFunctionParser.g:3677:1: rule__ArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3681:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:3682:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:3682:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:3683:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0"
    // InternalSTFunctionParser.g:3693:1: rule__ArrayInitializerExpression__Group_2__0 : rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 ;
    public final void rule__ArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3697:1: ( rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 )
            // InternalSTFunctionParser.g:3698:2: rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_18);
            rule__ArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:3705:1: rule__ArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__ArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3709:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:3710:1: ( Comma )
            {
            // InternalSTFunctionParser.g:3710:1: ( Comma )
            // InternalSTFunctionParser.g:3711:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1"
    // InternalSTFunctionParser.g:3720:1: rule__ArrayInitializerExpression__Group_2__1 : rule__ArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__ArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3724:1: ( rule__ArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTFunctionParser.g:3725:2: rule__ArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:3731:1: rule__ArrayInitializerExpression__Group_2__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3735:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:3736:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:3736:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTFunctionParser.g:3737:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:3738:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTFunctionParser.g:3738:3: rule__ArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__0"
    // InternalSTFunctionParser.g:3747:1: rule__ArrayInitElement__Group__0 : rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 ;
    public final void rule__ArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3751:1: ( rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 )
            // InternalSTFunctionParser.g:3752:2: rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_24);
            rule__ArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0"


    // $ANTLR start "rule__ArrayInitElement__Group__0__Impl"
    // InternalSTFunctionParser.g:3759:1: rule__ArrayInitElement__Group__0__Impl : ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__ArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3763:1: ( ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTFunctionParser.g:3764:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:3764:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTFunctionParser.g:3765:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTFunctionParser.g:3766:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTFunctionParser.g:3766:3: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__1"
    // InternalSTFunctionParser.g:3774:1: rule__ArrayInitElement__Group__1 : rule__ArrayInitElement__Group__1__Impl ;
    public final void rule__ArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3778:1: ( rule__ArrayInitElement__Group__1__Impl )
            // InternalSTFunctionParser.g:3779:2: rule__ArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1"


    // $ANTLR start "rule__ArrayInitElement__Group__1__Impl"
    // InternalSTFunctionParser.g:3785:1: rule__ArrayInitElement__Group__1__Impl : ( ( rule__ArrayInitElement__Group_1__0 )? ) ;
    public final void rule__ArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3789:1: ( ( ( rule__ArrayInitElement__Group_1__0 )? ) )
            // InternalSTFunctionParser.g:3790:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            {
            // InternalSTFunctionParser.g:3790:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            // InternalSTFunctionParser.g:3791:2: ( rule__ArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:3792:2: ( rule__ArrayInitElement__Group_1__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==LeftParenthesis) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSTFunctionParser.g:3792:3: rule__ArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0"
    // InternalSTFunctionParser.g:3801:1: rule__ArrayInitElement__Group_1__0 : rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 ;
    public final void rule__ArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3805:1: ( rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 )
            // InternalSTFunctionParser.g:3806:2: rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__ArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0__Impl"
    // InternalSTFunctionParser.g:3813:1: rule__ArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3817:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:3818:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:3818:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:3819:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1"
    // InternalSTFunctionParser.g:3828:1: rule__ArrayInitElement__Group_1__1 : rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 ;
    public final void rule__ArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3832:1: ( rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 )
            // InternalSTFunctionParser.g:3833:2: rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_25);
            rule__ArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1__Impl"
    // InternalSTFunctionParser.g:3840:1: rule__ArrayInitElement__Group_1__1__Impl : ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) ;
    public final void rule__ArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3844:1: ( ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:3845:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:3845:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            // InternalSTFunctionParser.g:3846:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:3847:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            // InternalSTFunctionParser.g:3847:3: rule__ArrayInitElement__InitExpressionAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__InitExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2"
    // InternalSTFunctionParser.g:3855:1: rule__ArrayInitElement__Group_1__2 : rule__ArrayInitElement__Group_1__2__Impl ;
    public final void rule__ArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3859:1: ( rule__ArrayInitElement__Group_1__2__Impl )
            // InternalSTFunctionParser.g:3860:2: rule__ArrayInitElement__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2__Impl"
    // InternalSTFunctionParser.g:3866:1: rule__ArrayInitElement__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3870:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:3871:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:3871:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:3872:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTFunctionParser.g:3882:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3886:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTFunctionParser.g:3887:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_26);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTFunctionParser.g:3894:1: rule__STStatement__Group_0__0__Impl : ( ruleSTBranchStatement ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3898:1: ( ( ruleSTBranchStatement ) )
            // InternalSTFunctionParser.g:3899:1: ( ruleSTBranchStatement )
            {
            // InternalSTFunctionParser.g:3899:1: ( ruleSTBranchStatement )
            // InternalSTFunctionParser.g:3900:2: ruleSTBranchStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTBranchStatementParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTBranchStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTBranchStatementParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTFunctionParser.g:3909:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3913:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTFunctionParser.g:3914:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTFunctionParser.g:3920:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3924:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:3925:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:3925:1: ( Semicolon )
            // InternalSTFunctionParser.g:3926:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTFunctionParser.g:3936:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3940:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTFunctionParser.g:3941:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_26);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTFunctionParser.g:3948:1: rule__STStatement__Group_1__0__Impl : ( ruleSTLoopStatement ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3952:1: ( ( ruleSTLoopStatement ) )
            // InternalSTFunctionParser.g:3953:1: ( ruleSTLoopStatement )
            {
            // InternalSTFunctionParser.g:3953:1: ( ruleSTLoopStatement )
            // InternalSTFunctionParser.g:3954:2: ruleSTLoopStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTLoopStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTLoopStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTLoopStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTFunctionParser.g:3963:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3967:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTFunctionParser.g:3968:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTFunctionParser.g:3974:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3978:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:3979:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:3979:1: ( Semicolon )
            // InternalSTFunctionParser.g:3980:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STStatement__Group_2__0"
    // InternalSTFunctionParser.g:3990:1: rule__STStatement__Group_2__0 : rule__STStatement__Group_2__0__Impl rule__STStatement__Group_2__1 ;
    public final void rule__STStatement__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3994:1: ( rule__STStatement__Group_2__0__Impl rule__STStatement__Group_2__1 )
            // InternalSTFunctionParser.g:3995:2: rule__STStatement__Group_2__0__Impl rule__STStatement__Group_2__1
            {
            pushFollow(FOLLOW_26);
            rule__STStatement__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_2__0"


    // $ANTLR start "rule__STStatement__Group_2__0__Impl"
    // InternalSTFunctionParser.g:4002:1: rule__STStatement__Group_2__0__Impl : ( ruleSTAssignmentStatement ) ;
    public final void rule__STStatement__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4006:1: ( ( ruleSTAssignmentStatement ) )
            // InternalSTFunctionParser.g:4007:1: ( ruleSTAssignmentStatement )
            {
            // InternalSTFunctionParser.g:4007:1: ( ruleSTAssignmentStatement )
            // InternalSTFunctionParser.g:4008:2: ruleSTAssignmentStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_2__0__Impl"


    // $ANTLR start "rule__STStatement__Group_2__1"
    // InternalSTFunctionParser.g:4017:1: rule__STStatement__Group_2__1 : rule__STStatement__Group_2__1__Impl ;
    public final void rule__STStatement__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4021:1: ( rule__STStatement__Group_2__1__Impl )
            // InternalSTFunctionParser.g:4022:2: rule__STStatement__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_2__1"


    // $ANTLR start "rule__STStatement__Group_2__1__Impl"
    // InternalSTFunctionParser.g:4028:1: rule__STStatement__Group_2__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4032:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4033:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4033:1: ( Semicolon )
            // InternalSTFunctionParser.g:4034:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_2_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_2__1__Impl"


    // $ANTLR start "rule__STStatement__Group_3__0"
    // InternalSTFunctionParser.g:4044:1: rule__STStatement__Group_3__0 : rule__STStatement__Group_3__0__Impl rule__STStatement__Group_3__1 ;
    public final void rule__STStatement__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4048:1: ( rule__STStatement__Group_3__0__Impl rule__STStatement__Group_3__1 )
            // InternalSTFunctionParser.g:4049:2: rule__STStatement__Group_3__0__Impl rule__STStatement__Group_3__1
            {
            pushFollow(FOLLOW_26);
            rule__STStatement__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_3__0"


    // $ANTLR start "rule__STStatement__Group_3__0__Impl"
    // InternalSTFunctionParser.g:4056:1: rule__STStatement__Group_3__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4060:1: ( ( () ) )
            // InternalSTFunctionParser.g:4061:1: ( () )
            {
            // InternalSTFunctionParser.g:4061:1: ( () )
            // InternalSTFunctionParser.g:4062:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_3_0()); 
            }
            // InternalSTFunctionParser.g:4063:2: ()
            // InternalSTFunctionParser.g:4063:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_3__0__Impl"


    // $ANTLR start "rule__STStatement__Group_3__1"
    // InternalSTFunctionParser.g:4071:1: rule__STStatement__Group_3__1 : rule__STStatement__Group_3__1__Impl ;
    public final void rule__STStatement__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4075:1: ( rule__STStatement__Group_3__1__Impl )
            // InternalSTFunctionParser.g:4076:2: rule__STStatement__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_3__1"


    // $ANTLR start "rule__STStatement__Group_3__1__Impl"
    // InternalSTFunctionParser.g:4082:1: rule__STStatement__Group_3__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4086:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4087:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4087:1: ( Semicolon )
            // InternalSTFunctionParser.g:4088:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_3_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_3__1__Impl"


    // $ANTLR start "rule__STStatement__Group_4__0"
    // InternalSTFunctionParser.g:4098:1: rule__STStatement__Group_4__0 : rule__STStatement__Group_4__0__Impl rule__STStatement__Group_4__1 ;
    public final void rule__STStatement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4102:1: ( rule__STStatement__Group_4__0__Impl rule__STStatement__Group_4__1 )
            // InternalSTFunctionParser.g:4103:2: rule__STStatement__Group_4__0__Impl rule__STStatement__Group_4__1
            {
            pushFollow(FOLLOW_27);
            rule__STStatement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__0"


    // $ANTLR start "rule__STStatement__Group_4__0__Impl"
    // InternalSTFunctionParser.g:4110:1: rule__STStatement__Group_4__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4114:1: ( ( () ) )
            // InternalSTFunctionParser.g:4115:1: ( () )
            {
            // InternalSTFunctionParser.g:4115:1: ( () )
            // InternalSTFunctionParser.g:4116:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_4_0()); 
            }
            // InternalSTFunctionParser.g:4117:2: ()
            // InternalSTFunctionParser.g:4117:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__0__Impl"


    // $ANTLR start "rule__STStatement__Group_4__1"
    // InternalSTFunctionParser.g:4125:1: rule__STStatement__Group_4__1 : rule__STStatement__Group_4__1__Impl rule__STStatement__Group_4__2 ;
    public final void rule__STStatement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4129:1: ( rule__STStatement__Group_4__1__Impl rule__STStatement__Group_4__2 )
            // InternalSTFunctionParser.g:4130:2: rule__STStatement__Group_4__1__Impl rule__STStatement__Group_4__2
            {
            pushFollow(FOLLOW_26);
            rule__STStatement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__1"


    // $ANTLR start "rule__STStatement__Group_4__1__Impl"
    // InternalSTFunctionParser.g:4137:1: rule__STStatement__Group_4__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4141:1: ( ( RETURN ) )
            // InternalSTFunctionParser.g:4142:1: ( RETURN )
            {
            // InternalSTFunctionParser.g:4142:1: ( RETURN )
            // InternalSTFunctionParser.g:4143:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_4_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__1__Impl"


    // $ANTLR start "rule__STStatement__Group_4__2"
    // InternalSTFunctionParser.g:4152:1: rule__STStatement__Group_4__2 : rule__STStatement__Group_4__2__Impl ;
    public final void rule__STStatement__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4156:1: ( rule__STStatement__Group_4__2__Impl )
            // InternalSTFunctionParser.g:4157:2: rule__STStatement__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__2"


    // $ANTLR start "rule__STStatement__Group_4__2__Impl"
    // InternalSTFunctionParser.g:4163:1: rule__STStatement__Group_4__2__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4167:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4168:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4168:1: ( Semicolon )
            // InternalSTFunctionParser.g:4169:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_4_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_4__2__Impl"


    // $ANTLR start "rule__STStatement__Group_5__0"
    // InternalSTFunctionParser.g:4179:1: rule__STStatement__Group_5__0 : rule__STStatement__Group_5__0__Impl rule__STStatement__Group_5__1 ;
    public final void rule__STStatement__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4183:1: ( rule__STStatement__Group_5__0__Impl rule__STStatement__Group_5__1 )
            // InternalSTFunctionParser.g:4184:2: rule__STStatement__Group_5__0__Impl rule__STStatement__Group_5__1
            {
            pushFollow(FOLLOW_28);
            rule__STStatement__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__0"


    // $ANTLR start "rule__STStatement__Group_5__0__Impl"
    // InternalSTFunctionParser.g:4191:1: rule__STStatement__Group_5__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4195:1: ( ( () ) )
            // InternalSTFunctionParser.g:4196:1: ( () )
            {
            // InternalSTFunctionParser.g:4196:1: ( () )
            // InternalSTFunctionParser.g:4197:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_5_0()); 
            }
            // InternalSTFunctionParser.g:4198:2: ()
            // InternalSTFunctionParser.g:4198:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__0__Impl"


    // $ANTLR start "rule__STStatement__Group_5__1"
    // InternalSTFunctionParser.g:4206:1: rule__STStatement__Group_5__1 : rule__STStatement__Group_5__1__Impl rule__STStatement__Group_5__2 ;
    public final void rule__STStatement__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4210:1: ( rule__STStatement__Group_5__1__Impl rule__STStatement__Group_5__2 )
            // InternalSTFunctionParser.g:4211:2: rule__STStatement__Group_5__1__Impl rule__STStatement__Group_5__2
            {
            pushFollow(FOLLOW_26);
            rule__STStatement__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_5__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__1"


    // $ANTLR start "rule__STStatement__Group_5__1__Impl"
    // InternalSTFunctionParser.g:4218:1: rule__STStatement__Group_5__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4222:1: ( ( CONTINUE ) )
            // InternalSTFunctionParser.g:4223:1: ( CONTINUE )
            {
            // InternalSTFunctionParser.g:4223:1: ( CONTINUE )
            // InternalSTFunctionParser.g:4224:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_5_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__1__Impl"


    // $ANTLR start "rule__STStatement__Group_5__2"
    // InternalSTFunctionParser.g:4233:1: rule__STStatement__Group_5__2 : rule__STStatement__Group_5__2__Impl ;
    public final void rule__STStatement__Group_5__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4237:1: ( rule__STStatement__Group_5__2__Impl )
            // InternalSTFunctionParser.g:4238:2: rule__STStatement__Group_5__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_5__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__2"


    // $ANTLR start "rule__STStatement__Group_5__2__Impl"
    // InternalSTFunctionParser.g:4244:1: rule__STStatement__Group_5__2__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_5__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4248:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4249:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4249:1: ( Semicolon )
            // InternalSTFunctionParser.g:4250:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_5_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_5_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_5__2__Impl"


    // $ANTLR start "rule__STStatement__Group_6__0"
    // InternalSTFunctionParser.g:4260:1: rule__STStatement__Group_6__0 : rule__STStatement__Group_6__0__Impl rule__STStatement__Group_6__1 ;
    public final void rule__STStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4264:1: ( rule__STStatement__Group_6__0__Impl rule__STStatement__Group_6__1 )
            // InternalSTFunctionParser.g:4265:2: rule__STStatement__Group_6__0__Impl rule__STStatement__Group_6__1
            {
            pushFollow(FOLLOW_29);
            rule__STStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__0"


    // $ANTLR start "rule__STStatement__Group_6__0__Impl"
    // InternalSTFunctionParser.g:4272:1: rule__STStatement__Group_6__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4276:1: ( ( () ) )
            // InternalSTFunctionParser.g:4277:1: ( () )
            {
            // InternalSTFunctionParser.g:4277:1: ( () )
            // InternalSTFunctionParser.g:4278:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_6_0()); 
            }
            // InternalSTFunctionParser.g:4279:2: ()
            // InternalSTFunctionParser.g:4279:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__0__Impl"


    // $ANTLR start "rule__STStatement__Group_6__1"
    // InternalSTFunctionParser.g:4287:1: rule__STStatement__Group_6__1 : rule__STStatement__Group_6__1__Impl rule__STStatement__Group_6__2 ;
    public final void rule__STStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4291:1: ( rule__STStatement__Group_6__1__Impl rule__STStatement__Group_6__2 )
            // InternalSTFunctionParser.g:4292:2: rule__STStatement__Group_6__1__Impl rule__STStatement__Group_6__2
            {
            pushFollow(FOLLOW_26);
            rule__STStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__1"


    // $ANTLR start "rule__STStatement__Group_6__1__Impl"
    // InternalSTFunctionParser.g:4299:1: rule__STStatement__Group_6__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4303:1: ( ( EXIT ) )
            // InternalSTFunctionParser.g:4304:1: ( EXIT )
            {
            // InternalSTFunctionParser.g:4304:1: ( EXIT )
            // InternalSTFunctionParser.g:4305:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_6_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__1__Impl"


    // $ANTLR start "rule__STStatement__Group_6__2"
    // InternalSTFunctionParser.g:4314:1: rule__STStatement__Group_6__2 : rule__STStatement__Group_6__2__Impl ;
    public final void rule__STStatement__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4318:1: ( rule__STStatement__Group_6__2__Impl )
            // InternalSTFunctionParser.g:4319:2: rule__STStatement__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__2"


    // $ANTLR start "rule__STStatement__Group_6__2__Impl"
    // InternalSTFunctionParser.g:4325:1: rule__STStatement__Group_6__2__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4329:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4330:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4330:1: ( Semicolon )
            // InternalSTFunctionParser.g:4331:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_6_2()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_6__2__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTFunctionParser.g:4341:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4345:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTFunctionParser.g:4346:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_30);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:4353:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4357:1: ( ( ( rule__STAssignmentStatement__LhsAssignment_0 ) ) )
            // InternalSTFunctionParser.g:4358:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:4358:1: ( ( rule__STAssignmentStatement__LhsAssignment_0 ) )
            // InternalSTFunctionParser.g:4359:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }
            // InternalSTFunctionParser.g:4360:2: ( rule__STAssignmentStatement__LhsAssignment_0 )
            // InternalSTFunctionParser.g:4360:3: rule__STAssignmentStatement__LhsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LhsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTFunctionParser.g:4368:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4372:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTFunctionParser.g:4373:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:4380:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4384:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:4385:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:4385:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:4386:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTFunctionParser.g:4395:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4399:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTFunctionParser.g:4400:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:4406:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4410:1: ( ( ( rule__STAssignmentStatement__RhsAssignment_2 ) ) )
            // InternalSTFunctionParser.g:4411:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:4411:1: ( ( rule__STAssignmentStatement__RhsAssignment_2 ) )
            // InternalSTFunctionParser.g:4412:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }
            // InternalSTFunctionParser.g:4413:2: ( rule__STAssignmentStatement__RhsAssignment_2 )
            // InternalSTFunctionParser.g:4413:3: rule__STAssignmentStatement__RhsAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RhsAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__0"
    // InternalSTFunctionParser.g:4422:1: rule__STIfStatment__Group__0 : rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 ;
    public final void rule__STIfStatment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4426:1: ( rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 )
            // InternalSTFunctionParser.g:4427:2: rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__STIfStatment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0"


    // $ANTLR start "rule__STIfStatment__Group__0__Impl"
    // InternalSTFunctionParser.g:4434:1: rule__STIfStatment__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4438:1: ( ( IF ) )
            // InternalSTFunctionParser.g:4439:1: ( IF )
            {
            // InternalSTFunctionParser.g:4439:1: ( IF )
            // InternalSTFunctionParser.g:4440:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0__Impl"


    // $ANTLR start "rule__STIfStatment__Group__1"
    // InternalSTFunctionParser.g:4449:1: rule__STIfStatment__Group__1 : rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 ;
    public final void rule__STIfStatment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4453:1: ( rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 )
            // InternalSTFunctionParser.g:4454:2: rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STIfStatment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1"


    // $ANTLR start "rule__STIfStatment__Group__1__Impl"
    // InternalSTFunctionParser.g:4461:1: rule__STIfStatment__Group__1__Impl : ( ( rule__STIfStatment__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4465:1: ( ( ( rule__STIfStatment__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4466:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4466:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:4467:2: ( rule__STIfStatment__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4468:2: ( rule__STIfStatment__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:4468:3: rule__STIfStatment__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1__Impl"


    // $ANTLR start "rule__STIfStatment__Group__2"
    // InternalSTFunctionParser.g:4476:1: rule__STIfStatment__Group__2 : rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 ;
    public final void rule__STIfStatment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4480:1: ( rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 )
            // InternalSTFunctionParser.g:4481:2: rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3
            {
            pushFollow(FOLLOW_32);
            rule__STIfStatment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2"


    // $ANTLR start "rule__STIfStatment__Group__2__Impl"
    // InternalSTFunctionParser.g:4488:1: rule__STIfStatment__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4492:1: ( ( THEN ) )
            // InternalSTFunctionParser.g:4493:1: ( THEN )
            {
            // InternalSTFunctionParser.g:4493:1: ( THEN )
            // InternalSTFunctionParser.g:4494:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__3"
    // InternalSTFunctionParser.g:4503:1: rule__STIfStatment__Group__3 : rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 ;
    public final void rule__STIfStatment__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4507:1: ( rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 )
            // InternalSTFunctionParser.g:4508:2: rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4
            {
            pushFollow(FOLLOW_32);
            rule__STIfStatment__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3"


    // $ANTLR start "rule__STIfStatment__Group__3__Impl"
    // InternalSTFunctionParser.g:4515:1: rule__STIfStatment__Group__3__Impl : ( ( rule__STIfStatment__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatment__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4519:1: ( ( ( rule__STIfStatment__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4520:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4520:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:4521:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4522:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==CONTINUE||(LA45_0>=REPEAT && LA45_0<=RETURN)||LA45_0==WHILE||LA45_0==CASE||LA45_0==EXIT||LA45_0==FOR||LA45_0==IF||LA45_0==Semicolon||LA45_0==RULE_ID) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4522:3: rule__STIfStatment__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__STIfStatment__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3__Impl"


    // $ANTLR start "rule__STIfStatment__Group__4"
    // InternalSTFunctionParser.g:4530:1: rule__STIfStatment__Group__4 : rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 ;
    public final void rule__STIfStatment__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4534:1: ( rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 )
            // InternalSTFunctionParser.g:4535:2: rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5
            {
            pushFollow(FOLLOW_32);
            rule__STIfStatment__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4"


    // $ANTLR start "rule__STIfStatment__Group__4__Impl"
    // InternalSTFunctionParser.g:4542:1: rule__STIfStatment__Group__4__Impl : ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatment__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4546:1: ( ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) )
            // InternalSTFunctionParser.g:4547:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            {
            // InternalSTFunctionParser.g:4547:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            // InternalSTFunctionParser.g:4548:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }
            // InternalSTFunctionParser.g:4549:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==ELSIF) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4549:3: rule__STIfStatment__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_33);
            	    rule__STIfStatment__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4__Impl"


    // $ANTLR start "rule__STIfStatment__Group__5"
    // InternalSTFunctionParser.g:4557:1: rule__STIfStatment__Group__5 : rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 ;
    public final void rule__STIfStatment__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4561:1: ( rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 )
            // InternalSTFunctionParser.g:4562:2: rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6
            {
            pushFollow(FOLLOW_32);
            rule__STIfStatment__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5"


    // $ANTLR start "rule__STIfStatment__Group__5__Impl"
    // InternalSTFunctionParser.g:4569:1: rule__STIfStatment__Group__5__Impl : ( ( rule__STIfStatment__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatment__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4573:1: ( ( ( rule__STIfStatment__ElseAssignment_5 )? ) )
            // InternalSTFunctionParser.g:4574:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            {
            // InternalSTFunctionParser.g:4574:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            // InternalSTFunctionParser.g:4575:2: ( rule__STIfStatment__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }
            // InternalSTFunctionParser.g:4576:2: ( rule__STIfStatment__ElseAssignment_5 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==ELSE) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSTFunctionParser.g:4576:3: rule__STIfStatment__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatment__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5__Impl"


    // $ANTLR start "rule__STIfStatment__Group__6"
    // InternalSTFunctionParser.g:4584:1: rule__STIfStatment__Group__6 : rule__STIfStatment__Group__6__Impl ;
    public final void rule__STIfStatment__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4588:1: ( rule__STIfStatment__Group__6__Impl )
            // InternalSTFunctionParser.g:4589:2: rule__STIfStatment__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6"


    // $ANTLR start "rule__STIfStatment__Group__6__Impl"
    // InternalSTFunctionParser.g:4595:1: rule__STIfStatment__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatment__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4599:1: ( ( END_IF ) )
            // InternalSTFunctionParser.g:4600:1: ( END_IF )
            {
            // InternalSTFunctionParser.g:4600:1: ( END_IF )
            // InternalSTFunctionParser.g:4601:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTFunctionParser.g:4611:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4615:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTFunctionParser.g:4616:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTFunctionParser.g:4623:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4627:1: ( ( ELSIF ) )
            // InternalSTFunctionParser.g:4628:1: ( ELSIF )
            {
            // InternalSTFunctionParser.g:4628:1: ( ELSIF )
            // InternalSTFunctionParser.g:4629:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTFunctionParser.g:4638:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4642:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTFunctionParser.g:4643:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTFunctionParser.g:4650:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4654:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4655:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4655:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:4656:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4657:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:4657:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTFunctionParser.g:4665:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4669:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTFunctionParser.g:4670:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_29);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTFunctionParser.g:4677:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4681:1: ( ( THEN ) )
            // InternalSTFunctionParser.g:4682:1: ( THEN )
            {
            // InternalSTFunctionParser.g:4682:1: ( THEN )
            // InternalSTFunctionParser.g:4683:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTFunctionParser.g:4692:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4696:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTFunctionParser.g:4697:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTFunctionParser.g:4703:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4707:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4708:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4708:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:4709:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4710:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==CONTINUE||(LA48_0>=REPEAT && LA48_0<=RETURN)||LA48_0==WHILE||LA48_0==CASE||LA48_0==EXIT||LA48_0==FOR||LA48_0==IF||LA48_0==Semicolon||LA48_0==RULE_ID) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4710:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTFunctionParser.g:4719:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4723:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTFunctionParser.g:4724:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:4731:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4735:1: ( ( CASE ) )
            // InternalSTFunctionParser.g:4736:1: ( CASE )
            {
            // InternalSTFunctionParser.g:4736:1: ( CASE )
            // InternalSTFunctionParser.g:4737:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTFunctionParser.g:4746:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4750:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTFunctionParser.g:4751:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_17);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:4758:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4762:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4763:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4763:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTFunctionParser.g:4764:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4765:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTFunctionParser.g:4765:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTFunctionParser.g:4773:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4777:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTFunctionParser.g:4778:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:4785:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4789:1: ( ( OF ) )
            // InternalSTFunctionParser.g:4790:1: ( OF )
            {
            // InternalSTFunctionParser.g:4790:1: ( OF )
            // InternalSTFunctionParser.g:4791:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTFunctionParser.g:4800:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4804:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTFunctionParser.g:4805:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_34);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:4812:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4816:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTFunctionParser.g:4817:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTFunctionParser.g:4817:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4818:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4818:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTFunctionParser.g:4819:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4820:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTFunctionParser.g:4820:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_35);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTFunctionParser.g:4823:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTFunctionParser.g:4824:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4825:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( ((LA49_0>=LDATE_AND_TIME && LA49_0<=DATE_AND_TIME)||LA49_0==TIME_OF_DAY||LA49_0==WSTRING||(LA49_0>=STRING && LA49_0<=DWORD)||(LA49_0>=LDATE && LA49_0<=LWORD)||(LA49_0>=UDINT && LA49_0<=WCHAR)||(LA49_0>=BOOL && LA49_0<=DINT)||(LA49_0>=LINT && LA49_0<=UINT)||LA49_0==WORD||(LA49_0>=INT && LA49_0<=LDT)||LA49_0==TOD||LA49_0==DT||(LA49_0>=LD && LA49_0<=LT)||LA49_0==NOT||LA49_0==D||LA49_0==T||LA49_0==LeftParenthesis||LA49_0==PlusSign||LA49_0==HyphenMinus||LA49_0==RULE_BOOL_VALUES||(LA49_0>=RULE_NON_DECIMAL && LA49_0<=RULE_INT)||(LA49_0>=RULE_ID && LA49_0<=RULE_STRING)) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4825:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_35);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTFunctionParser.g:4834:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4838:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTFunctionParser.g:4839:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_34);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:4846:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4850:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTFunctionParser.g:4851:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTFunctionParser.g:4851:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTFunctionParser.g:4852:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTFunctionParser.g:4853:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt50=2;
            int LA50_0 = input.LA(1);

            if ( (LA50_0==ELSE) ) {
                alt50=1;
            }
            switch (alt50) {
                case 1 :
                    // InternalSTFunctionParser.g:4853:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTFunctionParser.g:4861:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4865:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTFunctionParser.g:4866:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:4872:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4876:1: ( ( END_CASE ) )
            // InternalSTFunctionParser.g:4877:1: ( END_CASE )
            {
            // InternalSTFunctionParser.g:4877:1: ( END_CASE )
            // InternalSTFunctionParser.g:4878:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTFunctionParser.g:4888:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4892:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTFunctionParser.g:4893:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_36);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTFunctionParser.g:4900:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4904:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTFunctionParser.g:4905:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:4905:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTFunctionParser.g:4906:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTFunctionParser.g:4907:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTFunctionParser.g:4907:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTFunctionParser.g:4915:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4919:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTFunctionParser.g:4920:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTFunctionParser.g:4927:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4931:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:4932:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:4932:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTFunctionParser.g:4933:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:4934:2: ( rule__STCaseCases__Group_1__0 )*
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( (LA51_0==Comma) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4934:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop51;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTFunctionParser.g:4942:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4946:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTFunctionParser.g:4947:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_29);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTFunctionParser.g:4954:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4958:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:4959:1: ( Colon )
            {
            // InternalSTFunctionParser.g:4959:1: ( Colon )
            // InternalSTFunctionParser.g:4960:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTFunctionParser.g:4969:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4973:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTFunctionParser.g:4974:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTFunctionParser.g:4980:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4984:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4985:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4985:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:4986:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4987:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==RULE_ID) ) {
                    int LA52_2 = input.LA(2);

                    if ( (LA52_2==ColonEqualsSign) ) {
                        alt52=1;
                    }


                }
                else if ( (LA52_0==CONTINUE||(LA52_0>=REPEAT && LA52_0<=RETURN)||LA52_0==WHILE||LA52_0==CASE||LA52_0==EXIT||LA52_0==FOR||LA52_0==IF||LA52_0==Semicolon) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4987:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTFunctionParser.g:4996:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5000:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTFunctionParser.g:5001:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTFunctionParser.g:5008:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5012:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:5013:1: ( Comma )
            {
            // InternalSTFunctionParser.g:5013:1: ( Comma )
            // InternalSTFunctionParser.g:5014:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTFunctionParser.g:5023:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5027:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTFunctionParser.g:5028:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTFunctionParser.g:5034:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5038:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:5039:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:5039:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTFunctionParser.g:5040:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:5041:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTFunctionParser.g:5041:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTFunctionParser.g:5050:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5054:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTFunctionParser.g:5055:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_37);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTFunctionParser.g:5062:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5066:1: ( ( () ) )
            // InternalSTFunctionParser.g:5067:1: ( () )
            {
            // InternalSTFunctionParser.g:5067:1: ( () )
            // InternalSTFunctionParser.g:5068:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTFunctionParser.g:5069:2: ()
            // InternalSTFunctionParser.g:5069:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTFunctionParser.g:5077:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5081:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTFunctionParser.g:5082:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_29);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTFunctionParser.g:5089:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5093:1: ( ( ELSE ) )
            // InternalSTFunctionParser.g:5094:1: ( ELSE )
            {
            // InternalSTFunctionParser.g:5094:1: ( ELSE )
            // InternalSTFunctionParser.g:5095:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTFunctionParser.g:5104:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5108:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTFunctionParser.g:5109:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTFunctionParser.g:5115:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5119:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTFunctionParser.g:5120:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTFunctionParser.g:5120:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTFunctionParser.g:5121:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTFunctionParser.g:5122:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( (LA53_0==CONTINUE||(LA53_0>=REPEAT && LA53_0<=RETURN)||LA53_0==WHILE||LA53_0==CASE||LA53_0==EXIT||LA53_0==FOR||LA53_0==IF||LA53_0==Semicolon||LA53_0==RULE_ID) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5122:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTFunctionParser.g:5131:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5135:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTFunctionParser.g:5136:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5143:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5147:1: ( ( FOR ) )
            // InternalSTFunctionParser.g:5148:1: ( FOR )
            {
            // InternalSTFunctionParser.g:5148:1: ( FOR )
            // InternalSTFunctionParser.g:5149:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTFunctionParser.g:5158:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5162:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTFunctionParser.g:5163:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5170:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__ForAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5174:1: ( ( ( rule__STForStatement__ForAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5175:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5175:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            // InternalSTFunctionParser.g:5176:2: ( rule__STForStatement__ForAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5177:2: ( rule__STForStatement__ForAssignment_1 )
            // InternalSTFunctionParser.g:5177:3: rule__STForStatement__ForAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ForAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTFunctionParser.g:5185:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5189:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTFunctionParser.g:5190:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5197:1: rule__STForStatement__Group__2__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5201:1: ( ( TO ) )
            // InternalSTFunctionParser.g:5202:1: ( TO )
            {
            // InternalSTFunctionParser.g:5202:1: ( TO )
            // InternalSTFunctionParser.g:5203:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTFunctionParser.g:5212:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5216:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTFunctionParser.g:5217:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_39);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5224:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__ToAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5228:1: ( ( ( rule__STForStatement__ToAssignment_3 ) ) )
            // InternalSTFunctionParser.g:5229:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:5229:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            // InternalSTFunctionParser.g:5230:2: ( rule__STForStatement__ToAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5231:2: ( rule__STForStatement__ToAssignment_3 )
            // InternalSTFunctionParser.g:5231:3: rule__STForStatement__ToAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTFunctionParser.g:5239:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5243:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTFunctionParser.g:5244:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_39);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5251:1: rule__STForStatement__Group__4__Impl : ( ( rule__STForStatement__Group_4__0 )? ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5255:1: ( ( ( rule__STForStatement__Group_4__0 )? ) )
            // InternalSTFunctionParser.g:5256:1: ( ( rule__STForStatement__Group_4__0 )? )
            {
            // InternalSTFunctionParser.g:5256:1: ( ( rule__STForStatement__Group_4__0 )? )
            // InternalSTFunctionParser.g:5257:2: ( rule__STForStatement__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }
            // InternalSTFunctionParser.g:5258:2: ( rule__STForStatement__Group_4__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==BY) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSTFunctionParser.g:5258:3: rule__STForStatement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTFunctionParser.g:5266:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5270:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTFunctionParser.g:5271:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_40);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:5278:1: rule__STForStatement__Group__5__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5282:1: ( ( DO ) )
            // InternalSTFunctionParser.g:5283:1: ( DO )
            {
            // InternalSTFunctionParser.g:5283:1: ( DO )
            // InternalSTFunctionParser.g:5284:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTFunctionParser.g:5293:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5297:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTFunctionParser.g:5298:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_40);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTFunctionParser.g:5305:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__StatementsAssignment_6 )* ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5309:1: ( ( ( rule__STForStatement__StatementsAssignment_6 )* ) )
            // InternalSTFunctionParser.g:5310:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            {
            // InternalSTFunctionParser.g:5310:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            // InternalSTFunctionParser.g:5311:2: ( rule__STForStatement__StatementsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }
            // InternalSTFunctionParser.g:5312:2: ( rule__STForStatement__StatementsAssignment_6 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==CONTINUE||(LA55_0>=REPEAT && LA55_0<=RETURN)||LA55_0==WHILE||LA55_0==CASE||LA55_0==EXIT||LA55_0==FOR||LA55_0==IF||LA55_0==Semicolon||LA55_0==RULE_ID) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5312:3: rule__STForStatement__StatementsAssignment_6
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__STForStatement__StatementsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTFunctionParser.g:5320:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5324:1: ( rule__STForStatement__Group__7__Impl )
            // InternalSTFunctionParser.g:5325:2: rule__STForStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTFunctionParser.g:5331:1: rule__STForStatement__Group__7__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5335:1: ( ( END_FOR ) )
            // InternalSTFunctionParser.g:5336:1: ( END_FOR )
            {
            // InternalSTFunctionParser.g:5336:1: ( END_FOR )
            // InternalSTFunctionParser.g:5337:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__0"
    // InternalSTFunctionParser.g:5347:1: rule__STForStatement__Group_4__0 : rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 ;
    public final void rule__STForStatement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5351:1: ( rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 )
            // InternalSTFunctionParser.g:5352:2: rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1
            {
            pushFollow(FOLLOW_18);
            rule__STForStatement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0"


    // $ANTLR start "rule__STForStatement__Group_4__0__Impl"
    // InternalSTFunctionParser.g:5359:1: rule__STForStatement__Group_4__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5363:1: ( ( BY ) )
            // InternalSTFunctionParser.g:5364:1: ( BY )
            {
            // InternalSTFunctionParser.g:5364:1: ( BY )
            // InternalSTFunctionParser.g:5365:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__1"
    // InternalSTFunctionParser.g:5374:1: rule__STForStatement__Group_4__1 : rule__STForStatement__Group_4__1__Impl ;
    public final void rule__STForStatement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5378:1: ( rule__STForStatement__Group_4__1__Impl )
            // InternalSTFunctionParser.g:5379:2: rule__STForStatement__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1"


    // $ANTLR start "rule__STForStatement__Group_4__1__Impl"
    // InternalSTFunctionParser.g:5385:1: rule__STForStatement__Group_4__1__Impl : ( ( rule__STForStatement__ByAssignment_4_1 ) ) ;
    public final void rule__STForStatement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5389:1: ( ( ( rule__STForStatement__ByAssignment_4_1 ) ) )
            // InternalSTFunctionParser.g:5390:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            {
            // InternalSTFunctionParser.g:5390:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            // InternalSTFunctionParser.g:5391:2: ( rule__STForStatement__ByAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }
            // InternalSTFunctionParser.g:5392:2: ( rule__STForStatement__ByAssignment_4_1 )
            // InternalSTFunctionParser.g:5392:3: rule__STForStatement__ByAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTFunctionParser.g:5401:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5405:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTFunctionParser.g:5406:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_18);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5413:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5417:1: ( ( WHILE ) )
            // InternalSTFunctionParser.g:5418:1: ( WHILE )
            {
            // InternalSTFunctionParser.g:5418:1: ( WHILE )
            // InternalSTFunctionParser.g:5419:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTFunctionParser.g:5428:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5432:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTFunctionParser.g:5433:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5440:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5444:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5445:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5445:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:5446:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5447:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:5447:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTFunctionParser.g:5455:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5459:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTFunctionParser.g:5460:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_42);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5467:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5471:1: ( ( DO ) )
            // InternalSTFunctionParser.g:5472:1: ( DO )
            {
            // InternalSTFunctionParser.g:5472:1: ( DO )
            // InternalSTFunctionParser.g:5473:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTFunctionParser.g:5482:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5486:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTFunctionParser.g:5487:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_42);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5494:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5498:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:5499:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:5499:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:5500:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5501:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==CONTINUE||(LA56_0>=REPEAT && LA56_0<=RETURN)||LA56_0==WHILE||LA56_0==CASE||LA56_0==EXIT||LA56_0==FOR||LA56_0==IF||LA56_0==Semicolon||LA56_0==RULE_ID) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5501:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTFunctionParser.g:5509:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5513:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTFunctionParser.g:5514:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5520:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5524:1: ( ( END_WHILE ) )
            // InternalSTFunctionParser.g:5525:1: ( END_WHILE )
            {
            // InternalSTFunctionParser.g:5525:1: ( END_WHILE )
            // InternalSTFunctionParser.g:5526:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTFunctionParser.g:5536:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5540:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTFunctionParser.g:5541:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_43);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5548:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5552:1: ( ( REPEAT ) )
            // InternalSTFunctionParser.g:5553:1: ( REPEAT )
            {
            // InternalSTFunctionParser.g:5553:1: ( REPEAT )
            // InternalSTFunctionParser.g:5554:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTFunctionParser.g:5563:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5567:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTFunctionParser.g:5568:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_43);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5575:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5579:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTFunctionParser.g:5580:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTFunctionParser.g:5580:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTFunctionParser.g:5581:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5582:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==CONTINUE||(LA57_0>=REPEAT && LA57_0<=RETURN)||LA57_0==WHILE||LA57_0==CASE||LA57_0==EXIT||LA57_0==FOR||LA57_0==IF||LA57_0==Semicolon||LA57_0==RULE_ID) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5582:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTFunctionParser.g:5590:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5594:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTFunctionParser.g:5595:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_18);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5602:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5606:1: ( ( UNTIL ) )
            // InternalSTFunctionParser.g:5607:1: ( UNTIL )
            {
            // InternalSTFunctionParser.g:5607:1: ( UNTIL )
            // InternalSTFunctionParser.g:5608:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTFunctionParser.g:5617:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5621:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTFunctionParser.g:5622:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_44);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5629:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5633:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTFunctionParser.g:5634:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:5634:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTFunctionParser.g:5635:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5636:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTFunctionParser.g:5636:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTFunctionParser.g:5644:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5648:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTFunctionParser.g:5649:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5655:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5659:1: ( ( END_REPEAT ) )
            // InternalSTFunctionParser.g:5660:1: ( END_REPEAT )
            {
            // InternalSTFunctionParser.g:5660:1: ( END_REPEAT )
            // InternalSTFunctionParser.g:5661:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTFunctionParser.g:5671:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5675:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTFunctionParser.g:5676:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:5683:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5687:1: ( ( ruleSTOrExpression ) )
            // InternalSTFunctionParser.g:5688:1: ( ruleSTOrExpression )
            {
            // InternalSTFunctionParser.g:5688:1: ( ruleSTOrExpression )
            // InternalSTFunctionParser.g:5689:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTFunctionParser.g:5698:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5702:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:5703:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:5709:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5713:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:5714:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:5714:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:5715:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:5716:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==FullStopFullStop) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5716:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_46);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTFunctionParser.g:5725:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5729:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTFunctionParser.g:5730:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:5737:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5741:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:5742:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:5742:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:5743:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:5744:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:5744:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTFunctionParser.g:5752:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5756:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:5757:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:5763:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5767:1: ( ( ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:5768:1: ( ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:5768:1: ( ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 ) )
            // InternalSTFunctionParser.g:5769:2: ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getUpperBoundAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:5770:2: ( rule__STSubrangeExpression__UpperBoundAssignment_1_1 )
            // InternalSTFunctionParser.g:5770:3: rule__STSubrangeExpression__UpperBoundAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__UpperBoundAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getUpperBoundAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:5779:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5783:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:5784:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_45);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:5791:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5795:1: ( ( () ) )
            // InternalSTFunctionParser.g:5796:1: ( () )
            {
            // InternalSTFunctionParser.g:5796:1: ( () )
            // InternalSTFunctionParser.g:5797:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTSubrangeExpressionLowerBoundAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:5798:2: ()
            // InternalSTFunctionParser.g:5798:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTSubrangeExpressionLowerBoundAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:5806:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5810:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:5811:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:5817:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( FullStopFullStop ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5821:1: ( ( FullStopFullStop ) )
            // InternalSTFunctionParser.g:5822:1: ( FullStopFullStop )
            {
            // InternalSTFunctionParser.g:5822:1: ( FullStopFullStop )
            // InternalSTFunctionParser.g:5823:2: FullStopFullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getFullStopFullStopKeyword_1_0_1()); 
            }
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getFullStopFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTFunctionParser.g:5833:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5837:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTFunctionParser.g:5838:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:5845:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5849:1: ( ( ruleSTXorExpression ) )
            // InternalSTFunctionParser.g:5850:1: ( ruleSTXorExpression )
            {
            // InternalSTFunctionParser.g:5850:1: ( ruleSTXorExpression )
            // InternalSTFunctionParser.g:5851:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTFunctionParser.g:5860:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5864:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:5865:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:5871:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5875:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:5876:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:5876:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:5877:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:5878:2: ( rule__STOrExpression__Group_1__0 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==OR) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5878:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTFunctionParser.g:5887:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5891:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTFunctionParser.g:5892:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:5899:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5903:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:5904:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:5904:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:5905:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:5906:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:5906:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTFunctionParser.g:5914:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5918:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:5919:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:5925:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5929:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:5930:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:5930:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:5931:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:5932:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:5932:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:5941:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5945:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:5946:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_47);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:5953:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5957:1: ( ( () ) )
            // InternalSTFunctionParser.g:5958:1: ( () )
            {
            // InternalSTFunctionParser.g:5958:1: ( () )
            // InternalSTFunctionParser.g:5959:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTOrExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:5960:2: ()
            // InternalSTFunctionParser.g:5960:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTOrExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:5968:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5972:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:5973:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:5979:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5983:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:5984:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:5984:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:5985:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:5986:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:5986:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTFunctionParser.g:5995:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5999:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTFunctionParser.g:6000:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6007:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6011:1: ( ( ruleSTAndExpression ) )
            // InternalSTFunctionParser.g:6012:1: ( ruleSTAndExpression )
            {
            // InternalSTFunctionParser.g:6012:1: ( ruleSTAndExpression )
            // InternalSTFunctionParser.g:6013:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTFunctionParser.g:6022:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6026:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6027:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6033:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6037:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6038:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6038:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6039:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6040:2: ( rule__STXorExpression__Group_1__0 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==XOR) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6040:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_50);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTFunctionParser.g:6049:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6053:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6054:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6061:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6065:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6066:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6066:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6067:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6068:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6068:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTFunctionParser.g:6076:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6080:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6081:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6087:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6091:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6092:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6092:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6093:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6094:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6094:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6103:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6107:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6108:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_49);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6115:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6119:1: ( ( () ) )
            // InternalSTFunctionParser.g:6120:1: ( () )
            {
            // InternalSTFunctionParser.g:6120:1: ( () )
            // InternalSTFunctionParser.g:6121:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTXorExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6122:2: ()
            // InternalSTFunctionParser.g:6122:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTXorExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6130:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6134:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6135:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6141:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6145:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6146:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6146:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6147:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6148:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6148:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTFunctionParser.g:6157:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6161:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTFunctionParser.g:6162:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6169:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6173:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTFunctionParser.g:6174:1: ( ruleSTEqualityExpression )
            {
            // InternalSTFunctionParser.g:6174:1: ( ruleSTEqualityExpression )
            // InternalSTFunctionParser.g:6175:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTFunctionParser.g:6184:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6188:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6189:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6195:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6199:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6200:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6200:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6201:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6202:2: ( rule__STAndExpression__Group_1__0 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==AND||LA61_0==Ampersand) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6202:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_52);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTFunctionParser.g:6211:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6215:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6216:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6223:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6227:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6228:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6228:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6229:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6230:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6230:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTFunctionParser.g:6238:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6242:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6243:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6249:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6253:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6254:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6254:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6255:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6256:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6256:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6265:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6269:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6270:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_51);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6277:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6281:1: ( ( () ) )
            // InternalSTFunctionParser.g:6282:1: ( () )
            {
            // InternalSTFunctionParser.g:6282:1: ( () )
            // InternalSTFunctionParser.g:6283:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTAndExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6284:2: ()
            // InternalSTFunctionParser.g:6284:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTAndExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6292:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6296:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6297:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6303:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6307:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6308:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6308:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6309:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6310:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6310:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTFunctionParser.g:6319:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6323:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTFunctionParser.g:6324:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6331:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6335:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTFunctionParser.g:6336:1: ( ruleSTComparisonExpression )
            {
            // InternalSTFunctionParser.g:6336:1: ( ruleSTComparisonExpression )
            // InternalSTFunctionParser.g:6337:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTFunctionParser.g:6346:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6350:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6351:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6357:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6361:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6362:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6362:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6363:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6364:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==LessThanSignGreaterThanSign||LA62_0==EqualsSign) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6364:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTFunctionParser.g:6373:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6377:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6378:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6385:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6389:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6390:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6390:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6391:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6392:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6392:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTFunctionParser.g:6400:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6404:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6405:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6411:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6415:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6416:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6416:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6417:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6418:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6418:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6427:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6431:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6432:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_53);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6439:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6443:1: ( ( () ) )
            // InternalSTFunctionParser.g:6444:1: ( () )
            {
            // InternalSTFunctionParser.g:6444:1: ( () )
            // InternalSTFunctionParser.g:6445:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTEqualityExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6446:2: ()
            // InternalSTFunctionParser.g:6446:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTEqualityExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6454:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6458:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6459:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6465:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6469:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6470:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6470:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6471:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6472:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6472:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTFunctionParser.g:6481:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6485:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTFunctionParser.g:6486:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6493:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6497:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTFunctionParser.g:6498:1: ( ruleSTAddSubExpression )
            {
            // InternalSTFunctionParser.g:6498:1: ( ruleSTAddSubExpression )
            // InternalSTFunctionParser.g:6499:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTFunctionParser.g:6508:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6512:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6513:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6519:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6523:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6524:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6524:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6525:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6526:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==LessThanSignEqualsSign||LA63_0==GreaterThanSignEqualsSign||LA63_0==LessThanSign||LA63_0==GreaterThanSign) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6526:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_56);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTFunctionParser.g:6535:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6539:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6540:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6547:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6551:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6552:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6552:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6553:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6554:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6554:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTFunctionParser.g:6562:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6566:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6567:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6573:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6577:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6578:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6578:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6579:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6580:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6580:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6589:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6593:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6594:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_55);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6601:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6605:1: ( ( () ) )
            // InternalSTFunctionParser.g:6606:1: ( () )
            {
            // InternalSTFunctionParser.g:6606:1: ( () )
            // InternalSTFunctionParser.g:6607:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTComparisonExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6608:2: ()
            // InternalSTFunctionParser.g:6608:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTComparisonExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6616:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6620:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6621:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6627:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6631:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6632:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6632:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6633:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6634:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6634:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTFunctionParser.g:6643:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6647:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTFunctionParser.g:6648:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6655:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6659:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTFunctionParser.g:6660:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTFunctionParser.g:6660:1: ( ruleSTMulDivModExpression )
            // InternalSTFunctionParser.g:6661:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTFunctionParser.g:6670:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6674:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6675:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6681:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6685:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6686:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6686:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6687:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6688:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==PlusSign||LA64_0==HyphenMinus) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6688:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_58);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTFunctionParser.g:6697:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6701:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6702:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6709:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6713:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6714:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6714:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6715:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6716:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6716:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTFunctionParser.g:6724:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6728:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6729:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6735:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6739:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6740:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6740:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6741:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6742:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6742:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6751:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6755:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6756:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_57);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6763:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6767:1: ( ( () ) )
            // InternalSTFunctionParser.g:6768:1: ( () )
            {
            // InternalSTFunctionParser.g:6768:1: ( () )
            // InternalSTFunctionParser.g:6769:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTAddSubExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6770:2: ()
            // InternalSTFunctionParser.g:6770:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTAddSubExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6778:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6782:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6783:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6789:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6793:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6794:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6794:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6795:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6796:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6796:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTFunctionParser.g:6805:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6809:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTFunctionParser.g:6810:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6817:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6821:1: ( ( ruleSTPowerExpression ) )
            // InternalSTFunctionParser.g:6822:1: ( ruleSTPowerExpression )
            {
            // InternalSTFunctionParser.g:6822:1: ( ruleSTPowerExpression )
            // InternalSTFunctionParser.g:6823:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTFunctionParser.g:6832:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6836:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6837:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6843:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6847:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6848:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6848:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6849:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6850:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==MOD||LA65_0==Asterisk||LA65_0==Solidus) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6850:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_60);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTFunctionParser.g:6859:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6863:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6864:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6871:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6875:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6876:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6876:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6877:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6878:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6878:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTFunctionParser.g:6886:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6890:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6891:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6897:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6901:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6902:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6902:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6903:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6904:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6904:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6913:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6917:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6918:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_59);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6925:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6929:1: ( ( () ) )
            // InternalSTFunctionParser.g:6930:1: ( () )
            {
            // InternalSTFunctionParser.g:6930:1: ( () )
            // InternalSTFunctionParser.g:6931:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTMulDivModExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6932:2: ()
            // InternalSTFunctionParser.g:6932:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTMulDivModExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6940:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6944:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6945:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6951:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6955:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6956:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6956:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6957:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6958:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6958:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTFunctionParser.g:6967:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6971:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTFunctionParser.g:6972:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6979:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6983:1: ( ( ruleSTSignumExpression ) )
            // InternalSTFunctionParser.g:6984:1: ( ruleSTSignumExpression )
            {
            // InternalSTFunctionParser.g:6984:1: ( ruleSTSignumExpression )
            // InternalSTFunctionParser.g:6985:2: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTSignumExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTFunctionParser.g:6994:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6998:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6999:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7005:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7009:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7010:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7010:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7011:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7012:2: ( rule__STPowerExpression__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==AsteriskAsterisk) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7012:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_62);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTFunctionParser.g:7021:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7025:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7026:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7033:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7037:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7038:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7038:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7039:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7040:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7040:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTFunctionParser.g:7048:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7052:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7053:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7059:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7063:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7064:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7064:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7065:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7066:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7066:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7075:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7079:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7080:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_61);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7087:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7091:1: ( ( () ) )
            // InternalSTFunctionParser.g:7092:1: ( () )
            {
            // InternalSTFunctionParser.g:7092:1: ( () )
            // InternalSTFunctionParser.g:7093:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTPowerExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7094:2: ()
            // InternalSTFunctionParser.g:7094:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTPowerExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7102:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7106:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7107:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7113:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7117:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7118:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7118:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7119:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7120:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7120:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__0"
    // InternalSTFunctionParser.g:7129:1: rule__STSignumExpression__Group_2__0 : rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 ;
    public final void rule__STSignumExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7133:1: ( rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1 )
            // InternalSTFunctionParser.g:7134:2: rule__STSignumExpression__Group_2__0__Impl rule__STSignumExpression__Group_2__1
            {
            pushFollow(FOLLOW_18);
            rule__STSignumExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0"


    // $ANTLR start "rule__STSignumExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:7141:1: rule__STSignumExpression__Group_2__0__Impl : ( () ) ;
    public final void rule__STSignumExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7145:1: ( ( () ) )
            // InternalSTFunctionParser.g:7146:1: ( () )
            {
            // InternalSTFunctionParser.g:7146:1: ( () )
            // InternalSTFunctionParser.g:7147:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSTSignumExpressionAction_2_0()); 
            }
            // InternalSTFunctionParser.g:7148:2: ()
            // InternalSTFunctionParser.g:7148:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSTSignumExpressionAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__1"
    // InternalSTFunctionParser.g:7156:1: rule__STSignumExpression__Group_2__1 : rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 ;
    public final void rule__STSignumExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7160:1: ( rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2 )
            // InternalSTFunctionParser.g:7161:2: rule__STSignumExpression__Group_2__1__Impl rule__STSignumExpression__Group_2__2
            {
            pushFollow(FOLLOW_63);
            rule__STSignumExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1"


    // $ANTLR start "rule__STSignumExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:7168:1: rule__STSignumExpression__Group_2__1__Impl : ( ( rule__STSignumExpression__SignumAssignment_2_1 ) ) ;
    public final void rule__STSignumExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7172:1: ( ( ( rule__STSignumExpression__SignumAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:7173:1: ( ( rule__STSignumExpression__SignumAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:7173:1: ( ( rule__STSignumExpression__SignumAssignment_2_1 ) )
            // InternalSTFunctionParser.g:7174:2: ( rule__STSignumExpression__SignumAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSignumAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:7175:2: ( rule__STSignumExpression__SignumAssignment_2_1 )
            // InternalSTFunctionParser.g:7175:3: rule__STSignumExpression__SignumAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__SignumAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSignumAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STSignumExpression__Group_2__2"
    // InternalSTFunctionParser.g:7183:1: rule__STSignumExpression__Group_2__2 : rule__STSignumExpression__Group_2__2__Impl ;
    public final void rule__STSignumExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7187:1: ( rule__STSignumExpression__Group_2__2__Impl )
            // InternalSTFunctionParser.g:7188:2: rule__STSignumExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2"


    // $ANTLR start "rule__STSignumExpression__Group_2__2__Impl"
    // InternalSTFunctionParser.g:7194:1: rule__STSignumExpression__Group_2__2__Impl : ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) ;
    public final void rule__STSignumExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7198:1: ( ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) ) )
            // InternalSTFunctionParser.g:7199:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            {
            // InternalSTFunctionParser.g:7199:1: ( ( rule__STSignumExpression__ExpressionAssignment_2_2 ) )
            // InternalSTFunctionParser.g:7200:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }
            // InternalSTFunctionParser.g:7201:2: ( rule__STSignumExpression__ExpressionAssignment_2_2 )
            // InternalSTFunctionParser.g:7201:3: rule__STSignumExpression__ExpressionAssignment_2_2
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__ExpressionAssignment_2_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionAssignment_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__0"
    // InternalSTFunctionParser.g:7210:1: rule__STSelectionExpression__Group__0 : rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 ;
    public final void rule__STSelectionExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7214:1: ( rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1 )
            // InternalSTFunctionParser.g:7215:2: rule__STSelectionExpression__Group__0__Impl rule__STSelectionExpression__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__STSelectionExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0"


    // $ANTLR start "rule__STSelectionExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7222:1: rule__STSelectionExpression__Group__0__Impl : ( ruleSTAtomicExpression ) ;
    public final void rule__STSelectionExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7226:1: ( ( ruleSTAtomicExpression ) )
            // InternalSTFunctionParser.g:7227:1: ( ruleSTAtomicExpression )
            {
            // InternalSTFunctionParser.g:7227:1: ( ruleSTAtomicExpression )
            // InternalSTFunctionParser.g:7228:2: ruleSTAtomicExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAtomicExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTAtomicExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group__1"
    // InternalSTFunctionParser.g:7237:1: rule__STSelectionExpression__Group__1 : rule__STSelectionExpression__Group__1__Impl ;
    public final void rule__STSelectionExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7241:1: ( rule__STSelectionExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7242:2: rule__STSelectionExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1"


    // $ANTLR start "rule__STSelectionExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7248:1: rule__STSelectionExpression__Group__1__Impl : ( ( rule__STSelectionExpression__Group_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7252:1: ( ( ( rule__STSelectionExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7253:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7253:1: ( ( rule__STSelectionExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7254:2: ( rule__STSelectionExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7255:2: ( rule__STSelectionExpression__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==FullStop||LA67_0==LeftSquareBracket) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7255:3: rule__STSelectionExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_65);
            	    rule__STSelectionExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0"
    // InternalSTFunctionParser.g:7264:1: rule__STSelectionExpression__Group_1__0 : rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 ;
    public final void rule__STSelectionExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7268:1: ( rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7269:2: rule__STSelectionExpression__Group_1__0__Impl rule__STSelectionExpression__Group_1__1
            {
            pushFollow(FOLLOW_64);
            rule__STSelectionExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7276:1: rule__STSelectionExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STSelectionExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7280:1: ( ( () ) )
            // InternalSTFunctionParser.g:7281:1: ( () )
            {
            // InternalSTFunctionParser.g:7281:1: ( () )
            // InternalSTFunctionParser.g:7282:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }
            // InternalSTFunctionParser.g:7283:2: ()
            // InternalSTFunctionParser.g:7283:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getSTMemberSelectionReceiverAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1"
    // InternalSTFunctionParser.g:7291:1: rule__STSelectionExpression__Group_1__1 : rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 ;
    public final void rule__STSelectionExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7295:1: ( rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2 )
            // InternalSTFunctionParser.g:7296:2: rule__STSelectionExpression__Group_1__1__Impl rule__STSelectionExpression__Group_1__2
            {
            pushFollow(FOLLOW_66);
            rule__STSelectionExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7303:1: rule__STSelectionExpression__Group_1__1__Impl : ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7307:1: ( ( ( rule__STSelectionExpression__Alternatives_1_1 ) ) )
            // InternalSTFunctionParser.g:7308:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            {
            // InternalSTFunctionParser.g:7308:1: ( ( rule__STSelectionExpression__Alternatives_1_1 ) )
            // InternalSTFunctionParser.g:7309:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }
            // InternalSTFunctionParser.g:7310:2: ( rule__STSelectionExpression__Alternatives_1_1 )
            // InternalSTFunctionParser.g:7310:3: rule__STSelectionExpression__Alternatives_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Alternatives_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getAlternatives_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2"
    // InternalSTFunctionParser.g:7318:1: rule__STSelectionExpression__Group_1__2 : rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 ;
    public final void rule__STSelectionExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7322:1: ( rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3 )
            // InternalSTFunctionParser.g:7323:2: rule__STSelectionExpression__Group_1__2__Impl rule__STSelectionExpression__Group_1__3
            {
            pushFollow(FOLLOW_66);
            rule__STSelectionExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1__2__Impl"
    // InternalSTFunctionParser.g:7330:1: rule__STSelectionExpression__Group_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_2__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7334:1: ( ( ( rule__STSelectionExpression__Group_1_2__0 )? ) )
            // InternalSTFunctionParser.g:7335:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            {
            // InternalSTFunctionParser.g:7335:1: ( ( rule__STSelectionExpression__Group_1_2__0 )? )
            // InternalSTFunctionParser.g:7336:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }
            // InternalSTFunctionParser.g:7337:2: ( rule__STSelectionExpression__Group_1_2__0 )?
            int alt68=2;
            alt68 = dfa68.predict(input);
            switch (alt68) {
                case 1 :
                    // InternalSTFunctionParser.g:7337:3: rule__STSelectionExpression__Group_1_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3"
    // InternalSTFunctionParser.g:7345:1: rule__STSelectionExpression__Group_1__3 : rule__STSelectionExpression__Group_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7349:1: ( rule__STSelectionExpression__Group_1__3__Impl )
            // InternalSTFunctionParser.g:7350:2: rule__STSelectionExpression__Group_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1__3__Impl"
    // InternalSTFunctionParser.g:7356:1: rule__STSelectionExpression__Group_1__3__Impl : ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STSelectionExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7360:1: ( ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTFunctionParser.g:7361:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTFunctionParser.g:7361:1: ( ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTFunctionParser.g:7362:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTFunctionParser.g:7363:2: ( rule__STSelectionExpression__BitaccessorAssignment_1_3 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( ((LA69_0>=B && LA69_0<=X)) ) {
                alt69=1;
            }
            else if ( (LA69_0==FullStop) ) {
                int LA69_2 = input.LA(2);

                if ( (LA69_2==RULE_INT) ) {
                    alt69=1;
                }
            }
            switch (alt69) {
                case 1 :
                    // InternalSTFunctionParser.g:7363:3: rule__STSelectionExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0"
    // InternalSTFunctionParser.g:7372:1: rule__STSelectionExpression__Group_1_1_0__0 : rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 ;
    public final void rule__STSelectionExpression__Group_1_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7376:1: ( rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1 )
            // InternalSTFunctionParser.g:7377:2: rule__STSelectionExpression__Group_1_1_0__0__Impl rule__STSelectionExpression__Group_1_1_0__1
            {
            pushFollow(FOLLOW_4);
            rule__STSelectionExpression__Group_1_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__0__Impl"
    // InternalSTFunctionParser.g:7384:1: rule__STSelectionExpression__Group_1_1_0__0__Impl : ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7388:1: ( ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) ) )
            // InternalSTFunctionParser.g:7389:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            {
            // InternalSTFunctionParser.g:7389:1: ( ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 ) )
            // InternalSTFunctionParser.g:7390:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7391:2: ( rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 )
            // InternalSTFunctionParser.g:7391:3: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__StructAccessAssignment_1_1_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessAssignment_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1"
    // InternalSTFunctionParser.g:7399:1: rule__STSelectionExpression__Group_1_1_0__1 : rule__STSelectionExpression__Group_1_1_0__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7403:1: ( rule__STSelectionExpression__Group_1_1_0__1__Impl )
            // InternalSTFunctionParser.g:7404:2: rule__STSelectionExpression__Group_1_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_0__1__Impl"
    // InternalSTFunctionParser.g:7410:1: rule__STSelectionExpression__Group_1_1_0__1__Impl : ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7414:1: ( ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7415:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7415:1: ( ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 ) )
            // InternalSTFunctionParser.g:7416:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7417:2: ( rule__STSelectionExpression__MemberAssignment_1_1_0_1 )
            // InternalSTFunctionParser.g:7417:3: rule__STSelectionExpression__MemberAssignment_1_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__MemberAssignment_1_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberAssignment_1_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_0__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0"
    // InternalSTFunctionParser.g:7426:1: rule__STSelectionExpression__Group_1_1_1__0 : rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7430:1: ( rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1 )
            // InternalSTFunctionParser.g:7431:2: rule__STSelectionExpression__Group_1_1_1__0__Impl rule__STSelectionExpression__Group_1_1_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STSelectionExpression__Group_1_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__0__Impl"
    // InternalSTFunctionParser.g:7438:1: rule__STSelectionExpression__Group_1_1_1__0__Impl : ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7442:1: ( ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) ) )
            // InternalSTFunctionParser.g:7443:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            {
            // InternalSTFunctionParser.g:7443:1: ( ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 ) )
            // InternalSTFunctionParser.g:7444:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }
            // InternalSTFunctionParser.g:7445:2: ( rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 )
            // InternalSTFunctionParser.g:7445:3: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessAssignment_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1"
    // InternalSTFunctionParser.g:7453:1: rule__STSelectionExpression__Group_1_1_1__1 : rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 ;
    public final void rule__STSelectionExpression__Group_1_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7457:1: ( rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2 )
            // InternalSTFunctionParser.g:7458:2: rule__STSelectionExpression__Group_1_1_1__1__Impl rule__STSelectionExpression__Group_1_1_1__2
            {
            pushFollow(FOLLOW_19);
            rule__STSelectionExpression__Group_1_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__1__Impl"
    // InternalSTFunctionParser.g:7465:1: rule__STSelectionExpression__Group_1_1_1__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7469:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) ) )
            // InternalSTFunctionParser.g:7470:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:7470:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 ) )
            // InternalSTFunctionParser.g:7471:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }
            // InternalSTFunctionParser.g:7472:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_1 )
            // InternalSTFunctionParser.g:7472:3: rule__STSelectionExpression__IndexAssignment_1_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2"
    // InternalSTFunctionParser.g:7480:1: rule__STSelectionExpression__Group_1_1_1__2 : rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 ;
    public final void rule__STSelectionExpression__Group_1_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7484:1: ( rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3 )
            // InternalSTFunctionParser.g:7485:2: rule__STSelectionExpression__Group_1_1_1__2__Impl rule__STSelectionExpression__Group_1_1_1__3
            {
            pushFollow(FOLLOW_19);
            rule__STSelectionExpression__Group_1_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__2__Impl"
    // InternalSTFunctionParser.g:7492:1: rule__STSelectionExpression__Group_1_1_1__2__Impl : ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7496:1: ( ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* ) )
            // InternalSTFunctionParser.g:7497:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            {
            // InternalSTFunctionParser.g:7497:1: ( ( rule__STSelectionExpression__Group_1_1_1_2__0 )* )
            // InternalSTFunctionParser.g:7498:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }
            // InternalSTFunctionParser.g:7499:2: ( rule__STSelectionExpression__Group_1_1_1_2__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==Comma) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7499:3: rule__STSelectionExpression__Group_1_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__STSelectionExpression__Group_1_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3"
    // InternalSTFunctionParser.g:7507:1: rule__STSelectionExpression__Group_1_1_1__3 : rule__STSelectionExpression__Group_1_1_1__3__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7511:1: ( rule__STSelectionExpression__Group_1_1_1__3__Impl )
            // InternalSTFunctionParser.g:7512:2: rule__STSelectionExpression__Group_1_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1__3__Impl"
    // InternalSTFunctionParser.g:7518:1: rule__STSelectionExpression__Group_1_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__STSelectionExpression__Group_1_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7522:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:7523:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:7523:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:7524:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightSquareBracketKeyword_1_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1__3__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0"
    // InternalSTFunctionParser.g:7534:1: rule__STSelectionExpression__Group_1_1_1_2__0 : rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7538:1: ( rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1 )
            // InternalSTFunctionParser.g:7539:2: rule__STSelectionExpression__Group_1_1_1_2__0__Impl rule__STSelectionExpression__Group_1_1_1_2__1
            {
            pushFollow(FOLLOW_18);
            rule__STSelectionExpression__Group_1_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"
    // InternalSTFunctionParser.g:7546:1: rule__STSelectionExpression__Group_1_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7550:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:7551:1: ( Comma )
            {
            // InternalSTFunctionParser.g:7551:1: ( Comma )
            // InternalSTFunctionParser.g:7552:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1"
    // InternalSTFunctionParser.g:7561:1: rule__STSelectionExpression__Group_1_1_1_2__1 : rule__STSelectionExpression__Group_1_1_1_2__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7565:1: ( rule__STSelectionExpression__Group_1_1_1_2__1__Impl )
            // InternalSTFunctionParser.g:7566:2: rule__STSelectionExpression__Group_1_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"
    // InternalSTFunctionParser.g:7572:1: rule__STSelectionExpression__Group_1_1_1_2__1__Impl : ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7576:1: ( ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) ) )
            // InternalSTFunctionParser.g:7577:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            {
            // InternalSTFunctionParser.g:7577:1: ( ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 ) )
            // InternalSTFunctionParser.g:7578:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }
            // InternalSTFunctionParser.g:7579:2: ( rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 )
            // InternalSTFunctionParser.g:7579:3: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__IndexAssignment_1_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexAssignment_1_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_1_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0"
    // InternalSTFunctionParser.g:7588:1: rule__STSelectionExpression__Group_1_2__0 : rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 ;
    public final void rule__STSelectionExpression__Group_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7592:1: ( rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1 )
            // InternalSTFunctionParser.g:7593:2: rule__STSelectionExpression__Group_1_2__0__Impl rule__STSelectionExpression__Group_1_2__1
            {
            pushFollow(FOLLOW_67);
            rule__STSelectionExpression__Group_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__0__Impl"
    // InternalSTFunctionParser.g:7600:1: rule__STSelectionExpression__Group_1_2__0__Impl : ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7604:1: ( ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) ) )
            // InternalSTFunctionParser.g:7605:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            {
            // InternalSTFunctionParser.g:7605:1: ( ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 ) )
            // InternalSTFunctionParser.g:7606:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }
            // InternalSTFunctionParser.g:7607:2: ( rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 )
            // InternalSTFunctionParser.g:7607:3: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__PoeInvocationAssignment_1_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationAssignment_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1"
    // InternalSTFunctionParser.g:7615:1: rule__STSelectionExpression__Group_1_2__1 : rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 ;
    public final void rule__STSelectionExpression__Group_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7619:1: ( rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2 )
            // InternalSTFunctionParser.g:7620:2: rule__STSelectionExpression__Group_1_2__1__Impl rule__STSelectionExpression__Group_1_2__2
            {
            pushFollow(FOLLOW_67);
            rule__STSelectionExpression__Group_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__1__Impl"
    // InternalSTFunctionParser.g:7627:1: rule__STSelectionExpression__Group_1_2__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) ;
    public final void rule__STSelectionExpression__Group_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7631:1: ( ( ( rule__STSelectionExpression__Group_1_2_1__0 )? ) )
            // InternalSTFunctionParser.g:7632:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            {
            // InternalSTFunctionParser.g:7632:1: ( ( rule__STSelectionExpression__Group_1_2_1__0 )? )
            // InternalSTFunctionParser.g:7633:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }
            // InternalSTFunctionParser.g:7634:2: ( rule__STSelectionExpression__Group_1_2_1__0 )?
            int alt71=2;
            int LA71_0 = input.LA(1);

            if ( ((LA71_0>=LDATE_AND_TIME && LA71_0<=DATE_AND_TIME)||LA71_0==TIME_OF_DAY||LA71_0==WSTRING||(LA71_0>=STRING && LA71_0<=DWORD)||(LA71_0>=LDATE && LA71_0<=LWORD)||(LA71_0>=UDINT && LA71_0<=WCHAR)||(LA71_0>=BOOL && LA71_0<=DINT)||(LA71_0>=LINT && LA71_0<=UINT)||LA71_0==WORD||(LA71_0>=INT && LA71_0<=LDT)||LA71_0==TOD||LA71_0==DT||(LA71_0>=LD && LA71_0<=LT)||LA71_0==NOT||LA71_0==D||LA71_0==T||LA71_0==LeftParenthesis||LA71_0==PlusSign||LA71_0==HyphenMinus||LA71_0==RULE_BOOL_VALUES||(LA71_0>=RULE_NON_DECIMAL && LA71_0<=RULE_INT)||(LA71_0>=RULE_ID && LA71_0<=RULE_STRING)) ) {
                alt71=1;
            }
            switch (alt71) {
                case 1 :
                    // InternalSTFunctionParser.g:7634:3: rule__STSelectionExpression__Group_1_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STSelectionExpression__Group_1_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2"
    // InternalSTFunctionParser.g:7642:1: rule__STSelectionExpression__Group_1_2__2 : rule__STSelectionExpression__Group_1_2__2__Impl ;
    public final void rule__STSelectionExpression__Group_1_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7646:1: ( rule__STSelectionExpression__Group_1_2__2__Impl )
            // InternalSTFunctionParser.g:7647:2: rule__STSelectionExpression__Group_1_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2__2__Impl"
    // InternalSTFunctionParser.g:7653:1: rule__STSelectionExpression__Group_1_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STSelectionExpression__Group_1_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7657:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:7658:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:7658:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:7659:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getRightParenthesisKeyword_1_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2__2__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0"
    // InternalSTFunctionParser.g:7669:1: rule__STSelectionExpression__Group_1_2_1__0 : rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7673:1: ( rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1 )
            // InternalSTFunctionParser.g:7674:2: rule__STSelectionExpression__Group_1_2_1__0__Impl rule__STSelectionExpression__Group_1_2_1__1
            {
            pushFollow(FOLLOW_68);
            rule__STSelectionExpression__Group_1_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__0__Impl"
    // InternalSTFunctionParser.g:7681:1: rule__STSelectionExpression__Group_1_2_1__0__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7685:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) ) )
            // InternalSTFunctionParser.g:7686:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            {
            // InternalSTFunctionParser.g:7686:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 ) )
            // InternalSTFunctionParser.g:7687:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }
            // InternalSTFunctionParser.g:7688:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_0 )
            // InternalSTFunctionParser.g:7688:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1"
    // InternalSTFunctionParser.g:7696:1: rule__STSelectionExpression__Group_1_2_1__1 : rule__STSelectionExpression__Group_1_2_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7700:1: ( rule__STSelectionExpression__Group_1_2_1__1__Impl )
            // InternalSTFunctionParser.g:7701:2: rule__STSelectionExpression__Group_1_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1__1__Impl"
    // InternalSTFunctionParser.g:7707:1: rule__STSelectionExpression__Group_1_2_1__1__Impl : ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) ;
    public final void rule__STSelectionExpression__Group_1_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7711:1: ( ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* ) )
            // InternalSTFunctionParser.g:7712:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            {
            // InternalSTFunctionParser.g:7712:1: ( ( rule__STSelectionExpression__Group_1_2_1_1__0 )* )
            // InternalSTFunctionParser.g:7713:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }
            // InternalSTFunctionParser.g:7714:2: ( rule__STSelectionExpression__Group_1_2_1_1__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==Comma) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7714:3: rule__STSelectionExpression__Group_1_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__STSelectionExpression__Group_1_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getGroup_1_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1__1__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0"
    // InternalSTFunctionParser.g:7723:1: rule__STSelectionExpression__Group_1_2_1_1__0 : rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7727:1: ( rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1 )
            // InternalSTFunctionParser.g:7728:2: rule__STSelectionExpression__Group_1_2_1_1__0__Impl rule__STSelectionExpression__Group_1_2_1_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STSelectionExpression__Group_1_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"
    // InternalSTFunctionParser.g:7735:1: rule__STSelectionExpression__Group_1_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7739:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:7740:1: ( Comma )
            {
            // InternalSTFunctionParser.g:7740:1: ( Comma )
            // InternalSTFunctionParser.g:7741:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getCommaKeyword_1_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__0__Impl"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1"
    // InternalSTFunctionParser.g:7750:1: rule__STSelectionExpression__Group_1_2_1_1__1 : rule__STSelectionExpression__Group_1_2_1_1__1__Impl ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7754:1: ( rule__STSelectionExpression__Group_1_2_1_1__1__Impl )
            // InternalSTFunctionParser.g:7755:2: rule__STSelectionExpression__Group_1_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__Group_1_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1"


    // $ANTLR start "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"
    // InternalSTFunctionParser.g:7761:1: rule__STSelectionExpression__Group_1_2_1_1__1__Impl : ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) ;
    public final void rule__STSelectionExpression__Group_1_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7765:1: ( ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) ) )
            // InternalSTFunctionParser.g:7766:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:7766:1: ( ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 ) )
            // InternalSTFunctionParser.g:7767:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }
            // InternalSTFunctionParser.g:7768:2: ( rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 )
            // InternalSTFunctionParser.g:7768:3: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersAssignment_1_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__Group_1_2_1_1__1__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0"
    // InternalSTFunctionParser.g:7777:1: rule__MultibitPartialAccess__Group__0 : rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 ;
    public final void rule__MultibitPartialAccess__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7781:1: ( rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1 )
            // InternalSTFunctionParser.g:7782:2: rule__MultibitPartialAccess__Group__0__Impl rule__MultibitPartialAccess__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__MultibitPartialAccess__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0"


    // $ANTLR start "rule__MultibitPartialAccess__Group__0__Impl"
    // InternalSTFunctionParser.g:7789:1: rule__MultibitPartialAccess__Group__0__Impl : ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) ;
    public final void rule__MultibitPartialAccess__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7793:1: ( ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) ) )
            // InternalSTFunctionParser.g:7794:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:7794:1: ( ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 ) )
            // InternalSTFunctionParser.g:7795:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }
            // InternalSTFunctionParser.g:7796:2: ( rule__MultibitPartialAccess__AccessSpecifierAssignment_0 )
            // InternalSTFunctionParser.g:7796:3: rule__MultibitPartialAccess__AccessSpecifierAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__AccessSpecifierAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__0__Impl"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1"
    // InternalSTFunctionParser.g:7804:1: rule__MultibitPartialAccess__Group__1 : rule__MultibitPartialAccess__Group__1__Impl ;
    public final void rule__MultibitPartialAccess__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7808:1: ( rule__MultibitPartialAccess__Group__1__Impl )
            // InternalSTFunctionParser.g:7809:2: rule__MultibitPartialAccess__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1"


    // $ANTLR start "rule__MultibitPartialAccess__Group__1__Impl"
    // InternalSTFunctionParser.g:7815:1: rule__MultibitPartialAccess__Group__1__Impl : ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) ;
    public final void rule__MultibitPartialAccess__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7819:1: ( ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) ) )
            // InternalSTFunctionParser.g:7820:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:7820:1: ( ( rule__MultibitPartialAccess__IndexAssignment_1 ) )
            // InternalSTFunctionParser.g:7821:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }
            // InternalSTFunctionParser.g:7822:2: ( rule__MultibitPartialAccess__IndexAssignment_1 )
            // InternalSTFunctionParser.g:7822:3: rule__MultibitPartialAccess__IndexAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__MultibitPartialAccess__IndexAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__Group__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0"
    // InternalSTFunctionParser.g:7831:1: rule__STAtomicExpression__Group_0__0 : rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 ;
    public final void rule__STAtomicExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7835:1: ( rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1 )
            // InternalSTFunctionParser.g:7836:2: rule__STAtomicExpression__Group_0__0__Impl rule__STAtomicExpression__Group_0__1
            {
            pushFollow(FOLLOW_18);
            rule__STAtomicExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0"


    // $ANTLR start "rule__STAtomicExpression__Group_0__0__Impl"
    // InternalSTFunctionParser.g:7843:1: rule__STAtomicExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7847:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:7848:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:7848:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:7849:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1"
    // InternalSTFunctionParser.g:7858:1: rule__STAtomicExpression__Group_0__1 : rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 ;
    public final void rule__STAtomicExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7862:1: ( rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2 )
            // InternalSTFunctionParser.g:7863:2: rule__STAtomicExpression__Group_0__1__Impl rule__STAtomicExpression__Group_0__2
            {
            pushFollow(FOLLOW_25);
            rule__STAtomicExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1"


    // $ANTLR start "rule__STAtomicExpression__Group_0__1__Impl"
    // InternalSTFunctionParser.g:7870:1: rule__STAtomicExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7874:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:7875:1: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:7875:1: ( ruleSTExpression )
            // InternalSTFunctionParser.g:7876:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2"
    // InternalSTFunctionParser.g:7885:1: rule__STAtomicExpression__Group_0__2 : rule__STAtomicExpression__Group_0__2__Impl ;
    public final void rule__STAtomicExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7889:1: ( rule__STAtomicExpression__Group_0__2__Impl )
            // InternalSTFunctionParser.g:7890:2: rule__STAtomicExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2"


    // $ANTLR start "rule__STAtomicExpression__Group_0__2__Impl"
    // InternalSTFunctionParser.g:7896:1: rule__STAtomicExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7900:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:7901:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:7901:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:7902:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0"
    // InternalSTFunctionParser.g:7912:1: rule__STAtomicExpression__Group_1__0 : rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 ;
    public final void rule__STAtomicExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7916:1: ( rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7917:2: rule__STAtomicExpression__Group_1__0__Impl rule__STAtomicExpression__Group_1__1
            {
            pushFollow(FOLLOW_63);
            rule__STAtomicExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7924:1: rule__STAtomicExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STAtomicExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7928:1: ( ( () ) )
            // InternalSTFunctionParser.g:7929:1: ( () )
            {
            // InternalSTFunctionParser.g:7929:1: ( () )
            // InternalSTFunctionParser.g:7930:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }
            // InternalSTFunctionParser.g:7931:2: ()
            // InternalSTFunctionParser.g:7931:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSTSymbolAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1"
    // InternalSTFunctionParser.g:7939:1: rule__STAtomicExpression__Group_1__1 : rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 ;
    public final void rule__STAtomicExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7943:1: ( rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2 )
            // InternalSTFunctionParser.g:7944:2: rule__STAtomicExpression__Group_1__1__Impl rule__STAtomicExpression__Group_1__2
            {
            pushFollow(FOLLOW_63);
            rule__STAtomicExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7951:1: rule__STAtomicExpression__Group_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7955:1: ( ( ( rule__STAtomicExpression__Group_1_1__0 )? ) )
            // InternalSTFunctionParser.g:7956:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            {
            // InternalSTFunctionParser.g:7956:1: ( ( rule__STAtomicExpression__Group_1_1__0 )? )
            // InternalSTFunctionParser.g:7957:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }
            // InternalSTFunctionParser.g:7958:2: ( rule__STAtomicExpression__Group_1_1__0 )?
            int alt73=2;
            int LA73_0 = input.LA(1);

            if ( (LA73_0==RULE_ID) ) {
                int LA73_1 = input.LA(2);

                if ( (LA73_1==NumberSign) ) {
                    alt73=1;
                }
            }
            switch (alt73) {
                case 1 :
                    // InternalSTFunctionParser.g:7958:3: rule__STAtomicExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2"
    // InternalSTFunctionParser.g:7966:1: rule__STAtomicExpression__Group_1__2 : rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 ;
    public final void rule__STAtomicExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7970:1: ( rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3 )
            // InternalSTFunctionParser.g:7971:2: rule__STAtomicExpression__Group_1__2__Impl rule__STAtomicExpression__Group_1__3
            {
            pushFollow(FOLLOW_66);
            rule__STAtomicExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1__2__Impl"
    // InternalSTFunctionParser.g:7978:1: rule__STAtomicExpression__Group_1__2__Impl : ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) ;
    public final void rule__STAtomicExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7982:1: ( ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) ) )
            // InternalSTFunctionParser.g:7983:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            {
            // InternalSTFunctionParser.g:7983:1: ( ( rule__STAtomicExpression__SymbolAssignment_1_2 ) )
            // InternalSTFunctionParser.g:7984:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }
            // InternalSTFunctionParser.g:7985:2: ( rule__STAtomicExpression__SymbolAssignment_1_2 )
            // InternalSTFunctionParser.g:7985:3: rule__STAtomicExpression__SymbolAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__SymbolAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3"
    // InternalSTFunctionParser.g:7993:1: rule__STAtomicExpression__Group_1__3 : rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 ;
    public final void rule__STAtomicExpression__Group_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7997:1: ( rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4 )
            // InternalSTFunctionParser.g:7998:2: rule__STAtomicExpression__Group_1__3__Impl rule__STAtomicExpression__Group_1__4
            {
            pushFollow(FOLLOW_66);
            rule__STAtomicExpression__Group_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3"


    // $ANTLR start "rule__STAtomicExpression__Group_1__3__Impl"
    // InternalSTFunctionParser.g:8005:1: rule__STAtomicExpression__Group_1__3__Impl : ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) ;
    public final void rule__STAtomicExpression__Group_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8009:1: ( ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? ) )
            // InternalSTFunctionParser.g:8010:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            {
            // InternalSTFunctionParser.g:8010:1: ( ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )? )
            // InternalSTFunctionParser.g:8011:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }
            // InternalSTFunctionParser.g:8012:2: ( rule__STAtomicExpression__BitaccessorAssignment_1_3 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( ((LA74_0>=B && LA74_0<=X)) ) {
                alt74=1;
            }
            else if ( (LA74_0==FullStop) ) {
                int LA74_2 = input.LA(2);

                if ( (LA74_2==RULE_INT) ) {
                    alt74=1;
                }
            }
            switch (alt74) {
                case 1 :
                    // InternalSTFunctionParser.g:8012:3: rule__STAtomicExpression__BitaccessorAssignment_1_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__BitaccessorAssignment_1_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorAssignment_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__3__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4"
    // InternalSTFunctionParser.g:8020:1: rule__STAtomicExpression__Group_1__4 : rule__STAtomicExpression__Group_1__4__Impl ;
    public final void rule__STAtomicExpression__Group_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8024:1: ( rule__STAtomicExpression__Group_1__4__Impl )
            // InternalSTFunctionParser.g:8025:2: rule__STAtomicExpression__Group_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4"


    // $ANTLR start "rule__STAtomicExpression__Group_1__4__Impl"
    // InternalSTFunctionParser.g:8031:1: rule__STAtomicExpression__Group_1__4__Impl : ( ( rule__STAtomicExpression__Group_1_4__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8035:1: ( ( ( rule__STAtomicExpression__Group_1_4__0 )? ) )
            // InternalSTFunctionParser.g:8036:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            {
            // InternalSTFunctionParser.g:8036:1: ( ( rule__STAtomicExpression__Group_1_4__0 )? )
            // InternalSTFunctionParser.g:8037:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }
            // InternalSTFunctionParser.g:8038:2: ( rule__STAtomicExpression__Group_1_4__0 )?
            int alt75=2;
            alt75 = dfa75.predict(input);
            switch (alt75) {
                case 1 :
                    // InternalSTFunctionParser.g:8038:3: rule__STAtomicExpression__Group_1_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1__4__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0"
    // InternalSTFunctionParser.g:8047:1: rule__STAtomicExpression__Group_1_1__0 : rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8051:1: ( rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1 )
            // InternalSTFunctionParser.g:8052:2: rule__STAtomicExpression__Group_1_1__0__Impl rule__STAtomicExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_70);
            rule__STAtomicExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__0__Impl"
    // InternalSTFunctionParser.g:8059:1: rule__STAtomicExpression__Group_1_1__0__Impl : ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8063:1: ( ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) ) )
            // InternalSTFunctionParser.g:8064:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            {
            // InternalSTFunctionParser.g:8064:1: ( ( rule__STAtomicExpression__TypeAssignment_1_1_0 ) )
            // InternalSTFunctionParser.g:8065:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }
            // InternalSTFunctionParser.g:8066:2: ( rule__STAtomicExpression__TypeAssignment_1_1_0 )
            // InternalSTFunctionParser.g:8066:3: rule__STAtomicExpression__TypeAssignment_1_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__TypeAssignment_1_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeAssignment_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1"
    // InternalSTFunctionParser.g:8074:1: rule__STAtomicExpression__Group_1_1__1 : rule__STAtomicExpression__Group_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8078:1: ( rule__STAtomicExpression__Group_1_1__1__Impl )
            // InternalSTFunctionParser.g:8079:2: rule__STAtomicExpression__Group_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_1__1__Impl"
    // InternalSTFunctionParser.g:8085:1: rule__STAtomicExpression__Group_1_1__1__Impl : ( NumberSign ) ;
    public final void rule__STAtomicExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8089:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:8090:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:8090:1: ( NumberSign )
            // InternalSTFunctionParser.g:8091:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getNumberSignKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0"
    // InternalSTFunctionParser.g:8101:1: rule__STAtomicExpression__Group_1_4__0 : rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 ;
    public final void rule__STAtomicExpression__Group_1_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8105:1: ( rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1 )
            // InternalSTFunctionParser.g:8106:2: rule__STAtomicExpression__Group_1_4__0__Impl rule__STAtomicExpression__Group_1_4__1
            {
            pushFollow(FOLLOW_67);
            rule__STAtomicExpression__Group_1_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__0__Impl"
    // InternalSTFunctionParser.g:8113:1: rule__STAtomicExpression__Group_1_4__0__Impl : ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8117:1: ( ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) ) )
            // InternalSTFunctionParser.g:8118:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            {
            // InternalSTFunctionParser.g:8118:1: ( ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 ) )
            // InternalSTFunctionParser.g:8119:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }
            // InternalSTFunctionParser.g:8120:2: ( rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 )
            // InternalSTFunctionParser.g:8120:3: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__PoeInvocationAssignment_1_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationAssignment_1_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1"
    // InternalSTFunctionParser.g:8128:1: rule__STAtomicExpression__Group_1_4__1 : rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 ;
    public final void rule__STAtomicExpression__Group_1_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8132:1: ( rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2 )
            // InternalSTFunctionParser.g:8133:2: rule__STAtomicExpression__Group_1_4__1__Impl rule__STAtomicExpression__Group_1_4__2
            {
            pushFollow(FOLLOW_67);
            rule__STAtomicExpression__Group_1_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__1__Impl"
    // InternalSTFunctionParser.g:8140:1: rule__STAtomicExpression__Group_1_4__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) ;
    public final void rule__STAtomicExpression__Group_1_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8144:1: ( ( ( rule__STAtomicExpression__Group_1_4_1__0 )? ) )
            // InternalSTFunctionParser.g:8145:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            {
            // InternalSTFunctionParser.g:8145:1: ( ( rule__STAtomicExpression__Group_1_4_1__0 )? )
            // InternalSTFunctionParser.g:8146:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }
            // InternalSTFunctionParser.g:8147:2: ( rule__STAtomicExpression__Group_1_4_1__0 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=LDATE_AND_TIME && LA76_0<=DATE_AND_TIME)||LA76_0==TIME_OF_DAY||LA76_0==WSTRING||(LA76_0>=STRING && LA76_0<=DWORD)||(LA76_0>=LDATE && LA76_0<=LWORD)||(LA76_0>=UDINT && LA76_0<=WCHAR)||(LA76_0>=BOOL && LA76_0<=DINT)||(LA76_0>=LINT && LA76_0<=UINT)||LA76_0==WORD||(LA76_0>=INT && LA76_0<=LDT)||LA76_0==TOD||LA76_0==DT||(LA76_0>=LD && LA76_0<=LT)||LA76_0==NOT||LA76_0==D||LA76_0==T||LA76_0==LeftParenthesis||LA76_0==PlusSign||LA76_0==HyphenMinus||LA76_0==RULE_BOOL_VALUES||(LA76_0>=RULE_NON_DECIMAL && LA76_0<=RULE_INT)||(LA76_0>=RULE_ID && LA76_0<=RULE_STRING)) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSTFunctionParser.g:8147:3: rule__STAtomicExpression__Group_1_4_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAtomicExpression__Group_1_4_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2"
    // InternalSTFunctionParser.g:8155:1: rule__STAtomicExpression__Group_1_4__2 : rule__STAtomicExpression__Group_1_4__2__Impl ;
    public final void rule__STAtomicExpression__Group_1_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8159:1: ( rule__STAtomicExpression__Group_1_4__2__Impl )
            // InternalSTFunctionParser.g:8160:2: rule__STAtomicExpression__Group_1_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4__2__Impl"
    // InternalSTFunctionParser.g:8166:1: rule__STAtomicExpression__Group_1_4__2__Impl : ( RightParenthesis ) ;
    public final void rule__STAtomicExpression__Group_1_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8170:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:8171:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:8171:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:8172:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getRightParenthesisKeyword_1_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4__2__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0"
    // InternalSTFunctionParser.g:8182:1: rule__STAtomicExpression__Group_1_4_1__0 : rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8186:1: ( rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1 )
            // InternalSTFunctionParser.g:8187:2: rule__STAtomicExpression__Group_1_4_1__0__Impl rule__STAtomicExpression__Group_1_4_1__1
            {
            pushFollow(FOLLOW_68);
            rule__STAtomicExpression__Group_1_4_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__0__Impl"
    // InternalSTFunctionParser.g:8194:1: rule__STAtomicExpression__Group_1_4_1__0__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8198:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) ) )
            // InternalSTFunctionParser.g:8199:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            {
            // InternalSTFunctionParser.g:8199:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 ) )
            // InternalSTFunctionParser.g:8200:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }
            // InternalSTFunctionParser.g:8201:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_0 )
            // InternalSTFunctionParser.g:8201:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1"
    // InternalSTFunctionParser.g:8209:1: rule__STAtomicExpression__Group_1_4_1__1 : rule__STAtomicExpression__Group_1_4_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8213:1: ( rule__STAtomicExpression__Group_1_4_1__1__Impl )
            // InternalSTFunctionParser.g:8214:2: rule__STAtomicExpression__Group_1_4_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1__1__Impl"
    // InternalSTFunctionParser.g:8220:1: rule__STAtomicExpression__Group_1_4_1__1__Impl : ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) ;
    public final void rule__STAtomicExpression__Group_1_4_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8224:1: ( ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* ) )
            // InternalSTFunctionParser.g:8225:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            {
            // InternalSTFunctionParser.g:8225:1: ( ( rule__STAtomicExpression__Group_1_4_1_1__0 )* )
            // InternalSTFunctionParser.g:8226:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }
            // InternalSTFunctionParser.g:8227:2: ( rule__STAtomicExpression__Group_1_4_1_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==Comma) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8227:3: rule__STAtomicExpression__Group_1_4_1_1__0
            	    {
            	    pushFollow(FOLLOW_20);
            	    rule__STAtomicExpression__Group_1_4_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getGroup_1_4_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1__1__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0"
    // InternalSTFunctionParser.g:8236:1: rule__STAtomicExpression__Group_1_4_1_1__0 : rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8240:1: ( rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1 )
            // InternalSTFunctionParser.g:8241:2: rule__STAtomicExpression__Group_1_4_1_1__0__Impl rule__STAtomicExpression__Group_1_4_1_1__1
            {
            pushFollow(FOLLOW_18);
            rule__STAtomicExpression__Group_1_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"
    // InternalSTFunctionParser.g:8248:1: rule__STAtomicExpression__Group_1_4_1_1__0__Impl : ( Comma ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8252:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:8253:1: ( Comma )
            {
            // InternalSTFunctionParser.g:8253:1: ( Comma )
            // InternalSTFunctionParser.g:8254:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getCommaKeyword_1_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__0__Impl"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1"
    // InternalSTFunctionParser.g:8263:1: rule__STAtomicExpression__Group_1_4_1_1__1 : rule__STAtomicExpression__Group_1_4_1_1__1__Impl ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8267:1: ( rule__STAtomicExpression__Group_1_4_1_1__1__Impl )
            // InternalSTFunctionParser.g:8268:2: rule__STAtomicExpression__Group_1_4_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__Group_1_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1"


    // $ANTLR start "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"
    // InternalSTFunctionParser.g:8274:1: rule__STAtomicExpression__Group_1_4_1_1__1__Impl : ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) ;
    public final void rule__STAtomicExpression__Group_1_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8278:1: ( ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) ) )
            // InternalSTFunctionParser.g:8279:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:8279:1: ( ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 ) )
            // InternalSTFunctionParser.g:8280:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }
            // InternalSTFunctionParser.g:8281:2: ( rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 )
            // InternalSTFunctionParser.g:8281:3: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersAssignment_1_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__Group_1_4_1_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0"
    // InternalSTFunctionParser.g:8290:1: rule__STLiteralExpressions__Group_0__0 : rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 ;
    public final void rule__STLiteralExpressions__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8294:1: ( rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1 )
            // InternalSTFunctionParser.g:8295:2: rule__STLiteralExpressions__Group_0__0__Impl rule__STLiteralExpressions__Group_0__1
            {
            pushFollow(FOLLOW_71);
            rule__STLiteralExpressions__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__0__Impl"
    // InternalSTFunctionParser.g:8302:1: rule__STLiteralExpressions__Group_0__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8306:1: ( ( () ) )
            // InternalSTFunctionParser.g:8307:1: ( () )
            {
            // InternalSTFunctionParser.g:8307:1: ( () )
            // InternalSTFunctionParser.g:8308:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTBoolLiteralAction_0_0()); 
            }
            // InternalSTFunctionParser.g:8309:2: ()
            // InternalSTFunctionParser.g:8309:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTBoolLiteralAction_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1"
    // InternalSTFunctionParser.g:8317:1: rule__STLiteralExpressions__Group_0__1 : rule__STLiteralExpressions__Group_0__1__Impl ;
    public final void rule__STLiteralExpressions__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8321:1: ( rule__STLiteralExpressions__Group_0__1__Impl )
            // InternalSTFunctionParser.g:8322:2: rule__STLiteralExpressions__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_0__1__Impl"
    // InternalSTFunctionParser.g:8328:1: rule__STLiteralExpressions__Group_0__1__Impl : ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8332:1: ( ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) ) )
            // InternalSTFunctionParser.g:8333:1: ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) )
            {
            // InternalSTFunctionParser.g:8333:1: ( ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 ) )
            // InternalSTFunctionParser.g:8334:2: ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralAssignment_0_1()); 
            }
            // InternalSTFunctionParser.g:8335:2: ( rule__STLiteralExpressions__BoolLiteralAssignment_0_1 )
            // InternalSTFunctionParser.g:8335:3: rule__STLiteralExpressions__BoolLiteralAssignment_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__BoolLiteralAssignment_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralAssignment_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_0__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0"
    // InternalSTFunctionParser.g:8344:1: rule__STLiteralExpressions__Group_1__0 : rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 ;
    public final void rule__STLiteralExpressions__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8348:1: ( rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1 )
            // InternalSTFunctionParser.g:8349:2: rule__STLiteralExpressions__Group_1__0__Impl rule__STLiteralExpressions__Group_1__1
            {
            pushFollow(FOLLOW_72);
            rule__STLiteralExpressions__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__0__Impl"
    // InternalSTFunctionParser.g:8356:1: rule__STLiteralExpressions__Group_1__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8360:1: ( ( () ) )
            // InternalSTFunctionParser.g:8361:1: ( () )
            {
            // InternalSTFunctionParser.g:8361:1: ( () )
            // InternalSTFunctionParser.g:8362:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_1_0()); 
            }
            // InternalSTFunctionParser.g:8363:2: ()
            // InternalSTFunctionParser.g:8363:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1"
    // InternalSTFunctionParser.g:8371:1: rule__STLiteralExpressions__Group_1__1 : rule__STLiteralExpressions__Group_1__1__Impl ;
    public final void rule__STLiteralExpressions__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8375:1: ( rule__STLiteralExpressions__Group_1__1__Impl )
            // InternalSTFunctionParser.g:8376:2: rule__STLiteralExpressions__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_1__1__Impl"
    // InternalSTFunctionParser.g:8382:1: rule__STLiteralExpressions__Group_1__1__Impl : ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8386:1: ( ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:8387:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:8387:1: ( ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 ) )
            // InternalSTFunctionParser.g:8388:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:8389:2: ( rule__STLiteralExpressions__NumericLiteralAssignment_1_1 )
            // InternalSTFunctionParser.g:8389:3: rule__STLiteralExpressions__NumericLiteralAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__NumericLiteralAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_1__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0"
    // InternalSTFunctionParser.g:8398:1: rule__STLiteralExpressions__Group_2__0 : rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 ;
    public final void rule__STLiteralExpressions__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8402:1: ( rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1 )
            // InternalSTFunctionParser.g:8403:2: rule__STLiteralExpressions__Group_2__0__Impl rule__STLiteralExpressions__Group_2__1
            {
            pushFollow(FOLLOW_73);
            rule__STLiteralExpressions__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__0__Impl"
    // InternalSTFunctionParser.g:8410:1: rule__STLiteralExpressions__Group_2__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8414:1: ( ( () ) )
            // InternalSTFunctionParser.g:8415:1: ( () )
            {
            // InternalSTFunctionParser.g:8415:1: ( () )
            // InternalSTFunctionParser.g:8416:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_2_0()); 
            }
            // InternalSTFunctionParser.g:8417:2: ()
            // InternalSTFunctionParser.g:8417:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralAction_2_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1"
    // InternalSTFunctionParser.g:8425:1: rule__STLiteralExpressions__Group_2__1 : rule__STLiteralExpressions__Group_2__1__Impl ;
    public final void rule__STLiteralExpressions__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8429:1: ( rule__STLiteralExpressions__Group_2__1__Impl )
            // InternalSTFunctionParser.g:8430:2: rule__STLiteralExpressions__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_2__1__Impl"
    // InternalSTFunctionParser.g:8436:1: rule__STLiteralExpressions__Group_2__1__Impl : ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8440:1: ( ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:8441:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:8441:1: ( ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 ) )
            // InternalSTFunctionParser.g:8442:2: ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:8443:2: ( rule__STLiteralExpressions__DateLiteralAssignment_2_1 )
            // InternalSTFunctionParser.g:8443:3: rule__STLiteralExpressions__DateLiteralAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__DateLiteralAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_2__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0"
    // InternalSTFunctionParser.g:8452:1: rule__STLiteralExpressions__Group_3__0 : rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 ;
    public final void rule__STLiteralExpressions__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8456:1: ( rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1 )
            // InternalSTFunctionParser.g:8457:2: rule__STLiteralExpressions__Group_3__0__Impl rule__STLiteralExpressions__Group_3__1
            {
            pushFollow(FOLLOW_74);
            rule__STLiteralExpressions__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__0__Impl"
    // InternalSTFunctionParser.g:8464:1: rule__STLiteralExpressions__Group_3__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8468:1: ( ( () ) )
            // InternalSTFunctionParser.g:8469:1: ( () )
            {
            // InternalSTFunctionParser.g:8469:1: ( () )
            // InternalSTFunctionParser.g:8470:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_3_0()); 
            }
            // InternalSTFunctionParser.g:8471:2: ()
            // InternalSTFunctionParser.g:8471:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralAction_3_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1"
    // InternalSTFunctionParser.g:8479:1: rule__STLiteralExpressions__Group_3__1 : rule__STLiteralExpressions__Group_3__1__Impl ;
    public final void rule__STLiteralExpressions__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8483:1: ( rule__STLiteralExpressions__Group_3__1__Impl )
            // InternalSTFunctionParser.g:8484:2: rule__STLiteralExpressions__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_3__1__Impl"
    // InternalSTFunctionParser.g:8490:1: rule__STLiteralExpressions__Group_3__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8494:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) ) )
            // InternalSTFunctionParser.g:8495:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) )
            {
            // InternalSTFunctionParser.g:8495:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 ) )
            // InternalSTFunctionParser.g:8496:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_3_1()); 
            }
            // InternalSTFunctionParser.g:8497:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_3_1 )
            // InternalSTFunctionParser.g:8497:3: rule__STLiteralExpressions__TimeLiteralAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_3__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0"
    // InternalSTFunctionParser.g:8506:1: rule__STLiteralExpressions__Group_4__0 : rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 ;
    public final void rule__STLiteralExpressions__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8510:1: ( rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1 )
            // InternalSTFunctionParser.g:8511:2: rule__STLiteralExpressions__Group_4__0__Impl rule__STLiteralExpressions__Group_4__1
            {
            pushFollow(FOLLOW_75);
            rule__STLiteralExpressions__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__0__Impl"
    // InternalSTFunctionParser.g:8518:1: rule__STLiteralExpressions__Group_4__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8522:1: ( ( () ) )
            // InternalSTFunctionParser.g:8523:1: ( () )
            {
            // InternalSTFunctionParser.g:8523:1: ( () )
            // InternalSTFunctionParser.g:8524:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_4_0()); 
            }
            // InternalSTFunctionParser.g:8525:2: ()
            // InternalSTFunctionParser.g:8525:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralAction_4_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1"
    // InternalSTFunctionParser.g:8533:1: rule__STLiteralExpressions__Group_4__1 : rule__STLiteralExpressions__Group_4__1__Impl ;
    public final void rule__STLiteralExpressions__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8537:1: ( rule__STLiteralExpressions__Group_4__1__Impl )
            // InternalSTFunctionParser.g:8538:2: rule__STLiteralExpressions__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_4__1__Impl"
    // InternalSTFunctionParser.g:8544:1: rule__STLiteralExpressions__Group_4__1__Impl : ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8548:1: ( ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) ) )
            // InternalSTFunctionParser.g:8549:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) )
            {
            // InternalSTFunctionParser.g:8549:1: ( ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 ) )
            // InternalSTFunctionParser.g:8550:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_4_1()); 
            }
            // InternalSTFunctionParser.g:8551:2: ( rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 )
            // InternalSTFunctionParser.g:8551:3: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_4__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0"
    // InternalSTFunctionParser.g:8560:1: rule__STLiteralExpressions__Group_5__0 : rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 ;
    public final void rule__STLiteralExpressions__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8564:1: ( rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1 )
            // InternalSTFunctionParser.g:8565:2: rule__STLiteralExpressions__Group_5__0__Impl rule__STLiteralExpressions__Group_5__1
            {
            pushFollow(FOLLOW_76);
            rule__STLiteralExpressions__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__0__Impl"
    // InternalSTFunctionParser.g:8572:1: rule__STLiteralExpressions__Group_5__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8576:1: ( ( () ) )
            // InternalSTFunctionParser.g:8577:1: ( () )
            {
            // InternalSTFunctionParser.g:8577:1: ( () )
            // InternalSTFunctionParser.g:8578:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_5_0()); 
            }
            // InternalSTFunctionParser.g:8579:2: ()
            // InternalSTFunctionParser.g:8579:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralAction_5_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1"
    // InternalSTFunctionParser.g:8587:1: rule__STLiteralExpressions__Group_5__1 : rule__STLiteralExpressions__Group_5__1__Impl ;
    public final void rule__STLiteralExpressions__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8591:1: ( rule__STLiteralExpressions__Group_5__1__Impl )
            // InternalSTFunctionParser.g:8592:2: rule__STLiteralExpressions__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_5__1__Impl"
    // InternalSTFunctionParser.g:8598:1: rule__STLiteralExpressions__Group_5__1__Impl : ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8602:1: ( ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) ) )
            // InternalSTFunctionParser.g:8603:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) )
            {
            // InternalSTFunctionParser.g:8603:1: ( ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 ) )
            // InternalSTFunctionParser.g:8604:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_5_1()); 
            }
            // InternalSTFunctionParser.g:8605:2: ( rule__STLiteralExpressions__TimeLiteralAssignment_5_1 )
            // InternalSTFunctionParser.g:8605:3: rule__STLiteralExpressions__TimeLiteralAssignment_5_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__TimeLiteralAssignment_5_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralAssignment_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_5__1__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__0"
    // InternalSTFunctionParser.g:8614:1: rule__STLiteralExpressions__Group_6__0 : rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1 ;
    public final void rule__STLiteralExpressions__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8618:1: ( rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1 )
            // InternalSTFunctionParser.g:8619:2: rule__STLiteralExpressions__Group_6__0__Impl rule__STLiteralExpressions__Group_6__1
            {
            pushFollow(FOLLOW_77);
            rule__STLiteralExpressions__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__0"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__0__Impl"
    // InternalSTFunctionParser.g:8626:1: rule__STLiteralExpressions__Group_6__0__Impl : ( () ) ;
    public final void rule__STLiteralExpressions__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8630:1: ( ( () ) )
            // InternalSTFunctionParser.g:8631:1: ( () )
            {
            // InternalSTFunctionParser.g:8631:1: ( () )
            // InternalSTFunctionParser.g:8632:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_6_0()); 
            }
            // InternalSTFunctionParser.g:8633:2: ()
            // InternalSTFunctionParser.g:8633:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralAction_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__0__Impl"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__1"
    // InternalSTFunctionParser.g:8641:1: rule__STLiteralExpressions__Group_6__1 : rule__STLiteralExpressions__Group_6__1__Impl ;
    public final void rule__STLiteralExpressions__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8645:1: ( rule__STLiteralExpressions__Group_6__1__Impl )
            // InternalSTFunctionParser.g:8646:2: rule__STLiteralExpressions__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__1"


    // $ANTLR start "rule__STLiteralExpressions__Group_6__1__Impl"
    // InternalSTFunctionParser.g:8652:1: rule__STLiteralExpressions__Group_6__1__Impl : ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) ) ;
    public final void rule__STLiteralExpressions__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8656:1: ( ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) ) )
            // InternalSTFunctionParser.g:8657:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) )
            {
            // InternalSTFunctionParser.g:8657:1: ( ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 ) )
            // InternalSTFunctionParser.g:8658:2: ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_6_1()); 
            }
            // InternalSTFunctionParser.g:8659:2: ( rule__STLiteralExpressions__StringLiteralAssignment_6_1 )
            // InternalSTFunctionParser.g:8659:3: rule__STLiteralExpressions__StringLiteralAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__StringLiteralAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Group_6__1__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__0"
    // InternalSTFunctionParser.g:8668:1: rule__BOOL_LITERAL__Group__0 : rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1 ;
    public final void rule__BOOL_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8672:1: ( rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1 )
            // InternalSTFunctionParser.g:8673:2: rule__BOOL_LITERAL__Group__0__Impl rule__BOOL_LITERAL__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__BOOL_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__0"


    // $ANTLR start "rule__BOOL_LITERAL__Group__0__Impl"
    // InternalSTFunctionParser.g:8680:1: rule__BOOL_LITERAL__Group__0__Impl : ( ( rule__BOOL_LITERAL__NotAssignment_0 )? ) ;
    public final void rule__BOOL_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8684:1: ( ( ( rule__BOOL_LITERAL__NotAssignment_0 )? ) )
            // InternalSTFunctionParser.g:8685:1: ( ( rule__BOOL_LITERAL__NotAssignment_0 )? )
            {
            // InternalSTFunctionParser.g:8685:1: ( ( rule__BOOL_LITERAL__NotAssignment_0 )? )
            // InternalSTFunctionParser.g:8686:2: ( rule__BOOL_LITERAL__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8687:2: ( rule__BOOL_LITERAL__NotAssignment_0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==NOT) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSTFunctionParser.g:8687:3: rule__BOOL_LITERAL__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__BOOL_LITERAL__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__1"
    // InternalSTFunctionParser.g:8695:1: rule__BOOL_LITERAL__Group__1 : rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2 ;
    public final void rule__BOOL_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8699:1: ( rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2 )
            // InternalSTFunctionParser.g:8700:2: rule__BOOL_LITERAL__Group__1__Impl rule__BOOL_LITERAL__Group__2
            {
            pushFollow(FOLLOW_71);
            rule__BOOL_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__1"


    // $ANTLR start "rule__BOOL_LITERAL__Group__1__Impl"
    // InternalSTFunctionParser.g:8707:1: rule__BOOL_LITERAL__Group__1__Impl : ( ( BOOL )? ) ;
    public final void rule__BOOL_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8711:1: ( ( ( BOOL )? ) )
            // InternalSTFunctionParser.g:8712:1: ( ( BOOL )? )
            {
            // InternalSTFunctionParser.g:8712:1: ( ( BOOL )? )
            // InternalSTFunctionParser.g:8713:2: ( BOOL )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getBOOLKeyword_1()); 
            }
            // InternalSTFunctionParser.g:8714:2: ( BOOL )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==BOOL) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSTFunctionParser.g:8714:3: BOOL
                    {
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getBOOLKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__BOOL_LITERAL__Group__2"
    // InternalSTFunctionParser.g:8722:1: rule__BOOL_LITERAL__Group__2 : rule__BOOL_LITERAL__Group__2__Impl ;
    public final void rule__BOOL_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8726:1: ( rule__BOOL_LITERAL__Group__2__Impl )
            // InternalSTFunctionParser.g:8727:2: rule__BOOL_LITERAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__2"


    // $ANTLR start "rule__BOOL_LITERAL__Group__2__Impl"
    // InternalSTFunctionParser.g:8733:1: rule__BOOL_LITERAL__Group__2__Impl : ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) ) ;
    public final void rule__BOOL_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8737:1: ( ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:8738:1: ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:8738:1: ( ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 ) )
            // InternalSTFunctionParser.g:8739:2: ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:8740:2: ( rule__BOOL_LITERAL__KeyWordValueAssignment_2 )
            // InternalSTFunctionParser.g:8740:3: rule__BOOL_LITERAL__KeyWordValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__BOOL_LITERAL__KeyWordValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0"
    // InternalSTFunctionParser.g:8749:1: rule__NUMERIC_LITERAL__Group__0 : rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 ;
    public final void rule__NUMERIC_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8753:1: ( rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1 )
            // InternalSTFunctionParser.g:8754:2: rule__NUMERIC_LITERAL__Group__0__Impl rule__NUMERIC_LITERAL__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__NUMERIC_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__0__Impl"
    // InternalSTFunctionParser.g:8761:1: rule__NUMERIC_LITERAL__Group__0__Impl : ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8765:1: ( ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? ) )
            // InternalSTFunctionParser.g:8766:1: ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? )
            {
            // InternalSTFunctionParser.g:8766:1: ( ( rule__NUMERIC_LITERAL__NotAssignment_0 )? )
            // InternalSTFunctionParser.g:8767:2: ( rule__NUMERIC_LITERAL__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8768:2: ( rule__NUMERIC_LITERAL__NotAssignment_0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==NOT) ) {
                alt80=1;
            }
            switch (alt80) {
                case 1 :
                    // InternalSTFunctionParser.g:8768:3: rule__NUMERIC_LITERAL__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1"
    // InternalSTFunctionParser.g:8776:1: rule__NUMERIC_LITERAL__Group__1 : rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2 ;
    public final void rule__NUMERIC_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8780:1: ( rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2 )
            // InternalSTFunctionParser.g:8781:2: rule__NUMERIC_LITERAL__Group__1__Impl rule__NUMERIC_LITERAL__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__NUMERIC_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__1__Impl"
    // InternalSTFunctionParser.g:8788:1: rule__NUMERIC_LITERAL__Group__1__Impl : ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? ) ;
    public final void rule__NUMERIC_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8792:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? ) )
            // InternalSTFunctionParser.g:8793:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? )
            {
            // InternalSTFunctionParser.g:8793:1: ( ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )? )
            // InternalSTFunctionParser.g:8794:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8795:2: ( rule__NUMERIC_LITERAL__KeywordAssignment_1 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==DWORD||LA81_0==LREAL||LA81_0==LWORD||(LA81_0>=UDINT && LA81_0<=USINT)||LA81_0==BYTE||LA81_0==DINT||LA81_0==LINT||(LA81_0>=REAL && LA81_0<=SINT)||LA81_0==UINT||LA81_0==WORD||LA81_0==INT) ) {
                alt81=1;
            }
            switch (alt81) {
                case 1 :
                    // InternalSTFunctionParser.g:8795:3: rule__NUMERIC_LITERAL__KeywordAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__NUMERIC_LITERAL__KeywordAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__2"
    // InternalSTFunctionParser.g:8803:1: rule__NUMERIC_LITERAL__Group__2 : rule__NUMERIC_LITERAL__Group__2__Impl ;
    public final void rule__NUMERIC_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8807:1: ( rule__NUMERIC_LITERAL__Group__2__Impl )
            // InternalSTFunctionParser.g:8808:2: rule__NUMERIC_LITERAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__2"


    // $ANTLR start "rule__NUMERIC_LITERAL__Group__2__Impl"
    // InternalSTFunctionParser.g:8814:1: rule__NUMERIC_LITERAL__Group__2__Impl : ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) ) ;
    public final void rule__NUMERIC_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8818:1: ( ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) ) )
            // InternalSTFunctionParser.g:8819:1: ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) )
            {
            // InternalSTFunctionParser.g:8819:1: ( ( rule__NUMERIC_LITERAL__Alternatives_2 ) )
            // InternalSTFunctionParser.g:8820:2: ( rule__NUMERIC_LITERAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_2()); 
            }
            // InternalSTFunctionParser.g:8821:2: ( rule__NUMERIC_LITERAL__Alternatives_2 )
            // InternalSTFunctionParser.g:8821:3: rule__NUMERIC_LITERAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__0"
    // InternalSTFunctionParser.g:8830:1: rule__DATE_LITERAL__Group__0 : rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 ;
    public final void rule__DATE_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8834:1: ( rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1 )
            // InternalSTFunctionParser.g:8835:2: rule__DATE_LITERAL__Group__0__Impl rule__DATE_LITERAL__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__DATE_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_LITERAL__Group__0__Impl"
    // InternalSTFunctionParser.g:8842:1: rule__DATE_LITERAL__Group__0__Impl : ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8846:1: ( ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTFunctionParser.g:8847:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:8847:1: ( ( rule__DATE_LITERAL__KeywordAssignment_0 ) )
            // InternalSTFunctionParser.g:8848:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8849:2: ( rule__DATE_LITERAL__KeywordAssignment_0 )
            // InternalSTFunctionParser.g:8849:3: rule__DATE_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_LITERAL__Group__1"
    // InternalSTFunctionParser.g:8857:1: rule__DATE_LITERAL__Group__1 : rule__DATE_LITERAL__Group__1__Impl ;
    public final void rule__DATE_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8861:1: ( rule__DATE_LITERAL__Group__1__Impl )
            // InternalSTFunctionParser.g:8862:2: rule__DATE_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_LITERAL__Group__1__Impl"
    // InternalSTFunctionParser.g:8868:1: rule__DATE_LITERAL__Group__1__Impl : ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__DATE_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8872:1: ( ( ( rule__DATE_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8873:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8873:1: ( ( rule__DATE_LITERAL__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8874:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8875:2: ( rule__DATE_LITERAL__ValueAssignment_1 )
            // InternalSTFunctionParser.g:8875:3: rule__DATE_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__0"
    // InternalSTFunctionParser.g:8884:1: rule__TIME_LITERAL__Group__0 : rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 ;
    public final void rule__TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8888:1: ( rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1 )
            // InternalSTFunctionParser.g:8889:2: rule__TIME_LITERAL__Group__0__Impl rule__TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_LITERAL__Group__0__Impl"
    // InternalSTFunctionParser.g:8896:1: rule__TIME_LITERAL__Group__0__Impl : ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8900:1: ( ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTFunctionParser.g:8901:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:8901:1: ( ( rule__TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTFunctionParser.g:8902:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8903:2: ( rule__TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTFunctionParser.g:8903:3: rule__TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_LITERAL__Group__1"
    // InternalSTFunctionParser.g:8911:1: rule__TIME_LITERAL__Group__1 : rule__TIME_LITERAL__Group__1__Impl ;
    public final void rule__TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8915:1: ( rule__TIME_LITERAL__Group__1__Impl )
            // InternalSTFunctionParser.g:8916:2: rule__TIME_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_LITERAL__Group__1__Impl"
    // InternalSTFunctionParser.g:8922:1: rule__TIME_LITERAL__Group__1__Impl : ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8926:1: ( ( ( rule__TIME_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8927:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8927:1: ( ( rule__TIME_LITERAL__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8928:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8929:2: ( rule__TIME_LITERAL__ValueAssignment_1 )
            // InternalSTFunctionParser.g:8929:3: rule__TIME_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0"
    // InternalSTFunctionParser.g:8938:1: rule__TIME_OF_DAY_LITERAL__Group__0 : rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8942:1: ( rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1 )
            // InternalSTFunctionParser.g:8943:2: rule__TIME_OF_DAY_LITERAL__Group__0__Impl rule__TIME_OF_DAY_LITERAL__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__TIME_OF_DAY_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"
    // InternalSTFunctionParser.g:8950:1: rule__TIME_OF_DAY_LITERAL__Group__0__Impl : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8954:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTFunctionParser.g:8955:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:8955:1: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 ) )
            // InternalSTFunctionParser.g:8956:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8957:2: ( rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 )
            // InternalSTFunctionParser.g:8957:3: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1"
    // InternalSTFunctionParser.g:8965:1: rule__TIME_OF_DAY_LITERAL__Group__1 : rule__TIME_OF_DAY_LITERAL__Group__1__Impl ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8969:1: ( rule__TIME_OF_DAY_LITERAL__Group__1__Impl )
            // InternalSTFunctionParser.g:8970:2: rule__TIME_OF_DAY_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"
    // InternalSTFunctionParser.g:8976:1: rule__TIME_OF_DAY_LITERAL__Group__1__Impl : ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8980:1: ( ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8981:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8981:1: ( ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8982:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8983:2: ( rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 )
            // InternalSTFunctionParser.g:8983:3: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0"
    // InternalSTFunctionParser.g:8992:1: rule__DATE_AND_TIME_LITERAL__Group__0 : rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8996:1: ( rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1 )
            // InternalSTFunctionParser.g:8997:2: rule__DATE_AND_TIME_LITERAL__Group__0__Impl rule__DATE_AND_TIME_LITERAL__Group__1
            {
            pushFollow(FOLLOW_69);
            rule__DATE_AND_TIME_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"
    // InternalSTFunctionParser.g:9004:1: rule__DATE_AND_TIME_LITERAL__Group__0__Impl : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9008:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) ) )
            // InternalSTFunctionParser.g:9009:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:9009:1: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 ) )
            // InternalSTFunctionParser.g:9010:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }
            // InternalSTFunctionParser.g:9011:2: ( rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 )
            // InternalSTFunctionParser.g:9011:3: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1"
    // InternalSTFunctionParser.g:9019:1: rule__DATE_AND_TIME_LITERAL__Group__1 : rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9023:1: ( rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2 )
            // InternalSTFunctionParser.g:9024:2: rule__DATE_AND_TIME_LITERAL__Group__1__Impl rule__DATE_AND_TIME_LITERAL__Group__2
            {
            pushFollow(FOLLOW_79);
            rule__DATE_AND_TIME_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"
    // InternalSTFunctionParser.g:9031:1: rule__DATE_AND_TIME_LITERAL__Group__1__Impl : ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9035:1: ( ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:9036:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:9036:1: ( ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 ) )
            // InternalSTFunctionParser.g:9037:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:9038:2: ( rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 )
            // InternalSTFunctionParser.g:9038:3: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2"
    // InternalSTFunctionParser.g:9046:1: rule__DATE_AND_TIME_LITERAL__Group__2 : rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9050:1: ( rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3 )
            // InternalSTFunctionParser.g:9051:2: rule__DATE_AND_TIME_LITERAL__Group__2__Impl rule__DATE_AND_TIME_LITERAL__Group__3
            {
            pushFollow(FOLLOW_69);
            rule__DATE_AND_TIME_LITERAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"
    // InternalSTFunctionParser.g:9058:1: rule__DATE_AND_TIME_LITERAL__Group__2__Impl : ( HyphenMinus ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9062:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:9063:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:9063:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:9064:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getHyphenMinusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__2__Impl"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3"
    // InternalSTFunctionParser.g:9073:1: rule__DATE_AND_TIME_LITERAL__Group__3 : rule__DATE_AND_TIME_LITERAL__Group__3__Impl ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9077:1: ( rule__DATE_AND_TIME_LITERAL__Group__3__Impl )
            // InternalSTFunctionParser.g:9078:2: rule__DATE_AND_TIME_LITERAL__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"
    // InternalSTFunctionParser.g:9084:1: rule__DATE_AND_TIME_LITERAL__Group__3__Impl : ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9088:1: ( ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) ) )
            // InternalSTFunctionParser.g:9089:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:9089:1: ( ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 ) )
            // InternalSTFunctionParser.g:9090:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }
            // InternalSTFunctionParser.g:9091:2: ( rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 )
            // InternalSTFunctionParser.g:9091:3: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__Group__3__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__0"
    // InternalSTFunctionParser.g:9100:1: rule__STRING_LITERAL__Group__0 : rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 ;
    public final void rule__STRING_LITERAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9104:1: ( rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1 )
            // InternalSTFunctionParser.g:9105:2: rule__STRING_LITERAL__Group__0__Impl rule__STRING_LITERAL__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__STRING_LITERAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0"


    // $ANTLR start "rule__STRING_LITERAL__Group__0__Impl"
    // InternalSTFunctionParser.g:9112:1: rule__STRING_LITERAL__Group__0__Impl : ( ( rule__STRING_LITERAL__Alternatives_0 )? ) ;
    public final void rule__STRING_LITERAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9116:1: ( ( ( rule__STRING_LITERAL__Alternatives_0 )? ) )
            // InternalSTFunctionParser.g:9117:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            {
            // InternalSTFunctionParser.g:9117:1: ( ( rule__STRING_LITERAL__Alternatives_0 )? )
            // InternalSTFunctionParser.g:9118:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }
            // InternalSTFunctionParser.g:9119:2: ( rule__STRING_LITERAL__Alternatives_0 )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==WSTRING||LA82_0==STRING||LA82_0==WCHAR||LA82_0==CHAR) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSTFunctionParser.g:9119:3: rule__STRING_LITERAL__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STRING_LITERAL__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__0__Impl"


    // $ANTLR start "rule__STRING_LITERAL__Group__1"
    // InternalSTFunctionParser.g:9127:1: rule__STRING_LITERAL__Group__1 : rule__STRING_LITERAL__Group__1__Impl ;
    public final void rule__STRING_LITERAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9131:1: ( rule__STRING_LITERAL__Group__1__Impl )
            // InternalSTFunctionParser.g:9132:2: rule__STRING_LITERAL__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1"


    // $ANTLR start "rule__STRING_LITERAL__Group__1__Impl"
    // InternalSTFunctionParser.g:9138:1: rule__STRING_LITERAL__Group__1__Impl : ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) ;
    public final void rule__STRING_LITERAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9142:1: ( ( ( rule__STRING_LITERAL__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:9143:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:9143:1: ( ( rule__STRING_LITERAL__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:9144:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:9145:2: ( rule__STRING_LITERAL__ValueAssignment_1 )
            // InternalSTFunctionParser.g:9145:3: rule__STRING_LITERAL__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STRING_LITERAL__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__Group__1__Impl"


    // $ANTLR start "rule__INTEGER__Group__0"
    // InternalSTFunctionParser.g:9154:1: rule__INTEGER__Group__0 : rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 ;
    public final void rule__INTEGER__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9158:1: ( rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1 )
            // InternalSTFunctionParser.g:9159:2: rule__INTEGER__Group__0__Impl rule__INTEGER__Group__1
            {
            pushFollow(FOLLOW_80);
            rule__INTEGER__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0"


    // $ANTLR start "rule__INTEGER__Group__0__Impl"
    // InternalSTFunctionParser.g:9166:1: rule__INTEGER__Group__0__Impl : ( ( rule__INTEGER__Alternatives_0 )? ) ;
    public final void rule__INTEGER__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9170:1: ( ( ( rule__INTEGER__Alternatives_0 )? ) )
            // InternalSTFunctionParser.g:9171:1: ( ( rule__INTEGER__Alternatives_0 )? )
            {
            // InternalSTFunctionParser.g:9171:1: ( ( rule__INTEGER__Alternatives_0 )? )
            // InternalSTFunctionParser.g:9172:2: ( rule__INTEGER__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }
            // InternalSTFunctionParser.g:9173:2: ( rule__INTEGER__Alternatives_0 )?
            int alt83=2;
            int LA83_0 = input.LA(1);

            if ( (LA83_0==PlusSign||LA83_0==HyphenMinus) ) {
                alt83=1;
            }
            switch (alt83) {
                case 1 :
                    // InternalSTFunctionParser.g:9173:3: rule__INTEGER__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__INTEGER__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__0__Impl"


    // $ANTLR start "rule__INTEGER__Group__1"
    // InternalSTFunctionParser.g:9181:1: rule__INTEGER__Group__1 : rule__INTEGER__Group__1__Impl ;
    public final void rule__INTEGER__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9185:1: ( rule__INTEGER__Group__1__Impl )
            // InternalSTFunctionParser.g:9186:2: rule__INTEGER__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__INTEGER__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1"


    // $ANTLR start "rule__INTEGER__Group__1__Impl"
    // InternalSTFunctionParser.g:9192:1: rule__INTEGER__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__INTEGER__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9196:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9197:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9197:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9198:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getINTEGERAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__INTEGER__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__0"
    // InternalSTFunctionParser.g:9208:1: rule__REAL__Group__0 : rule__REAL__Group__0__Impl rule__REAL__Group__1 ;
    public final void rule__REAL__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9212:1: ( rule__REAL__Group__0__Impl rule__REAL__Group__1 )
            // InternalSTFunctionParser.g:9213:2: rule__REAL__Group__0__Impl rule__REAL__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__REAL__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0"


    // $ANTLR start "rule__REAL__Group__0__Impl"
    // InternalSTFunctionParser.g:9220:1: rule__REAL__Group__0__Impl : ( ruleINTEGER ) ;
    public final void rule__REAL__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9224:1: ( ( ruleINTEGER ) )
            // InternalSTFunctionParser.g:9225:1: ( ruleINTEGER )
            {
            // InternalSTFunctionParser.g:9225:1: ( ruleINTEGER )
            // InternalSTFunctionParser.g:9226:2: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getINTEGERParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__0__Impl"


    // $ANTLR start "rule__REAL__Group__1"
    // InternalSTFunctionParser.g:9235:1: rule__REAL__Group__1 : rule__REAL__Group__1__Impl rule__REAL__Group__2 ;
    public final void rule__REAL__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9239:1: ( rule__REAL__Group__1__Impl rule__REAL__Group__2 )
            // InternalSTFunctionParser.g:9240:2: rule__REAL__Group__1__Impl rule__REAL__Group__2
            {
            pushFollow(FOLLOW_82);
            rule__REAL__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1"


    // $ANTLR start "rule__REAL__Group__1__Impl"
    // InternalSTFunctionParser.g:9247:1: rule__REAL__Group__1__Impl : ( FullStop ) ;
    public final void rule__REAL__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9251:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:9252:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:9252:1: ( FullStop )
            // InternalSTFunctionParser.g:9253:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getFullStopKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__1__Impl"


    // $ANTLR start "rule__REAL__Group__2"
    // InternalSTFunctionParser.g:9262:1: rule__REAL__Group__2 : rule__REAL__Group__2__Impl ;
    public final void rule__REAL__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9266:1: ( rule__REAL__Group__2__Impl )
            // InternalSTFunctionParser.g:9267:2: rule__REAL__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2"


    // $ANTLR start "rule__REAL__Group__2__Impl"
    // InternalSTFunctionParser.g:9273:1: rule__REAL__Group__2__Impl : ( ( rule__REAL__Alternatives_2 ) ) ;
    public final void rule__REAL__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9277:1: ( ( ( rule__REAL__Alternatives_2 ) ) )
            // InternalSTFunctionParser.g:9278:1: ( ( rule__REAL__Alternatives_2 ) )
            {
            // InternalSTFunctionParser.g:9278:1: ( ( rule__REAL__Alternatives_2 ) )
            // InternalSTFunctionParser.g:9279:2: ( rule__REAL__Alternatives_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getREALAccess().getAlternatives_2()); 
            }
            // InternalSTFunctionParser.g:9280:2: ( rule__REAL__Alternatives_2 )
            // InternalSTFunctionParser.g:9280:3: rule__REAL__Alternatives_2
            {
            pushFollow(FOLLOW_2);
            rule__REAL__Alternatives_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getREALAccess().getAlternatives_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__REAL__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__0"
    // InternalSTFunctionParser.g:9289:1: rule__DATE__Group__0 : rule__DATE__Group__0__Impl rule__DATE__Group__1 ;
    public final void rule__DATE__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9293:1: ( rule__DATE__Group__0__Impl rule__DATE__Group__1 )
            // InternalSTFunctionParser.g:9294:2: rule__DATE__Group__0__Impl rule__DATE__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__DATE__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0"


    // $ANTLR start "rule__DATE__Group__0__Impl"
    // InternalSTFunctionParser.g:9301:1: rule__DATE__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9305:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9306:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9306:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9307:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__0__Impl"


    // $ANTLR start "rule__DATE__Group__1"
    // InternalSTFunctionParser.g:9316:1: rule__DATE__Group__1 : rule__DATE__Group__1__Impl rule__DATE__Group__2 ;
    public final void rule__DATE__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9320:1: ( rule__DATE__Group__1__Impl rule__DATE__Group__2 )
            // InternalSTFunctionParser.g:9321:2: rule__DATE__Group__1__Impl rule__DATE__Group__2
            {
            pushFollow(FOLLOW_69);
            rule__DATE__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1"


    // $ANTLR start "rule__DATE__Group__1__Impl"
    // InternalSTFunctionParser.g:9328:1: rule__DATE__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9332:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:9333:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:9333:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:9334:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__1__Impl"


    // $ANTLR start "rule__DATE__Group__2"
    // InternalSTFunctionParser.g:9343:1: rule__DATE__Group__2 : rule__DATE__Group__2__Impl rule__DATE__Group__3 ;
    public final void rule__DATE__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9347:1: ( rule__DATE__Group__2__Impl rule__DATE__Group__3 )
            // InternalSTFunctionParser.g:9348:2: rule__DATE__Group__2__Impl rule__DATE__Group__3
            {
            pushFollow(FOLLOW_79);
            rule__DATE__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2"


    // $ANTLR start "rule__DATE__Group__2__Impl"
    // InternalSTFunctionParser.g:9355:1: rule__DATE__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9359:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9360:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9360:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9361:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__2__Impl"


    // $ANTLR start "rule__DATE__Group__3"
    // InternalSTFunctionParser.g:9370:1: rule__DATE__Group__3 : rule__DATE__Group__3__Impl rule__DATE__Group__4 ;
    public final void rule__DATE__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9374:1: ( rule__DATE__Group__3__Impl rule__DATE__Group__4 )
            // InternalSTFunctionParser.g:9375:2: rule__DATE__Group__3__Impl rule__DATE__Group__4
            {
            pushFollow(FOLLOW_69);
            rule__DATE__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3"


    // $ANTLR start "rule__DATE__Group__3__Impl"
    // InternalSTFunctionParser.g:9382:1: rule__DATE__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__DATE__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9386:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:9387:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:9387:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:9388:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__3__Impl"


    // $ANTLR start "rule__DATE__Group__4"
    // InternalSTFunctionParser.g:9397:1: rule__DATE__Group__4 : rule__DATE__Group__4__Impl ;
    public final void rule__DATE__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9401:1: ( rule__DATE__Group__4__Impl )
            // InternalSTFunctionParser.g:9402:2: rule__DATE__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__DATE__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4"


    // $ANTLR start "rule__DATE__Group__4__Impl"
    // InternalSTFunctionParser.g:9408:1: rule__DATE__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__DATE__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9412:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9413:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9413:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9414:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATEAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0"
    // InternalSTFunctionParser.g:9424:1: rule__TIME_OF_DAY__Group__0 : rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 ;
    public final void rule__TIME_OF_DAY__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9428:1: ( rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1 )
            // InternalSTFunctionParser.g:9429:2: rule__TIME_OF_DAY__Group__0__Impl rule__TIME_OF_DAY__Group__1
            {
            pushFollow(FOLLOW_83);
            rule__TIME_OF_DAY__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group__0__Impl"
    // InternalSTFunctionParser.g:9436:1: rule__TIME_OF_DAY__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9440:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9441:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9441:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9442:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1"
    // InternalSTFunctionParser.g:9451:1: rule__TIME_OF_DAY__Group__1 : rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 ;
    public final void rule__TIME_OF_DAY__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9455:1: ( rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2 )
            // InternalSTFunctionParser.g:9456:2: rule__TIME_OF_DAY__Group__1__Impl rule__TIME_OF_DAY__Group__2
            {
            pushFollow(FOLLOW_69);
            rule__TIME_OF_DAY__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group__1__Impl"
    // InternalSTFunctionParser.g:9463:1: rule__TIME_OF_DAY__Group__1__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9467:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:9468:1: ( Colon )
            {
            // InternalSTFunctionParser.g:9468:1: ( Colon )
            // InternalSTFunctionParser.g:9469:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__1__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2"
    // InternalSTFunctionParser.g:9478:1: rule__TIME_OF_DAY__Group__2 : rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 ;
    public final void rule__TIME_OF_DAY__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9482:1: ( rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3 )
            // InternalSTFunctionParser.g:9483:2: rule__TIME_OF_DAY__Group__2__Impl rule__TIME_OF_DAY__Group__3
            {
            pushFollow(FOLLOW_83);
            rule__TIME_OF_DAY__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2"


    // $ANTLR start "rule__TIME_OF_DAY__Group__2__Impl"
    // InternalSTFunctionParser.g:9490:1: rule__TIME_OF_DAY__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9494:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9495:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9495:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9496:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__2__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3"
    // InternalSTFunctionParser.g:9505:1: rule__TIME_OF_DAY__Group__3 : rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 ;
    public final void rule__TIME_OF_DAY__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9509:1: ( rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4 )
            // InternalSTFunctionParser.g:9510:2: rule__TIME_OF_DAY__Group__3__Impl rule__TIME_OF_DAY__Group__4
            {
            pushFollow(FOLLOW_69);
            rule__TIME_OF_DAY__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3"


    // $ANTLR start "rule__TIME_OF_DAY__Group__3__Impl"
    // InternalSTFunctionParser.g:9517:1: rule__TIME_OF_DAY__Group__3__Impl : ( Colon ) ;
    public final void rule__TIME_OF_DAY__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9521:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:9522:1: ( Colon )
            {
            // InternalSTFunctionParser.g:9522:1: ( Colon )
            // InternalSTFunctionParser.g:9523:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__3__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4"
    // InternalSTFunctionParser.g:9532:1: rule__TIME_OF_DAY__Group__4 : rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 ;
    public final void rule__TIME_OF_DAY__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9536:1: ( rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5 )
            // InternalSTFunctionParser.g:9537:2: rule__TIME_OF_DAY__Group__4__Impl rule__TIME_OF_DAY__Group__5
            {
            pushFollow(FOLLOW_81);
            rule__TIME_OF_DAY__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4"


    // $ANTLR start "rule__TIME_OF_DAY__Group__4__Impl"
    // InternalSTFunctionParser.g:9544:1: rule__TIME_OF_DAY__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9548:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9549:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9549:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9550:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__4__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5"
    // InternalSTFunctionParser.g:9559:1: rule__TIME_OF_DAY__Group__5 : rule__TIME_OF_DAY__Group__5__Impl ;
    public final void rule__TIME_OF_DAY__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9563:1: ( rule__TIME_OF_DAY__Group__5__Impl )
            // InternalSTFunctionParser.g:9564:2: rule__TIME_OF_DAY__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5"


    // $ANTLR start "rule__TIME_OF_DAY__Group__5__Impl"
    // InternalSTFunctionParser.g:9570:1: rule__TIME_OF_DAY__Group__5__Impl : ( ( rule__TIME_OF_DAY__Group_5__0 )? ) ;
    public final void rule__TIME_OF_DAY__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9574:1: ( ( ( rule__TIME_OF_DAY__Group_5__0 )? ) )
            // InternalSTFunctionParser.g:9575:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            {
            // InternalSTFunctionParser.g:9575:1: ( ( rule__TIME_OF_DAY__Group_5__0 )? )
            // InternalSTFunctionParser.g:9576:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }
            // InternalSTFunctionParser.g:9577:2: ( rule__TIME_OF_DAY__Group_5__0 )?
            int alt84=2;
            int LA84_0 = input.LA(1);

            if ( (LA84_0==FullStop) ) {
                alt84=1;
            }
            switch (alt84) {
                case 1 :
                    // InternalSTFunctionParser.g:9577:3: rule__TIME_OF_DAY__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TIME_OF_DAY__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group__5__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0"
    // InternalSTFunctionParser.g:9586:1: rule__TIME_OF_DAY__Group_5__0 : rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 ;
    public final void rule__TIME_OF_DAY__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9590:1: ( rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1 )
            // InternalSTFunctionParser.g:9591:2: rule__TIME_OF_DAY__Group_5__0__Impl rule__TIME_OF_DAY__Group_5__1
            {
            pushFollow(FOLLOW_69);
            rule__TIME_OF_DAY__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__0__Impl"
    // InternalSTFunctionParser.g:9598:1: rule__TIME_OF_DAY__Group_5__0__Impl : ( FullStop ) ;
    public final void rule__TIME_OF_DAY__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9602:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:9603:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:9603:1: ( FullStop )
            // InternalSTFunctionParser.g:9604:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__0__Impl"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1"
    // InternalSTFunctionParser.g:9613:1: rule__TIME_OF_DAY__Group_5__1 : rule__TIME_OF_DAY__Group_5__1__Impl ;
    public final void rule__TIME_OF_DAY__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9617:1: ( rule__TIME_OF_DAY__Group_5__1__Impl )
            // InternalSTFunctionParser.g:9618:2: rule__TIME_OF_DAY__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1"


    // $ANTLR start "rule__TIME_OF_DAY__Group_5__1__Impl"
    // InternalSTFunctionParser.g:9624:1: rule__TIME_OF_DAY__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TIME_OF_DAY__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9628:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9629:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9629:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9630:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAYAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY__Group_5__1__Impl"


    // $ANTLR start "rule__STFunction__FunctionsAssignment"
    // InternalSTFunctionParser.g:9640:1: rule__STFunction__FunctionsAssignment : ( ruleFunctionDefinition ) ;
    public final void rule__STFunction__FunctionsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9644:1: ( ( ruleFunctionDefinition ) )
            // InternalSTFunctionParser.g:9645:2: ( ruleFunctionDefinition )
            {
            // InternalSTFunctionParser.g:9645:2: ( ruleFunctionDefinition )
            // InternalSTFunctionParser.g:9646:3: ruleFunctionDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getFunctionsFunctionDefinitionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getFunctionsFunctionDefinitionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__FunctionsAssignment"


    // $ANTLR start "rule__FunctionDefinition__NameAssignment_1"
    // InternalSTFunctionParser.g:9655:1: rule__FunctionDefinition__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FunctionDefinition__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9659:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9660:2: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:9660:2: ( RULE_ID )
            // InternalSTFunctionParser.g:9661:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__NameAssignment_1"


    // $ANTLR start "rule__FunctionDefinition__ReturnTypeAssignment_2_1"
    // InternalSTFunctionParser.g:9670:1: rule__FunctionDefinition__ReturnTypeAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__FunctionDefinition__ReturnTypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9674:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:9675:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:9675:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9676:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeCrossReference_2_1_0()); 
            }
            // InternalSTFunctionParser.g:9677:3: ( RULE_ID )
            // InternalSTFunctionParser.g:9678:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__ReturnTypeAssignment_2_1"


    // $ANTLR start "rule__FunctionDefinition__VarDeclarationsAssignment_3_0"
    // InternalSTFunctionParser.g:9689:1: rule__FunctionDefinition__VarDeclarationsAssignment_3_0 : ( ruleVarDeclaration ) ;
    public final void rule__FunctionDefinition__VarDeclarationsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9693:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:9694:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:9694:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:9695:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarDeclarationsAssignment_3_0"


    // $ANTLR start "rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1"
    // InternalSTFunctionParser.g:9704:1: rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 : ( ruleVarTempDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9708:1: ( ( ruleVarTempDeclarationBlock ) )
            // InternalSTFunctionParser.g:9709:2: ( ruleVarTempDeclarationBlock )
            {
            // InternalSTFunctionParser.g:9709:2: ( ruleVarTempDeclarationBlock )
            // InternalSTFunctionParser.g:9710:3: ruleVarTempDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsVarTempDeclarationBlockParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsVarTempDeclarationBlockParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1"


    // $ANTLR start "rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2"
    // InternalSTFunctionParser.g:9719:1: rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 : ( ruleVarInputDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9723:1: ( ( ruleVarInputDeclarationBlock ) )
            // InternalSTFunctionParser.g:9724:2: ( ruleVarInputDeclarationBlock )
            {
            // InternalSTFunctionParser.g:9724:2: ( ruleVarInputDeclarationBlock )
            // InternalSTFunctionParser.g:9725:3: ruleVarInputDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsVarInputDeclarationBlockParserRuleCall_3_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarInputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsVarInputDeclarationBlockParserRuleCall_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2"


    // $ANTLR start "rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3"
    // InternalSTFunctionParser.g:9734:1: rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 : ( ruleVarOutputDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9738:1: ( ( ruleVarOutputDeclarationBlock ) )
            // InternalSTFunctionParser.g:9739:2: ( ruleVarOutputDeclarationBlock )
            {
            // InternalSTFunctionParser.g:9739:2: ( ruleVarOutputDeclarationBlock )
            // InternalSTFunctionParser.g:9740:3: ruleVarOutputDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsVarOutputDeclarationBlockParserRuleCall_3_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarOutputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsVarOutputDeclarationBlockParserRuleCall_3_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3"


    // $ANTLR start "rule__FunctionDefinition__CodeAssignment_4"
    // InternalSTFunctionParser.g:9749:1: rule__FunctionDefinition__CodeAssignment_4 : ( ruleSTStatement ) ;
    public final void rule__FunctionDefinition__CodeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9753:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9754:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9754:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9755:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getCodeSTStatementParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getCodeSTStatementParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__CodeAssignment_4"


    // $ANTLR start "rule__VarTempDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:9764:1: rule__VarTempDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarTempDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9768:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:9769:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:9769:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:9770:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:9771:3: ( CONSTANT )
            // InternalSTFunctionParser.g:9772:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:9783:1: rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9787:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:9788:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:9788:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:9789:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarInputDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:9798:1: rule__VarInputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarInputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9802:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:9803:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:9803:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:9804:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:9805:3: ( CONSTANT )
            // InternalSTFunctionParser.g:9806:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:9817:1: rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9821:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:9822:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:9822:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:9823:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarOutputDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:9832:1: rule__VarOutputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarOutputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9836:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:9837:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:9837:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:9838:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:9839:3: ( CONSTANT )
            // InternalSTFunctionParser.g:9840:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:9851:1: rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9855:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:9856:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:9856:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:9857:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_0"
    // InternalSTFunctionParser.g:9866:1: rule__VarDeclaration__NameAssignment_0 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9870:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9871:2: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:9871:2: ( RULE_ID )
            // InternalSTFunctionParser.g:9872:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_0"


    // $ANTLR start "rule__VarDeclaration__LocatedAtAssignment_1_1"
    // InternalSTFunctionParser.g:9881:1: rule__VarDeclaration__LocatedAtAssignment_1_1 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__LocatedAtAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9885:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:9886:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:9886:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9887:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }
            // InternalSTFunctionParser.g:9888:3: ( RULE_ID )
            // InternalSTFunctionParser.g:9889:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationIDTerminalRuleCall_1_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtVarDeclarationCrossReference_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__LocatedAtAssignment_1_1"


    // $ANTLR start "rule__VarDeclaration__ArrayAssignment_3_0"
    // InternalSTFunctionParser.g:9900:1: rule__VarDeclaration__ArrayAssignment_3_0 : ( ( ARRAY ) ) ;
    public final void rule__VarDeclaration__ArrayAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9904:1: ( ( ( ARRAY ) ) )
            // InternalSTFunctionParser.g:9905:2: ( ( ARRAY ) )
            {
            // InternalSTFunctionParser.g:9905:2: ( ( ARRAY ) )
            // InternalSTFunctionParser.g:9906:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            // InternalSTFunctionParser.g:9907:3: ( ARRAY )
            // InternalSTFunctionParser.g:9908:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ArrayAssignment_3_0"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_1"
    // InternalSTFunctionParser.g:9919:1: rule__VarDeclaration__RangesAssignment_3_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9923:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9924:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9924:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9925:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_1"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"
    // InternalSTFunctionParser.g:9934:1: rule__VarDeclaration__RangesAssignment_3_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_3_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9938:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9939:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9939:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9940:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_3_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_3_1_0_2_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_1"
    // InternalSTFunctionParser.g:9949:1: rule__VarDeclaration__CountAssignment_3_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9953:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:9954:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:9954:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:9955:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            // InternalSTFunctionParser.g:9956:3: ( Asterisk )
            // InternalSTFunctionParser.g:9957:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_3_1_1_2_1"
    // InternalSTFunctionParser.g:9968:1: rule__VarDeclaration__CountAssignment_3_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_3_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9972:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:9973:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:9973:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:9974:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            // InternalSTFunctionParser.g:9975:3: ( Asterisk )
            // InternalSTFunctionParser.g:9976:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_3_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_3_1_1_2_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_4"
    // InternalSTFunctionParser.g:9987:1: rule__VarDeclaration__TypeAssignment_4 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__TypeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9991:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:9992:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:9992:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9993:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }
            // InternalSTFunctionParser.g:9994:3: ( RULE_ID )
            // InternalSTFunctionParser.g:9995:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_4_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_4"


    // $ANTLR start "rule__VarDeclaration__MaxLengthAssignment_5_1"
    // InternalSTFunctionParser.g:10006:1: rule__VarDeclaration__MaxLengthAssignment_5_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__MaxLengthAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10010:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10011:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10011:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10012:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__MaxLengthAssignment_5_1"


    // $ANTLR start "rule__VarDeclaration__DefaultValueAssignment_6_1"
    // InternalSTFunctionParser.g:10021:1: rule__VarDeclaration__DefaultValueAssignment_6_1 : ( ruleInitializerExpression ) ;
    public final void rule__VarDeclaration__DefaultValueAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10025:1: ( ( ruleInitializerExpression ) )
            // InternalSTFunctionParser.g:10026:2: ( ruleInitializerExpression )
            {
            // InternalSTFunctionParser.g:10026:2: ( ruleInitializerExpression )
            // InternalSTFunctionParser.g:10027:3: ruleInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__DefaultValueAssignment_6_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTFunctionParser.g:10036:1: rule__ArrayInitializerExpression__ValuesAssignment_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10040:1: ( ( ruleArrayInitElement ) )
            // InternalSTFunctionParser.g:10041:2: ( ruleArrayInitElement )
            {
            // InternalSTFunctionParser.g:10041:2: ( ruleArrayInitElement )
            // InternalSTFunctionParser.g:10042:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTFunctionParser.g:10051:1: rule__ArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10055:1: ( ( ruleArrayInitElement ) )
            // InternalSTFunctionParser.g:10056:2: ( ruleArrayInitElement )
            {
            // InternalSTFunctionParser.g:10056:2: ( ruleArrayInitElement )
            // InternalSTFunctionParser.g:10057:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTFunctionParser.g:10066:1: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10070:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10071:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10071:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10072:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__ArrayInitElement__InitExpressionAssignment_1_1"
    // InternalSTFunctionParser.g:10081:1: rule__ArrayInitElement__InitExpressionAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__InitExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10085:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10086:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10086:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10087:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__InitExpressionAssignment_1_1"


    // $ANTLR start "rule__STAssignmentStatement__LhsAssignment_0"
    // InternalSTFunctionParser.g:10096:1: rule__STAssignmentStatement__LhsAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAssignmentStatement__LhsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10100:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10101:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10101:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10102:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:10103:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10104:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLhsVarDeclarationCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LhsAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RhsAssignment_2"
    // InternalSTFunctionParser.g:10115:1: rule__STAssignmentStatement__RhsAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RhsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10119:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10120:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10120:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10121:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRhsSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RhsAssignment_2"


    // $ANTLR start "rule__STIfStatment__ConditionAssignment_1"
    // InternalSTFunctionParser.g:10130:1: rule__STIfStatment__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatment__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10134:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10135:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10135:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10136:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatment__StatementsAssignment_3"
    // InternalSTFunctionParser.g:10145:1: rule__STIfStatment__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatment__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10149:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10150:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10150:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10151:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatment__ElseifsAssignment_4"
    // InternalSTFunctionParser.g:10160:1: rule__STIfStatment__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatment__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10164:1: ( ( ruleSTElseIfPart ) )
            // InternalSTFunctionParser.g:10165:2: ( ruleSTElseIfPart )
            {
            // InternalSTFunctionParser.g:10165:2: ( ruleSTElseIfPart )
            // InternalSTFunctionParser.g:10166:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatment__ElseAssignment_5"
    // InternalSTFunctionParser.g:10175:1: rule__STIfStatment__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatment__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10179:1: ( ( ruleSTElsePart ) )
            // InternalSTFunctionParser.g:10180:2: ( ruleSTElsePart )
            {
            // InternalSTFunctionParser.g:10180:2: ( ruleSTElsePart )
            // InternalSTFunctionParser.g:10181:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTFunctionParser.g:10190:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10194:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10195:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10195:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10196:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTFunctionParser.g:10205:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10209:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10210:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10210:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10211:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTFunctionParser.g:10220:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10224:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10225:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10225:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10226:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTFunctionParser.g:10235:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10239:1: ( ( ruleSTCaseCases ) )
            // InternalSTFunctionParser.g:10240:2: ( ruleSTCaseCases )
            {
            // InternalSTFunctionParser.g:10240:2: ( ruleSTCaseCases )
            // InternalSTFunctionParser.g:10241:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTFunctionParser.g:10250:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10254:1: ( ( ruleSTElsePart ) )
            // InternalSTFunctionParser.g:10255:2: ( ruleSTElsePart )
            {
            // InternalSTFunctionParser.g:10255:2: ( ruleSTElsePart )
            // InternalSTFunctionParser.g:10256:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTFunctionParser.g:10265:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10269:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10270:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10270:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10271:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTFunctionParser.g:10280:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10284:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10285:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10285:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10286:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTFunctionParser.g:10295:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10299:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10300:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10300:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10301:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTFunctionParser.g:10310:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10314:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10315:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10315:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10316:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__ForAssignment_1"
    // InternalSTFunctionParser.g:10325:1: rule__STForStatement__ForAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ForAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10329:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10330:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10330:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10331:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ForAssignment_1"


    // $ANTLR start "rule__STForStatement__ToAssignment_3"
    // InternalSTFunctionParser.g:10340:1: rule__STForStatement__ToAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10344:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10345:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10345:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10346:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_3"


    // $ANTLR start "rule__STForStatement__ByAssignment_4_1"
    // InternalSTFunctionParser.g:10355:1: rule__STForStatement__ByAssignment_4_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10359:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10360:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10360:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10361:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_4_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_6"
    // InternalSTFunctionParser.g:10370:1: rule__STForStatement__StatementsAssignment_6 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10374:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10375:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10375:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10376:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_6"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTFunctionParser.g:10385:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10389:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10390:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10390:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10391:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTFunctionParser.g:10400:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10404:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10405:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10405:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10406:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTFunctionParser.g:10415:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10419:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10420:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10420:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10421:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTFunctionParser.g:10430:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10434:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10435:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10435:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10436:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__UpperBoundAssignment_1_1"
    // InternalSTFunctionParser.g:10445:1: rule__STSubrangeExpression__UpperBoundAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__UpperBoundAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10449:1: ( ( ruleSTOrExpression ) )
            // InternalSTFunctionParser.g:10450:2: ( ruleSTOrExpression )
            {
            // InternalSTFunctionParser.g:10450:2: ( ruleSTOrExpression )
            // InternalSTFunctionParser.g:10451:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getUpperBoundSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getUpperBoundSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__UpperBoundAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10460:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ( OR ) ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10464:1: ( ( ( OR ) ) )
            // InternalSTFunctionParser.g:10465:2: ( ( OR ) )
            {
            // InternalSTFunctionParser.g:10465:2: ( ( OR ) )
            // InternalSTFunctionParser.g:10466:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpORKeyword_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10467:3: ( OR )
            // InternalSTFunctionParser.g:10468:4: OR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpORKeyword_1_0_1_0()); 
            }
            match(input,OR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpORKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpORKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10479:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10483:1: ( ( ruleSTXorExpression ) )
            // InternalSTFunctionParser.g:10484:2: ( ruleSTXorExpression )
            {
            // InternalSTFunctionParser.g:10484:2: ( ruleSTXorExpression )
            // InternalSTFunctionParser.g:10485:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10494:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ( XOR ) ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10498:1: ( ( ( XOR ) ) )
            // InternalSTFunctionParser.g:10499:2: ( ( XOR ) )
            {
            // InternalSTFunctionParser.g:10499:2: ( ( XOR ) )
            // InternalSTFunctionParser.g:10500:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXORKeyword_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10501:3: ( XOR )
            // InternalSTFunctionParser.g:10502:4: XOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXORKeyword_1_0_1_0()); 
            }
            match(input,XOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXORKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXORKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10513:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10517:1: ( ( ruleSTAndExpression ) )
            // InternalSTFunctionParser.g:10518:2: ( ruleSTAndExpression )
            {
            // InternalSTFunctionParser.g:10518:2: ( ruleSTAndExpression )
            // InternalSTFunctionParser.g:10519:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10528:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ( rule__STAndExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10532:1: ( ( ( rule__STAndExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTFunctionParser.g:10533:2: ( ( rule__STAndExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTFunctionParser.g:10533:2: ( ( rule__STAndExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTFunctionParser.g:10534:3: ( rule__STAndExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10535:3: ( rule__STAndExpression__OpAlternatives_1_0_1_0 )
            // InternalSTFunctionParser.g:10535:4: rule__STAndExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10543:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10547:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTFunctionParser.g:10548:2: ( ruleSTEqualityExpression )
            {
            // InternalSTFunctionParser.g:10548:2: ( ruleSTEqualityExpression )
            // InternalSTFunctionParser.g:10549:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10558:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10562:1: ( ( ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTFunctionParser.g:10563:2: ( ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTFunctionParser.g:10563:2: ( ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTFunctionParser.g:10564:3: ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10565:3: ( rule__STEqualityExpression__OpAlternatives_1_0_1_0 )
            // InternalSTFunctionParser.g:10565:4: rule__STEqualityExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10573:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10577:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTFunctionParser.g:10578:2: ( ruleSTComparisonExpression )
            {
            // InternalSTFunctionParser.g:10578:2: ( ruleSTComparisonExpression )
            // InternalSTFunctionParser.g:10579:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10588:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10592:1: ( ( ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTFunctionParser.g:10593:2: ( ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTFunctionParser.g:10593:2: ( ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTFunctionParser.g:10594:3: ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10595:3: ( rule__STComparisonExpression__OpAlternatives_1_0_1_0 )
            // InternalSTFunctionParser.g:10595:4: rule__STComparisonExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10603:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10607:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTFunctionParser.g:10608:2: ( ruleSTAddSubExpression )
            {
            // InternalSTFunctionParser.g:10608:2: ( ruleSTAddSubExpression )
            // InternalSTFunctionParser.g:10609:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10618:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10622:1: ( ( ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTFunctionParser.g:10623:2: ( ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTFunctionParser.g:10623:2: ( ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTFunctionParser.g:10624:3: ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10625:3: ( rule__STAddSubExpression__OpAlternatives_1_0_1_0 )
            // InternalSTFunctionParser.g:10625:4: rule__STAddSubExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10633:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10637:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTFunctionParser.g:10638:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTFunctionParser.g:10638:2: ( ruleSTMulDivModExpression )
            // InternalSTFunctionParser.g:10639:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10648:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 ) ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10652:1: ( ( ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 ) ) )
            // InternalSTFunctionParser.g:10653:2: ( ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 ) )
            {
            // InternalSTFunctionParser.g:10653:2: ( ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 ) )
            // InternalSTFunctionParser.g:10654:3: ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10655:3: ( rule__STMulDivModExpression__OpAlternatives_1_0_1_0 )
            // InternalSTFunctionParser.g:10655:4: rule__STMulDivModExpression__OpAlternatives_1_0_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAlternatives_1_0_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAlternatives_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10663:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10667:1: ( ( ruleSTPowerExpression ) )
            // InternalSTFunctionParser.g:10668:2: ( ruleSTPowerExpression )
            {
            // InternalSTFunctionParser.g:10668:2: ( ruleSTPowerExpression )
            // InternalSTFunctionParser.g:10669:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10678:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( ( AsteriskAsterisk ) ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10682:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTFunctionParser.g:10683:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTFunctionParser.g:10683:2: ( ( AsteriskAsterisk ) )
            // InternalSTFunctionParser.g:10684:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAsteriskAsteriskKeyword_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10685:3: ( AsteriskAsterisk )
            // InternalSTFunctionParser.g:10686:4: AsteriskAsterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAsteriskAsteriskKeyword_1_0_1_0()); 
            }
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAsteriskAsteriskKeyword_1_0_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAsteriskAsteriskKeyword_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10697:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTSignumExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10701:1: ( ( ruleSTSignumExpression ) )
            // InternalSTFunctionParser.g:10702:2: ( ruleSTSignumExpression )
            {
            // InternalSTFunctionParser.g:10702:2: ( ruleSTSignumExpression )
            // InternalSTFunctionParser.g:10703:3: ruleSTSignumExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSignumExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTSignumExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STSignumExpression__SignumAssignment_2_1"
    // InternalSTFunctionParser.g:10712:1: rule__STSignumExpression__SignumAssignment_2_1 : ( ( rule__STSignumExpression__SignumAlternatives_2_1_0 ) ) ;
    public final void rule__STSignumExpression__SignumAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10716:1: ( ( ( rule__STSignumExpression__SignumAlternatives_2_1_0 ) ) )
            // InternalSTFunctionParser.g:10717:2: ( ( rule__STSignumExpression__SignumAlternatives_2_1_0 ) )
            {
            // InternalSTFunctionParser.g:10717:2: ( ( rule__STSignumExpression__SignumAlternatives_2_1_0 ) )
            // InternalSTFunctionParser.g:10718:3: ( rule__STSignumExpression__SignumAlternatives_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getSignumAlternatives_2_1_0()); 
            }
            // InternalSTFunctionParser.g:10719:3: ( rule__STSignumExpression__SignumAlternatives_2_1_0 )
            // InternalSTFunctionParser.g:10719:4: rule__STSignumExpression__SignumAlternatives_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STSignumExpression__SignumAlternatives_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getSignumAlternatives_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__SignumAssignment_2_1"


    // $ANTLR start "rule__STSignumExpression__ExpressionAssignment_2_2"
    // InternalSTFunctionParser.g:10727:1: rule__STSignumExpression__ExpressionAssignment_2_2 : ( ruleSTSelectionExpression ) ;
    public final void rule__STSignumExpression__ExpressionAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10731:1: ( ( ruleSTSelectionExpression ) )
            // InternalSTFunctionParser.g:10732:2: ( ruleSTSelectionExpression )
            {
            // InternalSTFunctionParser.g:10732:2: ( ruleSTSelectionExpression )
            // InternalSTFunctionParser.g:10733:3: ruleSTSelectionExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSelectionExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSignumExpressionAccess().getExpressionSTSelectionExpressionParserRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSignumExpression__ExpressionAssignment_2_2"


    // $ANTLR start "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"
    // InternalSTFunctionParser.g:10742:1: rule__STSelectionExpression__StructAccessAssignment_1_1_0_0 : ( ( FullStop ) ) ;
    public final void rule__STSelectionExpression__StructAccessAssignment_1_1_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10746:1: ( ( ( FullStop ) ) )
            // InternalSTFunctionParser.g:10747:2: ( ( FullStop ) )
            {
            // InternalSTFunctionParser.g:10747:2: ( ( FullStop ) )
            // InternalSTFunctionParser.g:10748:3: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            // InternalSTFunctionParser.g:10749:3: ( FullStop )
            // InternalSTFunctionParser.g:10750:4: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getStructAccessFullStopKeyword_1_1_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__StructAccessAssignment_1_1_0_0"


    // $ANTLR start "rule__STSelectionExpression__MemberAssignment_1_1_0_1"
    // InternalSTFunctionParser.g:10761:1: rule__STSelectionExpression__MemberAssignment_1_1_0_1 : ( ( RULE_ID ) ) ;
    public final void rule__STSelectionExpression__MemberAssignment_1_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10765:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10766:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10766:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10767:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }
            // InternalSTFunctionParser.g:10768:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10769:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationIDTerminalRuleCall_1_1_0_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getMemberVarDeclarationCrossReference_1_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__MemberAssignment_1_1_0_1"


    // $ANTLR start "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"
    // InternalSTFunctionParser.g:10780:1: rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0 : ( ( LeftSquareBracket ) ) ;
    public final void rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10784:1: ( ( ( LeftSquareBracket ) ) )
            // InternalSTFunctionParser.g:10785:2: ( ( LeftSquareBracket ) )
            {
            // InternalSTFunctionParser.g:10785:2: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:10786:3: ( LeftSquareBracket )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            // InternalSTFunctionParser.g:10787:3: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:10788:4: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getArrayAccessLeftSquareBracketKeyword_1_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ArrayAccessAssignment_1_1_1_0"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_1"
    // InternalSTFunctionParser.g:10799:1: rule__STSelectionExpression__IndexAssignment_1_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10803:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10804:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10804:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10805:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"
    // InternalSTFunctionParser.g:10814:1: rule__STSelectionExpression__IndexAssignment_1_1_1_2_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__IndexAssignment_1_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10818:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10819:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10819:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10820:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__IndexAssignment_1_1_1_2_1"


    // $ANTLR start "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"
    // InternalSTFunctionParser.g:10829:1: rule__STSelectionExpression__PoeInvocationAssignment_1_2_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STSelectionExpression__PoeInvocationAssignment_1_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10833:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTFunctionParser.g:10834:2: ( ( LeftParenthesis ) )
            {
            // InternalSTFunctionParser.g:10834:2: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:10835:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            // InternalSTFunctionParser.g:10836:3: ( LeftParenthesis )
            // InternalSTFunctionParser.g:10837:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__PoeInvocationAssignment_1_2_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"
    // InternalSTFunctionParser.g:10848:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_0 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10852:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10853:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10853:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10854:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_0"


    // $ANTLR start "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"
    // InternalSTFunctionParser.g:10863:1: rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10867:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10868:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10868:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10869:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getParametersSTExpressionParserRuleCall_1_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__ParametersAssignment_1_2_1_1_1"


    // $ANTLR start "rule__STSelectionExpression__BitaccessorAssignment_1_3"
    // InternalSTFunctionParser.g:10878:1: rule__STSelectionExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STSelectionExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10882:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTFunctionParser.g:10883:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTFunctionParser.g:10883:2: ( ruleMultibitPartialAccess )
            // InternalSTFunctionParser.g:10884:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSelectionExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSelectionExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"
    // InternalSTFunctionParser.g:10893:1: rule__MultibitPartialAccess__AccessSpecifierAssignment_0 : ( ruleMultiBitAccessSpecifier ) ;
    public final void rule__MultibitPartialAccess__AccessSpecifierAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10897:1: ( ( ruleMultiBitAccessSpecifier ) )
            // InternalSTFunctionParser.g:10898:2: ( ruleMultiBitAccessSpecifier )
            {
            // InternalSTFunctionParser.g:10898:2: ( ruleMultiBitAccessSpecifier )
            // InternalSTFunctionParser.g:10899:3: ruleMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getAccessSpecifierMultiBitAccessSpecifierEnumRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__AccessSpecifierAssignment_0"


    // $ANTLR start "rule__MultibitPartialAccess__IndexAssignment_1"
    // InternalSTFunctionParser.g:10908:1: rule__MultibitPartialAccess__IndexAssignment_1 : ( RULE_INT ) ;
    public final void rule__MultibitPartialAccess__IndexAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10912:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:10913:2: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:10913:2: ( RULE_INT )
            // InternalSTFunctionParser.g:10914:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getMultibitPartialAccessAccess().getIndexINTTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MultibitPartialAccess__IndexAssignment_1"


    // $ANTLR start "rule__STAtomicExpression__TypeAssignment_1_1_0"
    // InternalSTFunctionParser.g:10923:1: rule__STAtomicExpression__TypeAssignment_1_1_0 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__TypeAssignment_1_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10927:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10928:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10928:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10929:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }
            // InternalSTFunctionParser.g:10930:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10931:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeIDTerminalRuleCall_1_1_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getTypeDataTypeCrossReference_1_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__TypeAssignment_1_1_0"


    // $ANTLR start "rule__STAtomicExpression__SymbolAssignment_1_2"
    // InternalSTFunctionParser.g:10942:1: rule__STAtomicExpression__SymbolAssignment_1_2 : ( ( RULE_ID ) ) ;
    public final void rule__STAtomicExpression__SymbolAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10946:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10947:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10947:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10948:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }
            // InternalSTFunctionParser.g:10949:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10950:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationIDTerminalRuleCall_1_2_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getSymbolVarDeclarationCrossReference_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__SymbolAssignment_1_2"


    // $ANTLR start "rule__STAtomicExpression__BitaccessorAssignment_1_3"
    // InternalSTFunctionParser.g:10961:1: rule__STAtomicExpression__BitaccessorAssignment_1_3 : ( ruleMultibitPartialAccess ) ;
    public final void rule__STAtomicExpression__BitaccessorAssignment_1_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10965:1: ( ( ruleMultibitPartialAccess ) )
            // InternalSTFunctionParser.g:10966:2: ( ruleMultibitPartialAccess )
            {
            // InternalSTFunctionParser.g:10966:2: ( ruleMultibitPartialAccess )
            // InternalSTFunctionParser.g:10967:3: ruleMultibitPartialAccess
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMultibitPartialAccess();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getBitaccessorMultibitPartialAccessParserRuleCall_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__BitaccessorAssignment_1_3"


    // $ANTLR start "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"
    // InternalSTFunctionParser.g:10976:1: rule__STAtomicExpression__PoeInvocationAssignment_1_4_0 : ( ( LeftParenthesis ) ) ;
    public final void rule__STAtomicExpression__PoeInvocationAssignment_1_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10980:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTFunctionParser.g:10981:2: ( ( LeftParenthesis ) )
            {
            // InternalSTFunctionParser.g:10981:2: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:10982:3: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            // InternalSTFunctionParser.g:10983:3: ( LeftParenthesis )
            // InternalSTFunctionParser.g:10984:4: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getPoeInvocationLeftParenthesisKeyword_1_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__PoeInvocationAssignment_1_4_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"
    // InternalSTFunctionParser.g:10995:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_0 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10999:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11000:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11000:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11001:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_0"


    // $ANTLR start "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"
    // InternalSTFunctionParser.g:11010:1: rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11014:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11015:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11015:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11016:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAtomicExpressionAccess().getParametersSTExpressionParserRuleCall_1_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAtomicExpression__ParametersAssignment_1_4_1_1_1"


    // $ANTLR start "rule__STLiteralExpressions__BoolLiteralAssignment_0_1"
    // InternalSTFunctionParser.g:11025:1: rule__STLiteralExpressions__BoolLiteralAssignment_0_1 : ( ruleBOOL_LITERAL ) ;
    public final void rule__STLiteralExpressions__BoolLiteralAssignment_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11029:1: ( ( ruleBOOL_LITERAL ) )
            // InternalSTFunctionParser.g:11030:2: ( ruleBOOL_LITERAL )
            {
            // InternalSTFunctionParser.g:11030:2: ( ruleBOOL_LITERAL )
            // InternalSTFunctionParser.g:11031:3: ruleBOOL_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralBOOL_LITERALParserRuleCall_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleBOOL_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getBoolLiteralBOOL_LITERALParserRuleCall_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__BoolLiteralAssignment_0_1"


    // $ANTLR start "rule__STLiteralExpressions__NumericLiteralAssignment_1_1"
    // InternalSTFunctionParser.g:11040:1: rule__STLiteralExpressions__NumericLiteralAssignment_1_1 : ( ruleNUMERIC_LITERAL ) ;
    public final void rule__STLiteralExpressions__NumericLiteralAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11044:1: ( ( ruleNUMERIC_LITERAL ) )
            // InternalSTFunctionParser.g:11045:2: ( ruleNUMERIC_LITERAL )
            {
            // InternalSTFunctionParser.g:11045:2: ( ruleNUMERIC_LITERAL )
            // InternalSTFunctionParser.g:11046:3: ruleNUMERIC_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNUMERIC_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getNumericLiteralNUMERIC_LITERALParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__NumericLiteralAssignment_1_1"


    // $ANTLR start "rule__STLiteralExpressions__DateLiteralAssignment_2_1"
    // InternalSTFunctionParser.g:11055:1: rule__STLiteralExpressions__DateLiteralAssignment_2_1 : ( ruleDATE_LITERAL ) ;
    public final void rule__STLiteralExpressions__DateLiteralAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11059:1: ( ( ruleDATE_LITERAL ) )
            // InternalSTFunctionParser.g:11060:2: ( ruleDATE_LITERAL )
            {
            // InternalSTFunctionParser.g:11060:2: ( ruleDATE_LITERAL )
            // InternalSTFunctionParser.g:11061:3: ruleDATE_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getDateLiteralDATE_LITERALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__DateLiteralAssignment_2_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_3_1"
    // InternalSTFunctionParser.g:11070:1: rule__STLiteralExpressions__TimeLiteralAssignment_3_1 : ( ruleTIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11074:1: ( ( ruleTIME_LITERAL ) )
            // InternalSTFunctionParser.g:11075:2: ( ruleTIME_LITERAL )
            {
            // InternalSTFunctionParser.g:11075:2: ( ruleTIME_LITERAL )
            // InternalSTFunctionParser.g:11076:3: ruleTIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralTIME_LITERALParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_3_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1"
    // InternalSTFunctionParser.g:11085:1: rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1 : ( ruleTIME_OF_DAY_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11089:1: ( ( ruleTIME_OF_DAY_LITERAL ) )
            // InternalSTFunctionParser.g:11090:2: ( ruleTIME_OF_DAY_LITERAL )
            {
            // InternalSTFunctionParser.g:11090:2: ( ruleTIME_OF_DAY_LITERAL )
            // InternalSTFunctionParser.g:11091:3: ruleTIME_OF_DAY_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeOfDayLiteralTIME_OF_DAY_LITERALParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeOfDayLiteralAssignment_4_1"


    // $ANTLR start "rule__STLiteralExpressions__TimeLiteralAssignment_5_1"
    // InternalSTFunctionParser.g:11100:1: rule__STLiteralExpressions__TimeLiteralAssignment_5_1 : ( ruleDATE_AND_TIME_LITERAL ) ;
    public final void rule__STLiteralExpressions__TimeLiteralAssignment_5_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11104:1: ( ( ruleDATE_AND_TIME_LITERAL ) )
            // InternalSTFunctionParser.g:11105:2: ( ruleDATE_AND_TIME_LITERAL )
            {
            // InternalSTFunctionParser.g:11105:2: ( ruleDATE_AND_TIME_LITERAL )
            // InternalSTFunctionParser.g:11106:3: ruleDATE_AND_TIME_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_5_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE_AND_TIME_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getTimeLiteralDATE_AND_TIME_LITERALParserRuleCall_5_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__TimeLiteralAssignment_5_1"


    // $ANTLR start "rule__STLiteralExpressions__StringLiteralAssignment_6_1"
    // InternalSTFunctionParser.g:11115:1: rule__STLiteralExpressions__StringLiteralAssignment_6_1 : ( ruleSTRING_LITERAL ) ;
    public final void rule__STLiteralExpressions__StringLiteralAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11119:1: ( ( ruleSTRING_LITERAL ) )
            // InternalSTFunctionParser.g:11120:2: ( ruleSTRING_LITERAL )
            {
            // InternalSTFunctionParser.g:11120:2: ( ruleSTRING_LITERAL )
            // InternalSTFunctionParser.g:11121:3: ruleSTRING_LITERAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTRING_LITERAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getStringLiteralSTRING_LITERALParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__StringLiteralAssignment_6_1"


    // $ANTLR start "rule__BOOL_LITERAL__NotAssignment_0"
    // InternalSTFunctionParser.g:11130:1: rule__BOOL_LITERAL__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__BOOL_LITERAL__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11134:1: ( ( ( NOT ) ) )
            // InternalSTFunctionParser.g:11135:2: ( ( NOT ) )
            {
            // InternalSTFunctionParser.g:11135:2: ( ( NOT ) )
            // InternalSTFunctionParser.g:11136:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTFunctionParser.g:11137:3: ( NOT )
            // InternalSTFunctionParser.g:11138:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__NotAssignment_0"


    // $ANTLR start "rule__BOOL_LITERAL__KeyWordValueAssignment_2"
    // InternalSTFunctionParser.g:11149:1: rule__BOOL_LITERAL__KeyWordValueAssignment_2 : ( RULE_BOOL_VALUES ) ;
    public final void rule__BOOL_LITERAL__KeyWordValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11153:1: ( ( RULE_BOOL_VALUES ) )
            // InternalSTFunctionParser.g:11154:2: ( RULE_BOOL_VALUES )
            {
            // InternalSTFunctionParser.g:11154:2: ( RULE_BOOL_VALUES )
            // InternalSTFunctionParser.g:11155:3: RULE_BOOL_VALUES
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueBOOL_VALUESTerminalRuleCall_2_0()); 
            }
            match(input,RULE_BOOL_VALUES,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBOOL_LITERALAccess().getKeyWordValueBOOL_VALUESTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BOOL_LITERAL__KeyWordValueAssignment_2"


    // $ANTLR start "rule__NUMERIC_LITERAL__NotAssignment_0"
    // InternalSTFunctionParser.g:11164:1: rule__NUMERIC_LITERAL__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__NUMERIC_LITERAL__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11168:1: ( ( ( NOT ) ) )
            // InternalSTFunctionParser.g:11169:2: ( ( NOT ) )
            {
            // InternalSTFunctionParser.g:11169:2: ( ( NOT ) )
            // InternalSTFunctionParser.g:11170:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTFunctionParser.g:11171:3: ( NOT )
            // InternalSTFunctionParser.g:11172:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__NotAssignment_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__KeywordAssignment_1"
    // InternalSTFunctionParser.g:11183:1: rule__NUMERIC_LITERAL__KeywordAssignment_1 : ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) ) ;
    public final void rule__NUMERIC_LITERAL__KeywordAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11187:1: ( ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) ) )
            // InternalSTFunctionParser.g:11188:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) )
            {
            // InternalSTFunctionParser.g:11188:2: ( ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 ) )
            // InternalSTFunctionParser.g:11189:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_1_0()); 
            }
            // InternalSTFunctionParser.g:11190:3: ( rule__NUMERIC_LITERAL__KeywordAlternatives_1_0 )
            // InternalSTFunctionParser.g:11190:4: rule__NUMERIC_LITERAL__KeywordAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__NUMERIC_LITERAL__KeywordAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getKeywordAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__KeywordAssignment_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__IntValueAssignment_2_0"
    // InternalSTFunctionParser.g:11198:1: rule__NUMERIC_LITERAL__IntValueAssignment_2_0 : ( ruleINTEGER ) ;
    public final void rule__NUMERIC_LITERAL__IntValueAssignment_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11202:1: ( ( ruleINTEGER ) )
            // InternalSTFunctionParser.g:11203:2: ( ruleINTEGER )
            {
            // InternalSTFunctionParser.g:11203:2: ( ruleINTEGER )
            // InternalSTFunctionParser.g:11204:3: ruleINTEGER
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_2_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleINTEGER();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getIntValueINTEGERParserRuleCall_2_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__IntValueAssignment_2_0"


    // $ANTLR start "rule__NUMERIC_LITERAL__RealValueAssignment_2_1"
    // InternalSTFunctionParser.g:11213:1: rule__NUMERIC_LITERAL__RealValueAssignment_2_1 : ( ruleREAL ) ;
    public final void rule__NUMERIC_LITERAL__RealValueAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11217:1: ( ( ruleREAL ) )
            // InternalSTFunctionParser.g:11218:2: ( ruleREAL )
            {
            // InternalSTFunctionParser.g:11218:2: ( ruleREAL )
            // InternalSTFunctionParser.g:11219:3: ruleREAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleREAL();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getRealValueREALParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__RealValueAssignment_2_1"


    // $ANTLR start "rule__NUMERIC_LITERAL__HexValueAssignment_2_2"
    // InternalSTFunctionParser.g:11228:1: rule__NUMERIC_LITERAL__HexValueAssignment_2_2 : ( RULE_NON_DECIMAL ) ;
    public final void rule__NUMERIC_LITERAL__HexValueAssignment_2_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11232:1: ( ( RULE_NON_DECIMAL ) )
            // InternalSTFunctionParser.g:11233:2: ( RULE_NON_DECIMAL )
            {
            // InternalSTFunctionParser.g:11233:2: ( RULE_NON_DECIMAL )
            // InternalSTFunctionParser.g:11234:3: RULE_NON_DECIMAL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_2_2_0()); 
            }
            match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNUMERIC_LITERALAccess().getHexValueNON_DECIMALTerminalRuleCall_2_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__NUMERIC_LITERAL__HexValueAssignment_2_2"


    // $ANTLR start "rule__DATE_LITERAL__KeywordAssignment_0"
    // InternalSTFunctionParser.g:11243:1: rule__DATE_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11247:1: ( ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTFunctionParser.g:11248:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTFunctionParser.g:11248:2: ( ( rule__DATE_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTFunctionParser.g:11249:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTFunctionParser.g:11250:3: ( rule__DATE_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTFunctionParser.g:11250:4: rule__DATE_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_LITERAL__ValueAssignment_1"
    // InternalSTFunctionParser.g:11258:1: rule__DATE_LITERAL__ValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11262:1: ( ( ruleDATE ) )
            // InternalSTFunctionParser.g:11263:2: ( ruleDATE )
            {
            // InternalSTFunctionParser.g:11263:2: ( ruleDATE )
            // InternalSTFunctionParser.g:11264:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_LITERALAccess().getValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_LITERAL__KeywordAssignment_0"
    // InternalSTFunctionParser.g:11273:1: rule__TIME_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11277:1: ( ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTFunctionParser.g:11278:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTFunctionParser.g:11278:2: ( ( rule__TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTFunctionParser.g:11279:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTFunctionParser.g:11280:3: ( rule__TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTFunctionParser.g:11280:4: rule__TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_LITERAL__ValueAssignment_1"
    // InternalSTFunctionParser.g:11288:1: rule__TIME_LITERAL__ValueAssignment_1 : ( RULE_TIME ) ;
    public final void rule__TIME_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11292:1: ( ( RULE_TIME ) )
            // InternalSTFunctionParser.g:11293:2: ( RULE_TIME )
            {
            // InternalSTFunctionParser.g:11293:2: ( RULE_TIME )
            // InternalSTFunctionParser.g:11294:3: RULE_TIME
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }
            match(input,RULE_TIME,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_LITERALAccess().getValueTIMETerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"
    // InternalSTFunctionParser.g:11303:1: rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0 : ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11307:1: ( ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTFunctionParser.g:11308:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTFunctionParser.g:11308:2: ( ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTFunctionParser.g:11309:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTFunctionParser.g:11310:3: ( rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTFunctionParser.g:11310:4: rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__TIME_OF_DAY_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"
    // InternalSTFunctionParser.g:11318:1: rule__TIME_OF_DAY_LITERAL__ValueAssignment_1 : ( ruleTIME_OF_DAY ) ;
    public final void rule__TIME_OF_DAY_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11322:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTFunctionParser.g:11323:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTFunctionParser.g:11323:2: ( ruleTIME_OF_DAY )
            // InternalSTFunctionParser.g:11324:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTIME_OF_DAY_LITERALAccess().getValueTIME_OF_DAYParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TIME_OF_DAY_LITERAL__ValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"
    // InternalSTFunctionParser.g:11333:1: rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0 : ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) ;
    public final void rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11337:1: ( ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) ) )
            // InternalSTFunctionParser.g:11338:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            {
            // InternalSTFunctionParser.g:11338:2: ( ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 ) )
            // InternalSTFunctionParser.g:11339:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }
            // InternalSTFunctionParser.g:11340:3: ( rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0 )
            // InternalSTFunctionParser.g:11340:4: rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__DATE_AND_TIME_LITERAL__KeywordAlternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getKeywordAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__KeywordAssignment_0"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"
    // InternalSTFunctionParser.g:11348:1: rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1 : ( ruleDATE ) ;
    public final void rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11352:1: ( ( ruleDATE ) )
            // InternalSTFunctionParser.g:11353:2: ( ruleDATE )
            {
            // InternalSTFunctionParser.g:11353:2: ( ruleDATE )
            // InternalSTFunctionParser.g:11354:3: ruleDATE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDATE();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getDateValueDATEParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__DateValueAssignment_1"


    // $ANTLR start "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"
    // InternalSTFunctionParser.g:11363:1: rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3 : ( ruleTIME_OF_DAY ) ;
    public final void rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11367:1: ( ( ruleTIME_OF_DAY ) )
            // InternalSTFunctionParser.g:11368:2: ( ruleTIME_OF_DAY )
            {
            // InternalSTFunctionParser.g:11368:2: ( ruleTIME_OF_DAY )
            // InternalSTFunctionParser.g:11369:3: ruleTIME_OF_DAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTIME_OF_DAY();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDATE_AND_TIME_LITERALAccess().getTimeOfDayValueTIME_OF_DAYParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__DATE_AND_TIME_LITERAL__TimeOfDayValueAssignment_3"


    // $ANTLR start "rule__STRING_LITERAL__KeywordAssignment_0_0"
    // InternalSTFunctionParser.g:11378:1: rule__STRING_LITERAL__KeywordAssignment_0_0 : ( ( STRING ) ) ;
    public final void rule__STRING_LITERAL__KeywordAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11382:1: ( ( ( STRING ) ) )
            // InternalSTFunctionParser.g:11383:2: ( ( STRING ) )
            {
            // InternalSTFunctionParser.g:11383:2: ( ( STRING ) )
            // InternalSTFunctionParser.g:11384:3: ( STRING )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            // InternalSTFunctionParser.g:11385:3: ( STRING )
            // InternalSTFunctionParser.g:11386:4: STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }
            match(input,STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getKeywordSTRINGKeyword_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__KeywordAssignment_0_0"


    // $ANTLR start "rule__STRING_LITERAL__ValueAssignment_1"
    // InternalSTFunctionParser.g:11397:1: rule__STRING_LITERAL__ValueAssignment_1 : ( RULE_STRING ) ;
    public final void rule__STRING_LITERAL__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11401:1: ( ( RULE_STRING ) )
            // InternalSTFunctionParser.g:11402:2: ( RULE_STRING )
            {
            // InternalSTFunctionParser.g:11402:2: ( RULE_STRING )
            // InternalSTFunctionParser.g:11403:3: RULE_STRING
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }
            match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRING_LITERALAccess().getValueSTRINGTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRING_LITERAL__ValueAssignment_1"

    // $ANTLR start synpred112_InternalSTFunctionParser
    public final void synpred112_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:7337:3: ( rule__STSelectionExpression__Group_1_2__0 )
        // InternalSTFunctionParser.g:7337:3: rule__STSelectionExpression__Group_1_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STSelectionExpression__Group_1_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred112_InternalSTFunctionParser

    // $ANTLR start synpred119_InternalSTFunctionParser
    public final void synpred119_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:8038:3: ( rule__STAtomicExpression__Group_1_4__0 )
        // InternalSTFunctionParser.g:8038:3: rule__STAtomicExpression__Group_1_4__0
        {
        pushFollow(FOLLOW_2);
        rule__STAtomicExpression__Group_1_4__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred119_InternalSTFunctionParser

    // Delegated rules

    public final boolean synpred119_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred112_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred112_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA68 dfa68 = new DFA68(this);
    protected DFA75 dfa75 = new DFA75(this);
    static final String dfa_1s = "\47\uffff";
    static final String dfa_2s = "\1\2\46\uffff";
    static final String dfa_3s = "\1\10\1\0\45\uffff";
    static final String dfa_4s = "\1\145\1\0\45\uffff";
    static final String dfa_5s = "\2\uffff\1\2\43\uffff\1\1";
    static final String dfa_6s = "\1\uffff\1\0\45\uffff}>";
    static final String[] dfa_7s = {
            "\1\2\55\uffff\1\2\1\uffff\6\2\4\uffff\1\2\2\uffff\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA68 extends DFA {

        public DFA68(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 68;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "7337:2: ( rule__STSelectionExpression__Group_1_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA68_1 = input.LA(1);

                         
                        int index68_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred112_InternalSTFunctionParser()) ) {s = 38;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index68_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 68, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\42\uffff";
    static final String dfa_9s = "\1\2\41\uffff";
    static final String dfa_10s = "\1\10\1\0\40\uffff";
    static final String dfa_11s = "\1\145\1\0\40\uffff";
    static final String dfa_12s = "\2\uffff\1\2\36\uffff\1\1";
    static final String dfa_13s = "\1\uffff\1\0\40\uffff}>";
    static final String[] dfa_14s = {
            "\1\2\55\uffff\1\2\6\uffff\1\2\4\uffff\1\2\2\uffff\3\2\1\uffff\3\2\1\uffff\1\2\1\uffff\1\2\1\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\16\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA75 extends DFA {

        public DFA75(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 75;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "8038:2: ( rule__STAtomicExpression__Group_1_4__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA75_1 = input.LA(1);

                         
                        int index75_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 33;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index75_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 75, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x800A800018012A40L,0x0000100180010000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000010A02L,0x0000100000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x800A800018002002L,0x0000100100010000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000081000L,0x0000100000000000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000000002L,0x0000100000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000010A00L,0x0000100000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000000000L,0x0000000080001000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000200000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000000000000L,0x0000001100000100L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x40B13F7DE7B200B0L,0x000033401488400BL});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000002008000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000000L,0x0000000002000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x40B13F7DE7B200B0L,0x000033501488400BL});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x800A800018002000L,0x0000100100010000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0040000000000000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x800E808018402000L,0x0000100100010000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0004000000004000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x40B13F7DE7B200B2L,0x000033401488400BL});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0000000000000000L,0x0000000088000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x0004000000000000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000000100000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000000000000000L,0x000000000000A000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x800A800018042000L,0x0000100100010000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x800A800018002400L,0x0000100100010000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x800AC00018002000L,0x0000100100010000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000040000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000000040000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000020L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000020L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x2000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x2000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000400L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000002L,0x0000000400000400L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000000A00000A00L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000000A00000A00L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x0000000014000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x0000000014000000L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000042000004L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000042000004L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000100000800000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000000L,0x0000001020000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000002L,0x0000001020000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x1F00000000000000L,0x0000000020800000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x40B13F7DE7B200B0L,0x000033401588400BL});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000400000000L,0x0000004000000008L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x00112D48E5200000L,0x0000030014000008L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000002000800000L,0x0000000000004001L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000100002000000L,0x0000000000080002L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0080020000000080L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x4020000000000030L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x40B13F7DE7B200B0L,0x000023401408400BL});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000040000000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0000020014000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x00000A0000000000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});

}