package org.eclipse.foridac.ide.structuredtextfunctioneditor.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.foridac.ide.structuredtextfunctioneditor.services.STFunctionGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTFunctionParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LDATE_AND_TIME", "DATE_AND_TIME", "END_FUNCTION", "TIME_OF_DAY", "END_REPEAT", "VAR_OUTPUT", "END_WHILE", "VAR_INPUT", "CONSTANT", "CONTINUE", "END_CASE", "FUNCTION", "VAR_TEMP", "WSTRING", "END_FOR", "END_VAR", "STRING", "DWORD", "END_IF", "LDATE", "LREAL", "LTIME", "LWORD", "REPEAT", "RETURN", "UDINT", "ULINT", "USINT", "WCHAR", "ARRAY", "BOOL", "BYTE", "CHAR", "DATE", "DINT", "ELSIF", "FALSE", "LINT", "LTOD", "REAL", "SINT", "TIME", "UINT", "UNTIL", "WHILE", "WORD", "CASE", "ELSE", "EXIT", "INT", "LDT", "THEN", "TOD", "TRUE", "AND", "DT", "FOR", "LD", "LT", "MOD", "NOT", "VAR", "XOR", "B", "D_1", "L", "W", "X", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "D_2", "DO", "IF", "MS", "NS", "OF", "OR", "T", "TO", "US", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "D", "H", "M", "S", "LeftSquareBracket", "RightSquareBracket", "KW__", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_EXT_INT", "RULE_ID", "RULE_STRING", "RULE_WSTRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=26;
    public static final int LessThanSignGreaterThanSign=76;
    public static final int VAR=65;
    public static final int END_IF=22;
    public static final int ULINT=30;
    public static final int END_CASE=14;
    public static final int LessThanSign=101;
    public static final int LeftParenthesis=91;
    public static final int BYTE=35;
    public static final int ELSE=51;
    public static final int IF=82;
    public static final int LINT=41;
    public static final int GreaterThanSign=103;
    public static final int WORD=49;
    public static final int DATE_AND_TIME=5;
    public static final int RULE_ID=115;
    public static final int TOD=56;
    public static final int DINT=38;
    public static final int FUNCTION=15;
    public static final int UDINT=29;
    public static final int CASE=50;
    public static final int GreaterThanSignEqualsSign=77;
    public static final int AT=78;
    public static final int PlusSign=94;
    public static final int RULE_INT=113;
    public static final int END_FOR=18;
    public static final int RULE_ML_COMMENT=118;
    public static final int THEN=55;
    public static final int XOR=66;
    public static final int LeftSquareBracket=108;
    public static final int EXIT=52;
    public static final int TIME_OF_DAY=7;
    public static final int B=67;
    public static final int LDATE_AND_TIME=4;
    public static final int REPEAT=27;
    public static final int D=104;
    public static final int H=105;
    public static final int CHAR=36;
    public static final int L=69;
    public static final int M=106;
    public static final int LTIME=25;
    public static final int Comma=95;
    public static final int HyphenMinus=96;
    public static final int S=107;
    public static final int T=87;
    public static final int W=70;
    public static final int BY=79;
    public static final int X=71;
    public static final int ELSIF=39;
    public static final int END_REPEAT=8;
    public static final int LessThanSignEqualsSign=75;
    public static final int Solidus=98;
    public static final int VAR_INPUT=11;
    public static final int FullStop=97;
    public static final int VAR_TEMP=16;
    public static final int CONSTANT=12;
    public static final int KW__=110;
    public static final int CONTINUE=13;
    public static final int Semicolon=100;
    public static final int LD=61;
    public static final int VAR_OUTPUT=9;
    public static final int STRING=20;
    public static final int RULE_HEX_DIGIT=111;
    public static final int TO=88;
    public static final int UINT=46;
    public static final int LTOD=42;
    public static final int ARRAY=33;
    public static final int LT=62;
    public static final int DO=81;
    public static final int WSTRING=17;
    public static final int DT=59;
    public static final int END_VAR=19;
    public static final int FullStopFullStop=73;
    public static final int Ampersand=90;
    public static final int US=89;
    public static final int RightSquareBracket=109;
    public static final int USINT=31;
    public static final int MS=83;
    public static final int DWORD=21;
    public static final int FOR=60;
    public static final int RightParenthesis=92;
    public static final int TRUE=57;
    public static final int ColonEqualsSign=74;
    public static final int RULE_WSTRING=117;
    public static final int END_FUNCTION=6;
    public static final int END_WHILE=10;
    public static final int DATE=37;
    public static final int NOT=64;
    public static final int LDATE=23;
    public static final int AND=58;
    public static final int REAL=43;
    public static final int AsteriskAsterisk=72;
    public static final int SINT=44;
    public static final int LREAL=24;
    public static final int WCHAR=32;
    public static final int NS=84;
    public static final int RULE_STRING=116;
    public static final int INT=53;
    public static final int RULE_SL_COMMENT=119;
    public static final int RETURN=28;
    public static final int EqualsSign=102;
    public static final int OF=85;
    public static final int Colon=99;
    public static final int EOF=-1;
    public static final int LDT=54;
    public static final int Asterisk=93;
    public static final int MOD=63;
    public static final int OR=86;
    public static final int RULE_WS=120;
    public static final int RULE_EXT_INT=114;
    public static final int TIME=45;
    public static final int RULE_ANY_OTHER=121;
    public static final int UNTIL=47;
    public static final int BOOL=34;
    public static final int D_2=80;
    public static final int D_1=68;
    public static final int FALSE=40;
    public static final int WHILE=48;
    public static final int RULE_NON_DECIMAL=112;

    // delegates
    // delegators


        public InternalSTFunctionParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTFunctionParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTFunctionParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTFunctionParser.g"; }


    	private STFunctionGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("D", "'D'");
    		tokenNameToValue.put("H", "'H'");
    		tokenNameToValue.put("M", "'M'");
    		tokenNameToValue.put("S", "'S'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("KW__", "'_'");
    		tokenNameToValue.put("B", "'%B'");
    		tokenNameToValue.put("D_1", "'%D'");
    		tokenNameToValue.put("L", "'%L'");
    		tokenNameToValue.put("W", "'%W'");
    		tokenNameToValue.put("X", "'%X'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("D_2", "'D#'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("MS", "'MS'");
    		tokenNameToValue.put("NS", "'NS'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("T", "'T#'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("US", "'US'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("DT", "'DT#'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("LD", "'LD#'");
    		tokenNameToValue.put("LT", "'LT#'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("INT", "'INT#'");
    		tokenNameToValue.put("LDT", "'LDT#'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TOD", "'TOD#'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("BOOL", "'BOOL#'");
    		tokenNameToValue.put("BYTE", "'BYTE#'");
    		tokenNameToValue.put("CHAR", "'CHAR#'");
    		tokenNameToValue.put("DATE", "'DATE#'");
    		tokenNameToValue.put("DINT", "'DINT#'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("LINT", "'LINT#'");
    		tokenNameToValue.put("LTOD", "'LTOD#'");
    		tokenNameToValue.put("REAL", "'REAL#'");
    		tokenNameToValue.put("SINT", "'SINT#'");
    		tokenNameToValue.put("TIME", "'TIME#'");
    		tokenNameToValue.put("UINT", "'UINT#'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("WORD", "'WORD#'");
    		tokenNameToValue.put("DWORD", "'DWORD#'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("LDATE", "'LDATE#'");
    		tokenNameToValue.put("LREAL", "'LREAL#'");
    		tokenNameToValue.put("LTIME", "'LTIME#'");
    		tokenNameToValue.put("LWORD", "'LWORD#'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("UDINT", "'UDINT#'");
    		tokenNameToValue.put("ULINT", "'ULINT#'");
    		tokenNameToValue.put("USINT", "'USINT#'");
    		tokenNameToValue.put("WCHAR", "'WCHAR#'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("STRING", "'STRING#'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("FUNCTION", "'FUNCTION'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("WSTRING", "'WSTRING#'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("END_FUNCTION", "'END_FUNCTION'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY#'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME#'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME#'");
    	}

    	public void setGrammarAccess(STFunctionGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleSTFunction"
    // InternalSTFunctionParser.g:163:1: entryRuleSTFunction : ruleSTFunction EOF ;
    public final void entryRuleSTFunction() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:164:1: ( ruleSTFunction EOF )
            // InternalSTFunctionParser.g:165:1: ruleSTFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFunction"


    // $ANTLR start "ruleSTFunction"
    // InternalSTFunctionParser.g:172:1: ruleSTFunction : ( ( rule__STFunction__FunctionsAssignment )* ) ;
    public final void ruleSTFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:176:2: ( ( ( rule__STFunction__FunctionsAssignment )* ) )
            // InternalSTFunctionParser.g:177:2: ( ( rule__STFunction__FunctionsAssignment )* )
            {
            // InternalSTFunctionParser.g:177:2: ( ( rule__STFunction__FunctionsAssignment )* )
            // InternalSTFunctionParser.g:178:3: ( rule__STFunction__FunctionsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getFunctionsAssignment()); 
            }
            // InternalSTFunctionParser.g:179:3: ( rule__STFunction__FunctionsAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==FUNCTION) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSTFunctionParser.g:179:4: rule__STFunction__FunctionsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STFunction__FunctionsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getFunctionsAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFunction"


    // $ANTLR start "entryRuleFunctionDefinition"
    // InternalSTFunctionParser.g:188:1: entryRuleFunctionDefinition : ruleFunctionDefinition EOF ;
    public final void entryRuleFunctionDefinition() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:189:1: ( ruleFunctionDefinition EOF )
            // InternalSTFunctionParser.g:190:1: ruleFunctionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionDefinition"


    // $ANTLR start "ruleFunctionDefinition"
    // InternalSTFunctionParser.g:197:1: ruleFunctionDefinition : ( ( rule__FunctionDefinition__Group__0 ) ) ;
    public final void ruleFunctionDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:201:2: ( ( ( rule__FunctionDefinition__Group__0 ) ) )
            // InternalSTFunctionParser.g:202:2: ( ( rule__FunctionDefinition__Group__0 ) )
            {
            // InternalSTFunctionParser.g:202:2: ( ( rule__FunctionDefinition__Group__0 ) )
            // InternalSTFunctionParser.g:203:3: ( rule__FunctionDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:204:3: ( rule__FunctionDefinition__Group__0 )
            // InternalSTFunctionParser.g:204:4: rule__FunctionDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "entryRuleVarTempDeclarationBlock"
    // InternalSTFunctionParser.g:213:1: entryRuleVarTempDeclarationBlock : ruleVarTempDeclarationBlock EOF ;
    public final void entryRuleVarTempDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:214:1: ( ruleVarTempDeclarationBlock EOF )
            // InternalSTFunctionParser.g:215:1: ruleVarTempDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarTempDeclarationBlock"


    // $ANTLR start "ruleVarTempDeclarationBlock"
    // InternalSTFunctionParser.g:222:1: ruleVarTempDeclarationBlock : ( ( rule__VarTempDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarTempDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:226:2: ( ( ( rule__VarTempDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:227:2: ( ( rule__VarTempDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:227:2: ( ( rule__VarTempDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:228:3: ( rule__VarTempDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:229:3: ( rule__VarTempDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:229:4: rule__VarTempDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarTempDeclarationBlock"


    // $ANTLR start "entryRuleVarInputDeclarationBlock"
    // InternalSTFunctionParser.g:238:1: entryRuleVarInputDeclarationBlock : ruleVarInputDeclarationBlock EOF ;
    public final void entryRuleVarInputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:239:1: ( ruleVarInputDeclarationBlock EOF )
            // InternalSTFunctionParser.g:240:1: ruleVarInputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarInputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarInputDeclarationBlock"


    // $ANTLR start "ruleVarInputDeclarationBlock"
    // InternalSTFunctionParser.g:247:1: ruleVarInputDeclarationBlock : ( ( rule__VarInputDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarInputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:251:2: ( ( ( rule__VarInputDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:252:2: ( ( rule__VarInputDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:252:2: ( ( rule__VarInputDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:253:3: ( rule__VarInputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:254:3: ( rule__VarInputDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:254:4: rule__VarInputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarInputDeclarationBlock"


    // $ANTLR start "entryRuleVarOutputDeclarationBlock"
    // InternalSTFunctionParser.g:263:1: entryRuleVarOutputDeclarationBlock : ruleVarOutputDeclarationBlock EOF ;
    public final void entryRuleVarOutputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:264:1: ( ruleVarOutputDeclarationBlock EOF )
            // InternalSTFunctionParser.g:265:1: ruleVarOutputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarOutputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarOutputDeclarationBlock"


    // $ANTLR start "ruleVarOutputDeclarationBlock"
    // InternalSTFunctionParser.g:272:1: ruleVarOutputDeclarationBlock : ( ( rule__VarOutputDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarOutputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:276:2: ( ( ( rule__VarOutputDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:277:2: ( ( rule__VarOutputDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:277:2: ( ( rule__VarOutputDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:278:3: ( rule__VarOutputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:279:3: ( rule__VarOutputDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:279:4: rule__VarOutputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarOutputDeclarationBlock"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSTFunctionParser.g:288:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:289:1: ( ruleVarDeclaration EOF )
            // InternalSTFunctionParser.g:290:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSTFunctionParser.g:297:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:301:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSTFunctionParser.g:302:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSTFunctionParser.g:302:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSTFunctionParser.g:303:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:304:3: ( rule__VarDeclaration__Group__0 )
            // InternalSTFunctionParser.g:304:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleInitializerExpression"
    // InternalSTFunctionParser.g:313:1: entryRuleInitializerExpression : ruleInitializerExpression EOF ;
    public final void entryRuleInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:314:1: ( ruleInitializerExpression EOF )
            // InternalSTFunctionParser.g:315:1: ruleInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializerExpression"


    // $ANTLR start "ruleInitializerExpression"
    // InternalSTFunctionParser.g:322:1: ruleInitializerExpression : ( ( rule__InitializerExpression__Alternatives ) ) ;
    public final void ruleInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:326:2: ( ( ( rule__InitializerExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:327:2: ( ( rule__InitializerExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:327:2: ( ( rule__InitializerExpression__Alternatives ) )
            // InternalSTFunctionParser.g:328:3: ( rule__InitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:329:3: ( rule__InitializerExpression__Alternatives )
            // InternalSTFunctionParser.g:329:4: rule__InitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializerExpression"


    // $ANTLR start "entryRuleArrayInitializerExpression"
    // InternalSTFunctionParser.g:338:1: entryRuleArrayInitializerExpression : ruleArrayInitializerExpression EOF ;
    public final void entryRuleArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:339:1: ( ruleArrayInitializerExpression EOF )
            // InternalSTFunctionParser.g:340:1: ruleArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitializerExpression"


    // $ANTLR start "ruleArrayInitializerExpression"
    // InternalSTFunctionParser.g:347:1: ruleArrayInitializerExpression : ( ( rule__ArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:351:2: ( ( ( rule__ArrayInitializerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:352:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:352:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:353:3: ( rule__ArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:354:3: ( rule__ArrayInitializerExpression__Group__0 )
            // InternalSTFunctionParser.g:354:4: rule__ArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitializerExpression"


    // $ANTLR start "entryRuleArrayInitElement"
    // InternalSTFunctionParser.g:363:1: entryRuleArrayInitElement : ruleArrayInitElement EOF ;
    public final void entryRuleArrayInitElement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:364:1: ( ruleArrayInitElement EOF )
            // InternalSTFunctionParser.g:365:1: ruleArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitElement"


    // $ANTLR start "ruleArrayInitElement"
    // InternalSTFunctionParser.g:372:1: ruleArrayInitElement : ( ( rule__ArrayInitElement__Group__0 ) ) ;
    public final void ruleArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:376:2: ( ( ( rule__ArrayInitElement__Group__0 ) ) )
            // InternalSTFunctionParser.g:377:2: ( ( rule__ArrayInitElement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:377:2: ( ( rule__ArrayInitElement__Group__0 ) )
            // InternalSTFunctionParser.g:378:3: ( rule__ArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:379:3: ( rule__ArrayInitElement__Group__0 )
            // InternalSTFunctionParser.g:379:4: rule__ArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTFunctionParser.g:388:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:389:1: ( ruleSTStatement EOF )
            // InternalSTFunctionParser.g:390:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTFunctionParser.g:397:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:401:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTFunctionParser.g:402:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTFunctionParser.g:402:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTFunctionParser.g:403:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:404:3: ( rule__STStatement__Alternatives )
            // InternalSTFunctionParser.g:404:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTFunctionParser.g:413:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:414:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTFunctionParser.g:415:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTFunctionParser.g:422:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:426:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:427:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:427:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTFunctionParser.g:428:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:429:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTFunctionParser.g:429:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTIfStatment"
    // InternalSTFunctionParser.g:438:1: entryRuleSTIfStatment : ruleSTIfStatment EOF ;
    public final void entryRuleSTIfStatment() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:439:1: ( ruleSTIfStatment EOF )
            // InternalSTFunctionParser.g:440:1: ruleSTIfStatment EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatment();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatment"


    // $ANTLR start "ruleSTIfStatment"
    // InternalSTFunctionParser.g:447:1: ruleSTIfStatment : ( ( rule__STIfStatment__Group__0 ) ) ;
    public final void ruleSTIfStatment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:451:2: ( ( ( rule__STIfStatment__Group__0 ) ) )
            // InternalSTFunctionParser.g:452:2: ( ( rule__STIfStatment__Group__0 ) )
            {
            // InternalSTFunctionParser.g:452:2: ( ( rule__STIfStatment__Group__0 ) )
            // InternalSTFunctionParser.g:453:3: ( rule__STIfStatment__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:454:3: ( rule__STIfStatment__Group__0 )
            // InternalSTFunctionParser.g:454:4: rule__STIfStatment__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatment"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTFunctionParser.g:463:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:464:1: ( ruleSTElseIfPart EOF )
            // InternalSTFunctionParser.g:465:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTFunctionParser.g:472:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:476:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTFunctionParser.g:477:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTFunctionParser.g:477:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTFunctionParser.g:478:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:479:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTFunctionParser.g:479:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTFunctionParser.g:488:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:489:1: ( ruleSTCaseStatement EOF )
            // InternalSTFunctionParser.g:490:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTFunctionParser.g:497:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:501:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:502:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:502:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTFunctionParser.g:503:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:504:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTFunctionParser.g:504:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTFunctionParser.g:513:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:514:1: ( ruleSTCaseCases EOF )
            // InternalSTFunctionParser.g:515:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTFunctionParser.g:522:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:526:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTFunctionParser.g:527:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTFunctionParser.g:527:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTFunctionParser.g:528:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:529:3: ( rule__STCaseCases__Group__0 )
            // InternalSTFunctionParser.g:529:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTFunctionParser.g:538:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:539:1: ( ruleSTElsePart EOF )
            // InternalSTFunctionParser.g:540:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTFunctionParser.g:547:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:551:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTFunctionParser.g:552:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTFunctionParser.g:552:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTFunctionParser.g:553:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:554:3: ( rule__STElsePart__Group__0 )
            // InternalSTFunctionParser.g:554:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTFunctionParser.g:563:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:564:1: ( ruleSTForStatement EOF )
            // InternalSTFunctionParser.g:565:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTFunctionParser.g:572:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:576:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:577:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:577:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTFunctionParser.g:578:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:579:3: ( rule__STForStatement__Group__0 )
            // InternalSTFunctionParser.g:579:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTFunctionParser.g:588:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:589:1: ( ruleSTWhileStatement EOF )
            // InternalSTFunctionParser.g:590:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTFunctionParser.g:597:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:601:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:602:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:602:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTFunctionParser.g:603:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:604:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTFunctionParser.g:604:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTFunctionParser.g:613:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:614:1: ( ruleSTRepeatStatement EOF )
            // InternalSTFunctionParser.g:615:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTFunctionParser.g:622:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:626:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:627:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:627:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTFunctionParser.g:628:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:629:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTFunctionParser.g:629:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTFunctionParser.g:638:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:639:1: ( ruleSTExpression EOF )
            // InternalSTFunctionParser.g:640:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTFunctionParser.g:647:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:651:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTFunctionParser.g:652:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTFunctionParser.g:652:2: ( ruleSTSubrangeExpression )
            // InternalSTFunctionParser.g:653:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTFunctionParser.g:663:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:664:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTFunctionParser.g:665:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTFunctionParser.g:672:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:676:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:677:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:677:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTFunctionParser.g:678:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:679:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTFunctionParser.g:679:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTFunctionParser.g:688:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:689:1: ( ruleSTOrExpression EOF )
            // InternalSTFunctionParser.g:690:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTFunctionParser.g:697:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:701:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:702:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:702:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTFunctionParser.g:703:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:704:3: ( rule__STOrExpression__Group__0 )
            // InternalSTFunctionParser.g:704:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTFunctionParser.g:713:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:714:1: ( ruleSTXorExpression EOF )
            // InternalSTFunctionParser.g:715:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTFunctionParser.g:722:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:726:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:727:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:727:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTFunctionParser.g:728:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:729:3: ( rule__STXorExpression__Group__0 )
            // InternalSTFunctionParser.g:729:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTFunctionParser.g:738:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:739:1: ( ruleSTAndExpression EOF )
            // InternalSTFunctionParser.g:740:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTFunctionParser.g:747:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:751:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:752:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:752:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTFunctionParser.g:753:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:754:3: ( rule__STAndExpression__Group__0 )
            // InternalSTFunctionParser.g:754:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTFunctionParser.g:763:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:764:1: ( ruleSTEqualityExpression EOF )
            // InternalSTFunctionParser.g:765:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTFunctionParser.g:772:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:776:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:777:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:777:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTFunctionParser.g:778:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:779:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTFunctionParser.g:779:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTFunctionParser.g:788:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:789:1: ( ruleSTComparisonExpression EOF )
            // InternalSTFunctionParser.g:790:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTFunctionParser.g:797:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:801:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:802:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:802:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTFunctionParser.g:803:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:804:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTFunctionParser.g:804:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTFunctionParser.g:813:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:814:1: ( ruleSTAddSubExpression EOF )
            // InternalSTFunctionParser.g:815:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTFunctionParser.g:822:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:826:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:827:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:827:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTFunctionParser.g:828:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:829:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTFunctionParser.g:829:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTFunctionParser.g:838:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:839:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTFunctionParser.g:840:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTFunctionParser.g:847:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:851:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:852:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:852:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTFunctionParser.g:853:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:854:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTFunctionParser.g:854:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTFunctionParser.g:863:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:864:1: ( ruleSTPowerExpression EOF )
            // InternalSTFunctionParser.g:865:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTFunctionParser.g:872:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:876:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:877:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:877:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:878:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:879:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTFunctionParser.g:879:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTUnaryExpression"
    // InternalSTFunctionParser.g:888:1: entryRuleSTUnaryExpression : ruleSTUnaryExpression EOF ;
    public final void entryRuleSTUnaryExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:889:1: ( ruleSTUnaryExpression EOF )
            // InternalSTFunctionParser.g:890:1: ruleSTUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTUnaryExpression"


    // $ANTLR start "ruleSTUnaryExpression"
    // InternalSTFunctionParser.g:897:1: ruleSTUnaryExpression : ( ( rule__STUnaryExpression__Alternatives ) ) ;
    public final void ruleSTUnaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:901:2: ( ( ( rule__STUnaryExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:902:2: ( ( rule__STUnaryExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:902:2: ( ( rule__STUnaryExpression__Alternatives ) )
            // InternalSTFunctionParser.g:903:3: ( rule__STUnaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:904:3: ( rule__STUnaryExpression__Alternatives )
            // InternalSTFunctionParser.g:904:4: rule__STUnaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTUnaryExpression"


    // $ANTLR start "entryRuleSTAccessExpression"
    // InternalSTFunctionParser.g:913:1: entryRuleSTAccessExpression : ruleSTAccessExpression EOF ;
    public final void entryRuleSTAccessExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:914:1: ( ruleSTAccessExpression EOF )
            // InternalSTFunctionParser.g:915:1: ruleSTAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAccessExpression"


    // $ANTLR start "ruleSTAccessExpression"
    // InternalSTFunctionParser.g:922:1: ruleSTAccessExpression : ( ( rule__STAccessExpression__Group__0 ) ) ;
    public final void ruleSTAccessExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:926:2: ( ( ( rule__STAccessExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:927:2: ( ( rule__STAccessExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:927:2: ( ( rule__STAccessExpression__Group__0 ) )
            // InternalSTFunctionParser.g:928:3: ( rule__STAccessExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:929:3: ( rule__STAccessExpression__Group__0 )
            // InternalSTFunctionParser.g:929:4: rule__STAccessExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAccessExpression"


    // $ANTLR start "entryRuleSTPrimaryExpression"
    // InternalSTFunctionParser.g:938:1: entryRuleSTPrimaryExpression : ruleSTPrimaryExpression EOF ;
    public final void entryRuleSTPrimaryExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:939:1: ( ruleSTPrimaryExpression EOF )
            // InternalSTFunctionParser.g:940:1: ruleSTPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPrimaryExpression"


    // $ANTLR start "ruleSTPrimaryExpression"
    // InternalSTFunctionParser.g:947:1: ruleSTPrimaryExpression : ( ( rule__STPrimaryExpression__Alternatives ) ) ;
    public final void ruleSTPrimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:951:2: ( ( ( rule__STPrimaryExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:952:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:952:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            // InternalSTFunctionParser.g:953:3: ( rule__STPrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:954:3: ( rule__STPrimaryExpression__Alternatives )
            // InternalSTFunctionParser.g:954:4: rule__STPrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPrimaryExpression"


    // $ANTLR start "entryRuleSTFeatureExpression"
    // InternalSTFunctionParser.g:963:1: entryRuleSTFeatureExpression : ruleSTFeatureExpression EOF ;
    public final void entryRuleSTFeatureExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:964:1: ( ruleSTFeatureExpression EOF )
            // InternalSTFunctionParser.g:965:1: ruleSTFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureExpression"


    // $ANTLR start "ruleSTFeatureExpression"
    // InternalSTFunctionParser.g:972:1: ruleSTFeatureExpression : ( ( rule__STFeatureExpression__Group__0 ) ) ;
    public final void ruleSTFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:976:2: ( ( ( rule__STFeatureExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:977:2: ( ( rule__STFeatureExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:977:2: ( ( rule__STFeatureExpression__Group__0 ) )
            // InternalSTFunctionParser.g:978:3: ( rule__STFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:979:3: ( rule__STFeatureExpression__Group__0 )
            // InternalSTFunctionParser.g:979:4: rule__STFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureExpression"


    // $ANTLR start "entryRuleSTMultibitPartialExpression"
    // InternalSTFunctionParser.g:988:1: entryRuleSTMultibitPartialExpression : ruleSTMultibitPartialExpression EOF ;
    public final void entryRuleSTMultibitPartialExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:989:1: ( ruleSTMultibitPartialExpression EOF )
            // InternalSTFunctionParser.g:990:1: ruleSTMultibitPartialExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMultibitPartialExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMultibitPartialExpression"


    // $ANTLR start "ruleSTMultibitPartialExpression"
    // InternalSTFunctionParser.g:997:1: ruleSTMultibitPartialExpression : ( ( rule__STMultibitPartialExpression__Group__0 ) ) ;
    public final void ruleSTMultibitPartialExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1001:2: ( ( ( rule__STMultibitPartialExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1002:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1002:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1003:3: ( rule__STMultibitPartialExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1004:3: ( rule__STMultibitPartialExpression__Group__0 )
            // InternalSTFunctionParser.g:1004:4: rule__STMultibitPartialExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultibitPartialExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTFunctionParser.g:1013:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1014:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTFunctionParser.g:1015:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTFunctionParser.g:1022:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1026:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTFunctionParser.g:1027:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1027:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTFunctionParser.g:1028:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1029:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTFunctionParser.g:1029:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleSTNumericLiteralType"
    // InternalSTFunctionParser.g:1038:1: entryRuleSTNumericLiteralType : ruleSTNumericLiteralType EOF ;
    public final void entryRuleSTNumericLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1039:1: ( ruleSTNumericLiteralType EOF )
            // InternalSTFunctionParser.g:1040:1: ruleSTNumericLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteralType"


    // $ANTLR start "ruleSTNumericLiteralType"
    // InternalSTFunctionParser.g:1047:1: ruleSTNumericLiteralType : ( ( rule__STNumericLiteralType__Alternatives ) ) ;
    public final void ruleSTNumericLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1051:2: ( ( ( rule__STNumericLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1052:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1052:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1053:3: ( rule__STNumericLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1054:3: ( rule__STNumericLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1054:4: rule__STNumericLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteralType"


    // $ANTLR start "entryRuleSTNumericLiteral"
    // InternalSTFunctionParser.g:1063:1: entryRuleSTNumericLiteral : ruleSTNumericLiteral EOF ;
    public final void entryRuleSTNumericLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1064:1: ( ruleSTNumericLiteral EOF )
            // InternalSTFunctionParser.g:1065:1: ruleSTNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteral"


    // $ANTLR start "ruleSTNumericLiteral"
    // InternalSTFunctionParser.g:1072:1: ruleSTNumericLiteral : ( ( rule__STNumericLiteral__Group__0 ) ) ;
    public final void ruleSTNumericLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1076:2: ( ( ( rule__STNumericLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1077:2: ( ( rule__STNumericLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1077:2: ( ( rule__STNumericLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1078:3: ( rule__STNumericLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1079:3: ( rule__STNumericLiteral__Group__0 )
            // InternalSTFunctionParser.g:1079:4: rule__STNumericLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteral"


    // $ANTLR start "entryRuleSTDateLiteralType"
    // InternalSTFunctionParser.g:1088:1: entryRuleSTDateLiteralType : ruleSTDateLiteralType EOF ;
    public final void entryRuleSTDateLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1089:1: ( ruleSTDateLiteralType EOF )
            // InternalSTFunctionParser.g:1090:1: ruleSTDateLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteralType"


    // $ANTLR start "ruleSTDateLiteralType"
    // InternalSTFunctionParser.g:1097:1: ruleSTDateLiteralType : ( ( rule__STDateLiteralType__Alternatives ) ) ;
    public final void ruleSTDateLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1101:2: ( ( ( rule__STDateLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1102:2: ( ( rule__STDateLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1102:2: ( ( rule__STDateLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1103:3: ( rule__STDateLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1104:3: ( rule__STDateLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1104:4: rule__STDateLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteralType"


    // $ANTLR start "entryRuleSTDateLiteral"
    // InternalSTFunctionParser.g:1113:1: entryRuleSTDateLiteral : ruleSTDateLiteral EOF ;
    public final void entryRuleSTDateLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1114:1: ( ruleSTDateLiteral EOF )
            // InternalSTFunctionParser.g:1115:1: ruleSTDateLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteral"


    // $ANTLR start "ruleSTDateLiteral"
    // InternalSTFunctionParser.g:1122:1: ruleSTDateLiteral : ( ( rule__STDateLiteral__Group__0 ) ) ;
    public final void ruleSTDateLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1126:2: ( ( ( rule__STDateLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1127:2: ( ( rule__STDateLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1127:2: ( ( rule__STDateLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1128:3: ( rule__STDateLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1129:3: ( rule__STDateLiteral__Group__0 )
            // InternalSTFunctionParser.g:1129:4: rule__STDateLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteral"


    // $ANTLR start "entryRuleSTTimeLiteralType"
    // InternalSTFunctionParser.g:1138:1: entryRuleSTTimeLiteralType : ruleSTTimeLiteralType EOF ;
    public final void entryRuleSTTimeLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1139:1: ( ruleSTTimeLiteralType EOF )
            // InternalSTFunctionParser.g:1140:1: ruleSTTimeLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteralType"


    // $ANTLR start "ruleSTTimeLiteralType"
    // InternalSTFunctionParser.g:1147:1: ruleSTTimeLiteralType : ( ( rule__STTimeLiteralType__Alternatives ) ) ;
    public final void ruleSTTimeLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1151:2: ( ( ( rule__STTimeLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1152:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1152:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1153:3: ( rule__STTimeLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1154:3: ( rule__STTimeLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1154:4: rule__STTimeLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteralType"


    // $ANTLR start "entryRuleSTTimeLiteral"
    // InternalSTFunctionParser.g:1163:1: entryRuleSTTimeLiteral : ruleSTTimeLiteral EOF ;
    public final void entryRuleSTTimeLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1164:1: ( ruleSTTimeLiteral EOF )
            // InternalSTFunctionParser.g:1165:1: ruleSTTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteral"


    // $ANTLR start "ruleSTTimeLiteral"
    // InternalSTFunctionParser.g:1172:1: ruleSTTimeLiteral : ( ( rule__STTimeLiteral__Group__0 ) ) ;
    public final void ruleSTTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1176:2: ( ( ( rule__STTimeLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1177:2: ( ( rule__STTimeLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1177:2: ( ( rule__STTimeLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1178:3: ( rule__STTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1179:3: ( rule__STTimeLiteral__Group__0 )
            // InternalSTFunctionParser.g:1179:4: rule__STTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteral"


    // $ANTLR start "entryRuleSTTimeOfDayLiteralType"
    // InternalSTFunctionParser.g:1188:1: entryRuleSTTimeOfDayLiteralType : ruleSTTimeOfDayLiteralType EOF ;
    public final void entryRuleSTTimeOfDayLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1189:1: ( ruleSTTimeOfDayLiteralType EOF )
            // InternalSTFunctionParser.g:1190:1: ruleSTTimeOfDayLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayLiteralType"


    // $ANTLR start "ruleSTTimeOfDayLiteralType"
    // InternalSTFunctionParser.g:1197:1: ruleSTTimeOfDayLiteralType : ( ( rule__STTimeOfDayLiteralType__Alternatives ) ) ;
    public final void ruleSTTimeOfDayLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1201:2: ( ( ( rule__STTimeOfDayLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1202:2: ( ( rule__STTimeOfDayLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1202:2: ( ( rule__STTimeOfDayLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1203:3: ( rule__STTimeOfDayLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1204:3: ( rule__STTimeOfDayLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1204:4: rule__STTimeOfDayLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayLiteralType"


    // $ANTLR start "entryRuleSTTimeOfDayLiteral"
    // InternalSTFunctionParser.g:1213:1: entryRuleSTTimeOfDayLiteral : ruleSTTimeOfDayLiteral EOF ;
    public final void entryRuleSTTimeOfDayLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1214:1: ( ruleSTTimeOfDayLiteral EOF )
            // InternalSTFunctionParser.g:1215:1: ruleSTTimeOfDayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayLiteral"


    // $ANTLR start "ruleSTTimeOfDayLiteral"
    // InternalSTFunctionParser.g:1222:1: ruleSTTimeOfDayLiteral : ( ( rule__STTimeOfDayLiteral__Group__0 ) ) ;
    public final void ruleSTTimeOfDayLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1226:2: ( ( ( rule__STTimeOfDayLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1227:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1227:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1228:3: ( rule__STTimeOfDayLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1229:3: ( rule__STTimeOfDayLiteral__Group__0 )
            // InternalSTFunctionParser.g:1229:4: rule__STTimeOfDayLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayLiteral"


    // $ANTLR start "entryRuleSTDateAndTimeLiteralType"
    // InternalSTFunctionParser.g:1238:1: entryRuleSTDateAndTimeLiteralType : ruleSTDateAndTimeLiteralType EOF ;
    public final void entryRuleSTDateAndTimeLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1239:1: ( ruleSTDateAndTimeLiteralType EOF )
            // InternalSTFunctionParser.g:1240:1: ruleSTDateAndTimeLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeLiteralType"


    // $ANTLR start "ruleSTDateAndTimeLiteralType"
    // InternalSTFunctionParser.g:1247:1: ruleSTDateAndTimeLiteralType : ( ( rule__STDateAndTimeLiteralType__Alternatives ) ) ;
    public final void ruleSTDateAndTimeLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1251:2: ( ( ( rule__STDateAndTimeLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1252:2: ( ( rule__STDateAndTimeLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1252:2: ( ( rule__STDateAndTimeLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1253:3: ( rule__STDateAndTimeLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1254:3: ( rule__STDateAndTimeLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1254:4: rule__STDateAndTimeLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeLiteralType"


    // $ANTLR start "entryRuleSTDateAndTimeLiteral"
    // InternalSTFunctionParser.g:1263:1: entryRuleSTDateAndTimeLiteral : ruleSTDateAndTimeLiteral EOF ;
    public final void entryRuleSTDateAndTimeLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1264:1: ( ruleSTDateAndTimeLiteral EOF )
            // InternalSTFunctionParser.g:1265:1: ruleSTDateAndTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeLiteral"


    // $ANTLR start "ruleSTDateAndTimeLiteral"
    // InternalSTFunctionParser.g:1272:1: ruleSTDateAndTimeLiteral : ( ( rule__STDateAndTimeLiteral__Group__0 ) ) ;
    public final void ruleSTDateAndTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1276:2: ( ( ( rule__STDateAndTimeLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1277:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1277:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1278:3: ( rule__STDateAndTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1279:3: ( rule__STDateAndTimeLiteral__Group__0 )
            // InternalSTFunctionParser.g:1279:4: rule__STDateAndTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeLiteral"


    // $ANTLR start "entryRuleSTStringLiteralType"
    // InternalSTFunctionParser.g:1288:1: entryRuleSTStringLiteralType : ruleSTStringLiteralType EOF ;
    public final void entryRuleSTStringLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1289:1: ( ruleSTStringLiteralType EOF )
            // InternalSTFunctionParser.g:1290:1: ruleSTStringLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStringLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStringLiteralType"


    // $ANTLR start "ruleSTStringLiteralType"
    // InternalSTFunctionParser.g:1297:1: ruleSTStringLiteralType : ( ( rule__STStringLiteralType__Alternatives ) ) ;
    public final void ruleSTStringLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1301:2: ( ( ( rule__STStringLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1302:2: ( ( rule__STStringLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1302:2: ( ( rule__STStringLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1303:3: ( rule__STStringLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1304:3: ( rule__STStringLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1304:4: rule__STStringLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStringLiteralType"


    // $ANTLR start "entryRuleSTStringLiteral"
    // InternalSTFunctionParser.g:1313:1: entryRuleSTStringLiteral : ruleSTStringLiteral EOF ;
    public final void entryRuleSTStringLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1314:1: ( ruleSTStringLiteral EOF )
            // InternalSTFunctionParser.g:1315:1: ruleSTStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStringLiteral"


    // $ANTLR start "ruleSTStringLiteral"
    // InternalSTFunctionParser.g:1322:1: ruleSTStringLiteral : ( ( rule__STStringLiteral__Group__0 ) ) ;
    public final void ruleSTStringLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1326:2: ( ( ( rule__STStringLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1327:2: ( ( rule__STStringLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1327:2: ( ( rule__STStringLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1328:3: ( rule__STStringLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1329:3: ( rule__STStringLiteral__Group__0 )
            // InternalSTFunctionParser.g:1329:4: rule__STStringLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStringLiteral"


    // $ANTLR start "entryRuleBoolLiteral"
    // InternalSTFunctionParser.g:1338:1: entryRuleBoolLiteral : ruleBoolLiteral EOF ;
    public final void entryRuleBoolLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1339:1: ( ruleBoolLiteral EOF )
            // InternalSTFunctionParser.g:1340:1: ruleBoolLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolLiteral"


    // $ANTLR start "ruleBoolLiteral"
    // InternalSTFunctionParser.g:1347:1: ruleBoolLiteral : ( ( rule__BoolLiteral__Alternatives ) ) ;
    public final void ruleBoolLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1351:2: ( ( ( rule__BoolLiteral__Alternatives ) ) )
            // InternalSTFunctionParser.g:1352:2: ( ( rule__BoolLiteral__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1352:2: ( ( rule__BoolLiteral__Alternatives ) )
            // InternalSTFunctionParser.g:1353:3: ( rule__BoolLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1354:3: ( rule__BoolLiteral__Alternatives )
            // InternalSTFunctionParser.g:1354:4: rule__BoolLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BoolLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolLiteral"


    // $ANTLR start "entryRuleNumber"
    // InternalSTFunctionParser.g:1363:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1364:1: ( ruleNumber EOF )
            // InternalSTFunctionParser.g:1365:1: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalSTFunctionParser.g:1372:1: ruleNumber : ( ( rule__Number__Group__0 ) ) ;
    public final void ruleNumber() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1376:2: ( ( ( rule__Number__Group__0 ) ) )
            // InternalSTFunctionParser.g:1377:2: ( ( rule__Number__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1377:2: ( ( rule__Number__Group__0 ) )
            // InternalSTFunctionParser.g:1378:3: ( rule__Number__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1379:3: ( rule__Number__Group__0 )
            // InternalSTFunctionParser.g:1379:4: rule__Number__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleDate"
    // InternalSTFunctionParser.g:1388:1: entryRuleDate : ruleDate EOF ;
    public final void entryRuleDate() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1389:1: ( ruleDate EOF )
            // InternalSTFunctionParser.g:1390:1: ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalSTFunctionParser.g:1397:1: ruleDate : ( ( rule__Date__Group__0 ) ) ;
    public final void ruleDate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1401:2: ( ( ( rule__Date__Group__0 ) ) )
            // InternalSTFunctionParser.g:1402:2: ( ( rule__Date__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1402:2: ( ( rule__Date__Group__0 ) )
            // InternalSTFunctionParser.g:1403:3: ( rule__Date__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1404:3: ( rule__Date__Group__0 )
            // InternalSTFunctionParser.g:1404:4: rule__Date__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRuleTimeOfDay"
    // InternalSTFunctionParser.g:1413:1: entryRuleTimeOfDay : ruleTimeOfDay EOF ;
    public final void entryRuleTimeOfDay() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1414:1: ( ruleTimeOfDay EOF )
            // InternalSTFunctionParser.g:1415:1: ruleTimeOfDay EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeOfDay"


    // $ANTLR start "ruleTimeOfDay"
    // InternalSTFunctionParser.g:1422:1: ruleTimeOfDay : ( ( rule__TimeOfDay__Group__0 ) ) ;
    public final void ruleTimeOfDay() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1426:2: ( ( ( rule__TimeOfDay__Group__0 ) ) )
            // InternalSTFunctionParser.g:1427:2: ( ( rule__TimeOfDay__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1427:2: ( ( rule__TimeOfDay__Group__0 ) )
            // InternalSTFunctionParser.g:1428:3: ( rule__TimeOfDay__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1429:3: ( rule__TimeOfDay__Group__0 )
            // InternalSTFunctionParser.g:1429:4: rule__TimeOfDay__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeOfDay"


    // $ANTLR start "entryRuleTime"
    // InternalSTFunctionParser.g:1438:1: entryRuleTime : ruleTime EOF ;
    public final void entryRuleTime() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1439:1: ( ruleTime EOF )
            // InternalSTFunctionParser.g:1440:1: ruleTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTime"


    // $ANTLR start "ruleTime"
    // InternalSTFunctionParser.g:1447:1: ruleTime : ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) ) ;
    public final void ruleTime() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1451:2: ( ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) ) )
            // InternalSTFunctionParser.g:1452:2: ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) )
            {
            // InternalSTFunctionParser.g:1452:2: ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) )
            // InternalSTFunctionParser.g:1453:3: ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* )
            {
            // InternalSTFunctionParser.g:1453:3: ( ( rule__Time__Group__0 ) )
            // InternalSTFunctionParser.g:1454:4: ( rule__Time__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1455:4: ( rule__Time__Group__0 )
            // InternalSTFunctionParser.g:1455:5: rule__Time__Group__0
            {
            pushFollow(FOLLOW_4);
            rule__Time__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }

            // InternalSTFunctionParser.g:1458:3: ( ( rule__Time__Group__0 )* )
            // InternalSTFunctionParser.g:1459:4: ( rule__Time__Group__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1460:4: ( rule__Time__Group__0 )*
            loop2:
            do {
                int alt2=2;
                switch ( input.LA(1) ) {
                case PlusSign:
                    {
                    int LA2_2 = input.LA(2);

                    if ( (LA2_2==RULE_INT) ) {
                        int LA2_5 = input.LA(3);

                        if ( (LA2_5==FullStop) ) {
                            int LA2_6 = input.LA(4);

                            if ( (LA2_6==RULE_EXT_INT) ) {
                                int LA2_7 = input.LA(5);

                                if ( ((LA2_7>=MS && LA2_7<=NS)||LA2_7==US||(LA2_7>=D && LA2_7<=S)) ) {
                                    alt2=1;
                                }


                            }
                            else if ( (LA2_6==RULE_INT) ) {
                                int LA2_8 = input.LA(5);

                                if ( ((LA2_8>=MS && LA2_8<=NS)||LA2_8==US||(LA2_8>=D && LA2_8<=S)) ) {
                                    alt2=1;
                                }


                            }


                        }
                        else if ( ((LA2_5>=MS && LA2_5<=NS)||LA2_5==US||(LA2_5>=D && LA2_5<=S)) ) {
                            alt2=1;
                        }


                    }


                    }
                    break;
                case HyphenMinus:
                    {
                    int LA2_3 = input.LA(2);

                    if ( (LA2_3==RULE_INT) ) {
                        int LA2_5 = input.LA(3);

                        if ( (LA2_5==FullStop) ) {
                            int LA2_6 = input.LA(4);

                            if ( (LA2_6==RULE_EXT_INT) ) {
                                int LA2_7 = input.LA(5);

                                if ( ((LA2_7>=MS && LA2_7<=NS)||LA2_7==US||(LA2_7>=D && LA2_7<=S)) ) {
                                    alt2=1;
                                }


                            }
                            else if ( (LA2_6==RULE_INT) ) {
                                int LA2_8 = input.LA(5);

                                if ( ((LA2_8>=MS && LA2_8<=NS)||LA2_8==US||(LA2_8>=D && LA2_8<=S)) ) {
                                    alt2=1;
                                }


                            }


                        }
                        else if ( ((LA2_5>=MS && LA2_5<=NS)||LA2_5==US||(LA2_5>=D && LA2_5<=S)) ) {
                            alt2=1;
                        }


                    }


                    }
                    break;
                case RULE_INT:
                    {
                    alt2=1;
                    }
                    break;

                }

                switch (alt2) {
            	case 1 :
            	    // InternalSTFunctionParser.g:1460:5: rule__Time__Group__0
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Time__Group__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTime"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalSTFunctionParser.g:1470:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1474:1: ( ( ( FullStopFullStop ) ) )
            // InternalSTFunctionParser.g:1475:2: ( ( FullStopFullStop ) )
            {
            // InternalSTFunctionParser.g:1475:2: ( ( FullStopFullStop ) )
            // InternalSTFunctionParser.g:1476:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:1477:3: ( FullStopFullStop )
            // InternalSTFunctionParser.g:1477:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalSTFunctionParser.g:1486:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1490:1: ( ( ( OR ) ) )
            // InternalSTFunctionParser.g:1491:2: ( ( OR ) )
            {
            // InternalSTFunctionParser.g:1491:2: ( ( OR ) )
            // InternalSTFunctionParser.g:1492:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:1493:3: ( OR )
            // InternalSTFunctionParser.g:1493:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalSTFunctionParser.g:1502:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1506:1: ( ( ( XOR ) ) )
            // InternalSTFunctionParser.g:1507:2: ( ( XOR ) )
            {
            // InternalSTFunctionParser.g:1507:2: ( ( XOR ) )
            // InternalSTFunctionParser.g:1508:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:1509:3: ( XOR )
            // InternalSTFunctionParser.g:1509:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalSTFunctionParser.g:1518:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1522:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1523:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1523:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1524:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1525:3: ( rule__AndOperator__Alternatives )
            // InternalSTFunctionParser.g:1525:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalSTFunctionParser.g:1534:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1538:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1539:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1539:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1540:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1541:3: ( rule__EqualityOperator__Alternatives )
            // InternalSTFunctionParser.g:1541:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSTFunctionParser.g:1550:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1554:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1555:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1555:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1556:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1557:3: ( rule__CompareOperator__Alternatives )
            // InternalSTFunctionParser.g:1557:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalSTFunctionParser.g:1566:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1570:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1571:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1571:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1572:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1573:3: ( rule__AddSubOperator__Alternatives )
            // InternalSTFunctionParser.g:1573:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalSTFunctionParser.g:1582:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1586:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1587:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1587:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1588:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1589:3: ( rule__MulDivModOperator__Alternatives )
            // InternalSTFunctionParser.g:1589:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalSTFunctionParser.g:1598:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1602:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTFunctionParser.g:1603:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTFunctionParser.g:1603:2: ( ( AsteriskAsterisk ) )
            // InternalSTFunctionParser.g:1604:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:1605:3: ( AsteriskAsterisk )
            // InternalSTFunctionParser.g:1605:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalSTFunctionParser.g:1614:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1618:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1619:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1619:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1620:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1621:3: ( rule__UnaryOperator__Alternatives )
            // InternalSTFunctionParser.g:1621:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleSTMultiBitAccessSpecifier"
    // InternalSTFunctionParser.g:1630:1: ruleSTMultiBitAccessSpecifier : ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleSTMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1634:1: ( ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTFunctionParser.g:1635:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1635:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            // InternalSTFunctionParser.g:1636:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1637:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            // InternalSTFunctionParser.g:1637:4: rule__STMultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STMultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultiBitAccessSpecifier"


    // $ANTLR start "rule__FunctionDefinition__Alternatives_3"
    // InternalSTFunctionParser.g:1645:1: rule__FunctionDefinition__Alternatives_3 : ( ( ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 ) ) | ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 ) ) | ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 ) ) | ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 ) ) );
    public final void rule__FunctionDefinition__Alternatives_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1649:1: ( ( ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 ) ) | ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 ) ) | ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 ) ) | ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 ) ) )
            int alt3=4;
            switch ( input.LA(1) ) {
            case RULE_ID:
                {
                alt3=1;
                }
                break;
            case VAR_TEMP:
                {
                alt3=2;
                }
                break;
            case VAR_INPUT:
                {
                alt3=3;
                }
                break;
            case VAR_OUTPUT:
                {
                alt3=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalSTFunctionParser.g:1650:2: ( ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 ) )
                    {
                    // InternalSTFunctionParser.g:1650:2: ( ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 ) )
                    // InternalSTFunctionParser.g:1651:3: ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsAssignment_3_0()); 
                    }
                    // InternalSTFunctionParser.g:1652:3: ( rule__FunctionDefinition__VarDeclarationsAssignment_3_0 )
                    // InternalSTFunctionParser.g:1652:4: rule__FunctionDefinition__VarDeclarationsAssignment_3_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarDeclarationsAssignment_3_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsAssignment_3_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1656:2: ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 ) )
                    {
                    // InternalSTFunctionParser.g:1656:2: ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 ) )
                    // InternalSTFunctionParser.g:1657:3: ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsAssignment_3_1()); 
                    }
                    // InternalSTFunctionParser.g:1658:3: ( rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 )
                    // InternalSTFunctionParser.g:1658:4: rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsAssignment_3_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1662:2: ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 ) )
                    {
                    // InternalSTFunctionParser.g:1662:2: ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 ) )
                    // InternalSTFunctionParser.g:1663:3: ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsAssignment_3_2()); 
                    }
                    // InternalSTFunctionParser.g:1664:3: ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 )
                    // InternalSTFunctionParser.g:1664:4: rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsAssignment_3_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1668:2: ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 ) )
                    {
                    // InternalSTFunctionParser.g:1668:2: ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 ) )
                    // InternalSTFunctionParser.g:1669:3: ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsAssignment_3_3()); 
                    }
                    // InternalSTFunctionParser.g:1670:3: ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 )
                    // InternalSTFunctionParser.g:1670:4: rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsAssignment_3_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Alternatives_3"


    // $ANTLR start "rule__VarDeclaration__Alternatives_4_1"
    // InternalSTFunctionParser.g:1678:1: rule__VarDeclaration__Alternatives_4_1 : ( ( ( rule__VarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_4_1_1__0 ) ) );
    public final void rule__VarDeclaration__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1682:1: ( ( ( rule__VarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_4_1_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==LeftSquareBracket) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==Asterisk) ) {
                    alt4=2;
                }
                else if ( ((LA4_1>=LDATE_AND_TIME && LA4_1<=DATE_AND_TIME)||LA4_1==TIME_OF_DAY||LA4_1==WSTRING||(LA4_1>=STRING && LA4_1<=DWORD)||(LA4_1>=LDATE && LA4_1<=LWORD)||(LA4_1>=UDINT && LA4_1<=WCHAR)||(LA4_1>=BOOL && LA4_1<=DINT)||(LA4_1>=FALSE && LA4_1<=UINT)||LA4_1==WORD||(LA4_1>=INT && LA4_1<=LDT)||(LA4_1>=TOD && LA4_1<=TRUE)||LA4_1==DT||(LA4_1>=LD && LA4_1<=LT)||LA4_1==NOT||LA4_1==D_2||LA4_1==T||LA4_1==LeftParenthesis||LA4_1==PlusSign||LA4_1==HyphenMinus||(LA4_1>=RULE_NON_DECIMAL && LA4_1<=RULE_INT)||(LA4_1>=RULE_ID && LA4_1<=RULE_WSTRING)) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSTFunctionParser.g:1683:2: ( ( rule__VarDeclaration__Group_4_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1683:2: ( ( rule__VarDeclaration__Group_4_1_0__0 ) )
                    // InternalSTFunctionParser.g:1684:3: ( rule__VarDeclaration__Group_4_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_4_1_0()); 
                    }
                    // InternalSTFunctionParser.g:1685:3: ( rule__VarDeclaration__Group_4_1_0__0 )
                    // InternalSTFunctionParser.g:1685:4: rule__VarDeclaration__Group_4_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_4_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1689:2: ( ( rule__VarDeclaration__Group_4_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1689:2: ( ( rule__VarDeclaration__Group_4_1_1__0 ) )
                    // InternalSTFunctionParser.g:1690:3: ( rule__VarDeclaration__Group_4_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_4_1_1()); 
                    }
                    // InternalSTFunctionParser.g:1691:3: ( rule__VarDeclaration__Group_4_1_1__0 )
                    // InternalSTFunctionParser.g:1691:4: rule__VarDeclaration__Group_4_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_4_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_4_1"


    // $ANTLR start "rule__InitializerExpression__Alternatives"
    // InternalSTFunctionParser.g:1699:1: rule__InitializerExpression__Alternatives : ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) );
    public final void rule__InitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1703:1: ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( ((LA5_0>=LDATE_AND_TIME && LA5_0<=DATE_AND_TIME)||LA5_0==TIME_OF_DAY||LA5_0==WSTRING||(LA5_0>=STRING && LA5_0<=DWORD)||(LA5_0>=LDATE && LA5_0<=LWORD)||(LA5_0>=UDINT && LA5_0<=WCHAR)||(LA5_0>=BOOL && LA5_0<=DINT)||(LA5_0>=FALSE && LA5_0<=UINT)||LA5_0==WORD||(LA5_0>=INT && LA5_0<=LDT)||(LA5_0>=TOD && LA5_0<=TRUE)||LA5_0==DT||(LA5_0>=LD && LA5_0<=LT)||LA5_0==NOT||LA5_0==D_2||LA5_0==T||LA5_0==LeftParenthesis||LA5_0==PlusSign||LA5_0==HyphenMinus||(LA5_0>=RULE_NON_DECIMAL && LA5_0<=RULE_INT)||(LA5_0>=RULE_ID && LA5_0<=RULE_WSTRING)) ) {
                alt5=1;
            }
            else if ( (LA5_0==LeftSquareBracket) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalSTFunctionParser.g:1704:2: ( ruleSTExpression )
                    {
                    // InternalSTFunctionParser.g:1704:2: ( ruleSTExpression )
                    // InternalSTFunctionParser.g:1705:3: ruleSTExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1710:2: ( ruleArrayInitializerExpression )
                    {
                    // InternalSTFunctionParser.g:1710:2: ( ruleArrayInitializerExpression )
                    // InternalSTFunctionParser.g:1711:3: ruleArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTFunctionParser.g:1720:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1724:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( ((LA6_0>=LDATE_AND_TIME && LA6_0<=DATE_AND_TIME)||LA6_0==TIME_OF_DAY||LA6_0==CONTINUE||LA6_0==WSTRING||(LA6_0>=STRING && LA6_0<=DWORD)||(LA6_0>=LDATE && LA6_0<=WCHAR)||(LA6_0>=BOOL && LA6_0<=DINT)||(LA6_0>=FALSE && LA6_0<=UINT)||(LA6_0>=WHILE && LA6_0<=CASE)||(LA6_0>=EXIT && LA6_0<=LDT)||(LA6_0>=TOD && LA6_0<=TRUE)||(LA6_0>=DT && LA6_0<=LT)||LA6_0==D_2||LA6_0==IF||LA6_0==T||LA6_0==LeftParenthesis||LA6_0==PlusSign||LA6_0==HyphenMinus||(LA6_0>=RULE_NON_DECIMAL && LA6_0<=RULE_INT)||(LA6_0>=RULE_ID && LA6_0<=RULE_WSTRING)) ) {
                alt6=1;
            }
            else if ( (LA6_0==Semicolon) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSTFunctionParser.g:1725:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1725:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTFunctionParser.g:1726:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:1727:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTFunctionParser.g:1727:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1731:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1731:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTFunctionParser.g:1732:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:1733:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTFunctionParser.g:1733:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives_0_0"
    // InternalSTFunctionParser.g:1741:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ruleSTAssignmentStatement ) | ( ( rule__STStatement__Group_0_0_6__0 ) ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) );
    public final void rule__STStatement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1745:1: ( ( ruleSTIfStatment ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ruleSTAssignmentStatement ) | ( ( rule__STStatement__Group_0_0_6__0 ) ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) )
            int alt7=9;
            switch ( input.LA(1) ) {
            case IF:
                {
                alt7=1;
                }
                break;
            case CASE:
                {
                alt7=2;
                }
                break;
            case FOR:
                {
                alt7=3;
                }
                break;
            case WHILE:
                {
                alt7=4;
                }
                break;
            case REPEAT:
                {
                alt7=5;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case FALSE:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case TRUE:
            case DT:
            case LD:
            case LT:
            case D_2:
            case T:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_ID:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt7=6;
                }
                break;
            case RETURN:
                {
                alt7=7;
                }
                break;
            case CONTINUE:
                {
                alt7=8;
                }
                break;
            case EXIT:
                {
                alt7=9;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 7, 0, input);

                throw nvae;
            }

            switch (alt7) {
                case 1 :
                    // InternalSTFunctionParser.g:1746:2: ( ruleSTIfStatment )
                    {
                    // InternalSTFunctionParser.g:1746:2: ( ruleSTIfStatment )
                    // InternalSTFunctionParser.g:1747:3: ruleSTIfStatment
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTIfStatmentParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatment();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTIfStatmentParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1752:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTFunctionParser.g:1752:2: ( ruleSTCaseStatement )
                    // InternalSTFunctionParser.g:1753:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1758:2: ( ruleSTForStatement )
                    {
                    // InternalSTFunctionParser.g:1758:2: ( ruleSTForStatement )
                    // InternalSTFunctionParser.g:1759:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1764:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTFunctionParser.g:1764:2: ( ruleSTWhileStatement )
                    // InternalSTFunctionParser.g:1765:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:1770:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTFunctionParser.g:1770:2: ( ruleSTRepeatStatement )
                    // InternalSTFunctionParser.g:1771:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:1776:2: ( ruleSTAssignmentStatement )
                    {
                    // InternalSTFunctionParser.g:1776:2: ( ruleSTAssignmentStatement )
                    // InternalSTFunctionParser.g:1777:3: ruleSTAssignmentStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAssignmentStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:1782:2: ( ( rule__STStatement__Group_0_0_6__0 ) )
                    {
                    // InternalSTFunctionParser.g:1782:2: ( ( rule__STStatement__Group_0_0_6__0 ) )
                    // InternalSTFunctionParser.g:1783:3: ( rule__STStatement__Group_0_0_6__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_6()); 
                    }
                    // InternalSTFunctionParser.g:1784:3: ( rule__STStatement__Group_0_0_6__0 )
                    // InternalSTFunctionParser.g:1784:4: rule__STStatement__Group_0_0_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTFunctionParser.g:1788:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    {
                    // InternalSTFunctionParser.g:1788:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    // InternalSTFunctionParser.g:1789:3: ( rule__STStatement__Group_0_0_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }
                    // InternalSTFunctionParser.g:1790:3: ( rule__STStatement__Group_0_0_7__0 )
                    // InternalSTFunctionParser.g:1790:4: rule__STStatement__Group_0_0_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTFunctionParser.g:1794:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    {
                    // InternalSTFunctionParser.g:1794:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    // InternalSTFunctionParser.g:1795:3: ( rule__STStatement__Group_0_0_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }
                    // InternalSTFunctionParser.g:1796:3: ( rule__STStatement__Group_0_0_8__0 )
                    // InternalSTFunctionParser.g:1796:4: rule__STStatement__Group_0_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives_0_0"


    // $ANTLR start "rule__STUnaryExpression__Alternatives"
    // InternalSTFunctionParser.g:1804:1: rule__STUnaryExpression__Alternatives : ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) );
    public final void rule__STUnaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1808:1: ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) )
            int alt8=2;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case FALSE:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case TRUE:
            case DT:
            case LD:
            case LT:
            case D_2:
            case T:
            case LeftParenthesis:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_ID:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt8=1;
                }
                break;
            case PlusSign:
                {
                int LA8_2 = input.LA(2);

                if ( (synpred17_InternalSTFunctionParser()) ) {
                    alt8=1;
                }
                else if ( (true) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 2, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA8_3 = input.LA(2);

                if ( (synpred17_InternalSTFunctionParser()) ) {
                    alt8=1;
                }
                else if ( (true) ) {
                    alt8=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 3, input);

                    throw nvae;
                }
                }
                break;
            case NOT:
                {
                alt8=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalSTFunctionParser.g:1809:2: ( ( ruleSTAccessExpression ) )
                    {
                    // InternalSTFunctionParser.g:1809:2: ( ( ruleSTAccessExpression ) )
                    // InternalSTFunctionParser.g:1810:3: ( ruleSTAccessExpression )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }
                    // InternalSTFunctionParser.g:1811:3: ( ruleSTAccessExpression )
                    // InternalSTFunctionParser.g:1811:4: ruleSTAccessExpression
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAccessExpression();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1815:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1815:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    // InternalSTFunctionParser.g:1816:3: ( rule__STUnaryExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:1817:3: ( rule__STUnaryExpression__Group_1__0 )
                    // InternalSTFunctionParser.g:1817:4: rule__STUnaryExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STUnaryExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Alternatives"


    // $ANTLR start "rule__STAccessExpression__Alternatives_1"
    // InternalSTFunctionParser.g:1825:1: rule__STAccessExpression__Alternatives_1 : ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) );
    public final void rule__STAccessExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1829:1: ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) )
            int alt9=2;
            int LA9_0 = input.LA(1);

            if ( (LA9_0==FullStop) ) {
                alt9=1;
            }
            else if ( (LA9_0==LeftSquareBracket) ) {
                alt9=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }
            switch (alt9) {
                case 1 :
                    // InternalSTFunctionParser.g:1830:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1830:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    // InternalSTFunctionParser.g:1831:3: ( rule__STAccessExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalSTFunctionParser.g:1832:3: ( rule__STAccessExpression__Group_1_0__0 )
                    // InternalSTFunctionParser.g:1832:4: rule__STAccessExpression__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1836:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:1836:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    // InternalSTFunctionParser.g:1837:3: ( rule__STAccessExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalSTFunctionParser.g:1838:3: ( rule__STAccessExpression__Group_1_1__0 )
                    // InternalSTFunctionParser.g:1838:4: rule__STAccessExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Alternatives_1"


    // $ANTLR start "rule__STAccessExpression__MemberAlternatives_1_0_2_0"
    // InternalSTFunctionParser.g:1846:1: rule__STAccessExpression__MemberAlternatives_1_0_2_0 : ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) );
    public final void rule__STAccessExpression__MemberAlternatives_1_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1850:1: ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==RULE_ID) ) {
                alt10=1;
            }
            else if ( ((LA10_0>=B && LA10_0<=X)||LA10_0==RULE_INT) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSTFunctionParser.g:1851:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTFunctionParser.g:1851:2: ( ruleSTFeatureExpression )
                    // InternalSTFunctionParser.g:1852:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1857:2: ( ruleSTMultibitPartialExpression )
                    {
                    // InternalSTFunctionParser.g:1857:2: ( ruleSTMultibitPartialExpression )
                    // InternalSTFunctionParser.g:1858:3: ruleSTMultibitPartialExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTMultibitPartialExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAlternatives_1_0_2_0"


    // $ANTLR start "rule__STPrimaryExpression__Alternatives"
    // InternalSTFunctionParser.g:1867:1: rule__STPrimaryExpression__Alternatives : ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTLiteralExpressions ) );
    public final void rule__STPrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1871:1: ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTLiteralExpressions ) )
            int alt11=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt11=1;
                }
                break;
            case RULE_ID:
                {
                alt11=2;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case FALSE:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case TRUE:
            case DT:
            case LD:
            case LT:
            case D_2:
            case T:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt11=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }

            switch (alt11) {
                case 1 :
                    // InternalSTFunctionParser.g:1872:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:1872:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    // InternalSTFunctionParser.g:1873:3: ( rule__STPrimaryExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:1874:3: ( rule__STPrimaryExpression__Group_0__0 )
                    // InternalSTFunctionParser.g:1874:4: rule__STPrimaryExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STPrimaryExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1878:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTFunctionParser.g:1878:2: ( ruleSTFeatureExpression )
                    // InternalSTFunctionParser.g:1879:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1884:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTFunctionParser.g:1884:2: ( ruleSTLiteralExpressions )
                    // InternalSTFunctionParser.g:1885:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Alternatives"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTFunctionParser.g:1894:1: rule__STLiteralExpressions__Alternatives : ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1898:1: ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) )
            int alt12=6;
            switch ( input.LA(1) ) {
            case DWORD:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BOOL:
            case BYTE:
            case DINT:
            case FALSE:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case WORD:
            case INT:
            case TRUE:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt12=1;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D_2:
                {
                alt12=2;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt12=3;
                }
                break;
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt12=4;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt12=5;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt12=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTFunctionParser.g:1899:2: ( ruleSTNumericLiteral )
                    {
                    // InternalSTFunctionParser.g:1899:2: ( ruleSTNumericLiteral )
                    // InternalSTFunctionParser.g:1900:3: ruleSTNumericLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTNumericLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1905:2: ( ruleSTDateLiteral )
                    {
                    // InternalSTFunctionParser.g:1905:2: ( ruleSTDateLiteral )
                    // InternalSTFunctionParser.g:1906:3: ruleSTDateLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1911:2: ( ruleSTTimeLiteral )
                    {
                    // InternalSTFunctionParser.g:1911:2: ( ruleSTTimeLiteral )
                    // InternalSTFunctionParser.g:1912:3: ruleSTTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1917:2: ( ruleSTTimeOfDayLiteral )
                    {
                    // InternalSTFunctionParser.g:1917:2: ( ruleSTTimeOfDayLiteral )
                    // InternalSTFunctionParser.g:1918:3: ruleSTTimeOfDayLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:1923:2: ( ruleSTDateAndTimeLiteral )
                    {
                    // InternalSTFunctionParser.g:1923:2: ( ruleSTDateAndTimeLiteral )
                    // InternalSTFunctionParser.g:1924:3: ruleSTDateAndTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:1929:2: ( ruleSTStringLiteral )
                    {
                    // InternalSTFunctionParser.g:1929:2: ( ruleSTStringLiteral )
                    // InternalSTFunctionParser.g:1930:3: ruleSTStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__STNumericLiteralType__Alternatives"
    // InternalSTFunctionParser.g:1939:1: rule__STNumericLiteralType__Alternatives : ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__STNumericLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1943:1: ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) | ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt13=15;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                alt13=1;
                }
                break;
            case BYTE:
                {
                alt13=2;
                }
                break;
            case WORD:
                {
                alt13=3;
                }
                break;
            case DWORD:
                {
                alt13=4;
                }
                break;
            case LWORD:
                {
                alt13=5;
                }
                break;
            case SINT:
                {
                alt13=6;
                }
                break;
            case INT:
                {
                alt13=7;
                }
                break;
            case DINT:
                {
                alt13=8;
                }
                break;
            case LINT:
                {
                alt13=9;
                }
                break;
            case USINT:
                {
                alt13=10;
                }
                break;
            case UINT:
                {
                alt13=11;
                }
                break;
            case UDINT:
                {
                alt13=12;
                }
                break;
            case ULINT:
                {
                alt13=13;
                }
                break;
            case REAL:
                {
                alt13=14;
                }
                break;
            case LREAL:
                {
                alt13=15;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTFunctionParser.g:1944:2: ( BOOL )
                    {
                    // InternalSTFunctionParser.g:1944:2: ( BOOL )
                    // InternalSTFunctionParser.g:1945:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getBOOLKeyword_0()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getBOOLKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1950:2: ( BYTE )
                    {
                    // InternalSTFunctionParser.g:1950:2: ( BYTE )
                    // InternalSTFunctionParser.g:1951:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getBYTEKeyword_1()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getBYTEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1956:2: ( WORD )
                    {
                    // InternalSTFunctionParser.g:1956:2: ( WORD )
                    // InternalSTFunctionParser.g:1957:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getWORDKeyword_2()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getWORDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1962:2: ( DWORD )
                    {
                    // InternalSTFunctionParser.g:1962:2: ( DWORD )
                    // InternalSTFunctionParser.g:1963:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getDWORDKeyword_3()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getDWORDKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:1968:2: ( LWORD )
                    {
                    // InternalSTFunctionParser.g:1968:2: ( LWORD )
                    // InternalSTFunctionParser.g:1969:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getLWORDKeyword_4()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getLWORDKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:1974:2: ( SINT )
                    {
                    // InternalSTFunctionParser.g:1974:2: ( SINT )
                    // InternalSTFunctionParser.g:1975:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSINTKeyword_5()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSINTKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:1980:2: ( INT )
                    {
                    // InternalSTFunctionParser.g:1980:2: ( INT )
                    // InternalSTFunctionParser.g:1981:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getINTKeyword_6()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getINTKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTFunctionParser.g:1986:2: ( DINT )
                    {
                    // InternalSTFunctionParser.g:1986:2: ( DINT )
                    // InternalSTFunctionParser.g:1987:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getDINTKeyword_7()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getDINTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTFunctionParser.g:1992:2: ( LINT )
                    {
                    // InternalSTFunctionParser.g:1992:2: ( LINT )
                    // InternalSTFunctionParser.g:1993:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getLINTKeyword_8()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getLINTKeyword_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTFunctionParser.g:1998:2: ( USINT )
                    {
                    // InternalSTFunctionParser.g:1998:2: ( USINT )
                    // InternalSTFunctionParser.g:1999:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getUSINTKeyword_9()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getUSINTKeyword_9()); 
                    }

                    }


                    }
                    break;
                case 11 :
                    // InternalSTFunctionParser.g:2004:2: ( UINT )
                    {
                    // InternalSTFunctionParser.g:2004:2: ( UINT )
                    // InternalSTFunctionParser.g:2005:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getUINTKeyword_10()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getUINTKeyword_10()); 
                    }

                    }


                    }
                    break;
                case 12 :
                    // InternalSTFunctionParser.g:2010:2: ( UDINT )
                    {
                    // InternalSTFunctionParser.g:2010:2: ( UDINT )
                    // InternalSTFunctionParser.g:2011:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getUDINTKeyword_11()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getUDINTKeyword_11()); 
                    }

                    }


                    }
                    break;
                case 13 :
                    // InternalSTFunctionParser.g:2016:2: ( ULINT )
                    {
                    // InternalSTFunctionParser.g:2016:2: ( ULINT )
                    // InternalSTFunctionParser.g:2017:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getULINTKeyword_12()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getULINTKeyword_12()); 
                    }

                    }


                    }
                    break;
                case 14 :
                    // InternalSTFunctionParser.g:2022:2: ( REAL )
                    {
                    // InternalSTFunctionParser.g:2022:2: ( REAL )
                    // InternalSTFunctionParser.g:2023:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getREALKeyword_13()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getREALKeyword_13()); 
                    }

                    }


                    }
                    break;
                case 15 :
                    // InternalSTFunctionParser.g:2028:2: ( LREAL )
                    {
                    // InternalSTFunctionParser.g:2028:2: ( LREAL )
                    // InternalSTFunctionParser.g:2029:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getLREALKeyword_14()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getLREALKeyword_14()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteralType__Alternatives"


    // $ANTLR start "rule__STNumericLiteral__ValueAlternatives_1_0"
    // InternalSTFunctionParser.g:2038:1: rule__STNumericLiteral__ValueAlternatives_1_0 : ( ( ruleBoolLiteral ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) );
    public final void rule__STNumericLiteral__ValueAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2042:1: ( ( ruleBoolLiteral ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) )
            int alt14=3;
            switch ( input.LA(1) ) {
            case FALSE:
            case TRUE:
                {
                alt14=1;
                }
                break;
            case PlusSign:
            case HyphenMinus:
            case RULE_INT:
                {
                alt14=2;
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt14=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }

            switch (alt14) {
                case 1 :
                    // InternalSTFunctionParser.g:2043:2: ( ruleBoolLiteral )
                    {
                    // InternalSTFunctionParser.g:2043:2: ( ruleBoolLiteral )
                    // InternalSTFunctionParser.g:2044:3: ruleBoolLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueBoolLiteralParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBoolLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueBoolLiteralParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2049:2: ( ruleNumber )
                    {
                    // InternalSTFunctionParser.g:2049:2: ( ruleNumber )
                    // InternalSTFunctionParser.g:2050:3: ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueNumberParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumber();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueNumberParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2055:2: ( RULE_NON_DECIMAL )
                    {
                    // InternalSTFunctionParser.g:2055:2: ( RULE_NON_DECIMAL )
                    // InternalSTFunctionParser.g:2056:3: RULE_NON_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueNON_DECIMALTerminalRuleCall_1_0_2()); 
                    }
                    match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueNON_DECIMALTerminalRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAlternatives_1_0"


    // $ANTLR start "rule__STDateLiteralType__Alternatives"
    // InternalSTFunctionParser.g:2065:1: rule__STDateLiteralType__Alternatives : ( ( DATE ) | ( LDATE ) | ( D_2 ) | ( LD ) );
    public final void rule__STDateLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2069:1: ( ( DATE ) | ( LDATE ) | ( D_2 ) | ( LD ) )
            int alt15=4;
            switch ( input.LA(1) ) {
            case DATE:
                {
                alt15=1;
                }
                break;
            case LDATE:
                {
                alt15=2;
                }
                break;
            case D_2:
                {
                alt15=3;
                }
                break;
            case LD:
                {
                alt15=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTFunctionParser.g:2070:2: ( DATE )
                    {
                    // InternalSTFunctionParser.g:2070:2: ( DATE )
                    // InternalSTFunctionParser.g:2071:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getDATEKeyword_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getDATEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2076:2: ( LDATE )
                    {
                    // InternalSTFunctionParser.g:2076:2: ( LDATE )
                    // InternalSTFunctionParser.g:2077:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getLDATEKeyword_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getLDATEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2082:2: ( D_2 )
                    {
                    // InternalSTFunctionParser.g:2082:2: ( D_2 )
                    // InternalSTFunctionParser.g:2083:3: D_2
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_2()); 
                    }
                    match(input,D_2,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2088:2: ( LD )
                    {
                    // InternalSTFunctionParser.g:2088:2: ( LD )
                    // InternalSTFunctionParser.g:2089:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_3()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteralType__Alternatives"


    // $ANTLR start "rule__STTimeLiteralType__Alternatives"
    // InternalSTFunctionParser.g:2098:1: rule__STTimeLiteralType__Alternatives : ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) );
    public final void rule__STTimeLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2102:1: ( ( TIME ) | ( LTIME ) | ( T ) | ( LT ) )
            int alt16=4;
            switch ( input.LA(1) ) {
            case TIME:
                {
                alt16=1;
                }
                break;
            case LTIME:
                {
                alt16=2;
                }
                break;
            case T:
                {
                alt16=3;
                }
                break;
            case LT:
                {
                alt16=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSTFunctionParser.g:2103:2: ( TIME )
                    {
                    // InternalSTFunctionParser.g:2103:2: ( TIME )
                    // InternalSTFunctionParser.g:2104:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getTIMEKeyword_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getTIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2109:2: ( LTIME )
                    {
                    // InternalSTFunctionParser.g:2109:2: ( LTIME )
                    // InternalSTFunctionParser.g:2110:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getLTIMEKeyword_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getLTIMEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2115:2: ( T )
                    {
                    // InternalSTFunctionParser.g:2115:2: ( T )
                    // InternalSTFunctionParser.g:2116:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_2()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2121:2: ( LT )
                    {
                    // InternalSTFunctionParser.g:2121:2: ( LT )
                    // InternalSTFunctionParser.g:2122:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_3()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteralType__Alternatives"


    // $ANTLR start "rule__STTimeOfDayLiteralType__Alternatives"
    // InternalSTFunctionParser.g:2131:1: rule__STTimeOfDayLiteralType__Alternatives : ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__STTimeOfDayLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2135:1: ( ( TIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt17=3;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt17=1;
                }
                break;
            case TOD:
                {
                alt17=2;
                }
                break;
            case LTOD:
                {
                alt17=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSTFunctionParser.g:2136:2: ( TIME_OF_DAY )
                    {
                    // InternalSTFunctionParser.g:2136:2: ( TIME_OF_DAY )
                    // InternalSTFunctionParser.g:2137:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayLiteralTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayLiteralTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2142:2: ( TOD )
                    {
                    // InternalSTFunctionParser.g:2142:2: ( TOD )
                    // InternalSTFunctionParser.g:2143:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayLiteralTypeAccess().getTODKeyword_1()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayLiteralTypeAccess().getTODKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2148:2: ( LTOD )
                    {
                    // InternalSTFunctionParser.g:2148:2: ( LTOD )
                    // InternalSTFunctionParser.g:2149:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayLiteralTypeAccess().getLTODKeyword_2()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayLiteralTypeAccess().getLTODKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteralType__Alternatives"


    // $ANTLR start "rule__STDateAndTimeLiteralType__Alternatives"
    // InternalSTFunctionParser.g:2158:1: rule__STDateAndTimeLiteralType__Alternatives : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__STDateAndTimeLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2162:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt18=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt18=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt18=2;
                }
                break;
            case DT:
                {
                alt18=3;
                }
                break;
            case LDT:
                {
                alt18=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }

            switch (alt18) {
                case 1 :
                    // InternalSTFunctionParser.g:2163:2: ( DATE_AND_TIME )
                    {
                    // InternalSTFunctionParser.g:2163:2: ( DATE_AND_TIME )
                    // InternalSTFunctionParser.g:2164:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2169:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTFunctionParser.g:2169:2: ( LDATE_AND_TIME )
                    // InternalSTFunctionParser.g:2170:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2175:2: ( DT )
                    {
                    // InternalSTFunctionParser.g:2175:2: ( DT )
                    // InternalSTFunctionParser.g:2176:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getDTKeyword_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getDTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2181:2: ( LDT )
                    {
                    // InternalSTFunctionParser.g:2181:2: ( LDT )
                    // InternalSTFunctionParser.g:2182:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getLDTKeyword_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeLiteralTypeAccess().getLDTKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteralType__Alternatives"


    // $ANTLR start "rule__STStringLiteralType__Alternatives"
    // InternalSTFunctionParser.g:2191:1: rule__STStringLiteralType__Alternatives : ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STStringLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2195:1: ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt19=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt19=1;
                }
                break;
            case WSTRING:
                {
                alt19=2;
                }
                break;
            case CHAR:
                {
                alt19=3;
                }
                break;
            case WCHAR:
                {
                alt19=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }

            switch (alt19) {
                case 1 :
                    // InternalSTFunctionParser.g:2196:2: ( STRING )
                    {
                    // InternalSTFunctionParser.g:2196:2: ( STRING )
                    // InternalSTFunctionParser.g:2197:3: STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralTypeAccess().getSTRINGKeyword_0()); 
                    }
                    match(input,STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralTypeAccess().getSTRINGKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2202:2: ( WSTRING )
                    {
                    // InternalSTFunctionParser.g:2202:2: ( WSTRING )
                    // InternalSTFunctionParser.g:2203:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralTypeAccess().getWSTRINGKeyword_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralTypeAccess().getWSTRINGKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2208:2: ( CHAR )
                    {
                    // InternalSTFunctionParser.g:2208:2: ( CHAR )
                    // InternalSTFunctionParser.g:2209:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralTypeAccess().getCHARKeyword_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralTypeAccess().getCHARKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2214:2: ( WCHAR )
                    {
                    // InternalSTFunctionParser.g:2214:2: ( WCHAR )
                    // InternalSTFunctionParser.g:2215:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralTypeAccess().getWCHARKeyword_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralTypeAccess().getWCHARKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteralType__Alternatives"


    // $ANTLR start "rule__STStringLiteral__ValueAlternatives_1_0"
    // InternalSTFunctionParser.g:2224:1: rule__STStringLiteral__ValueAlternatives_1_0 : ( ( RULE_STRING ) | ( RULE_WSTRING ) );
    public final void rule__STStringLiteral__ValueAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2228:1: ( ( RULE_STRING ) | ( RULE_WSTRING ) )
            int alt20=2;
            int LA20_0 = input.LA(1);

            if ( (LA20_0==RULE_STRING) ) {
                alt20=1;
            }
            else if ( (LA20_0==RULE_WSTRING) ) {
                alt20=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }
            switch (alt20) {
                case 1 :
                    // InternalSTFunctionParser.g:2229:2: ( RULE_STRING )
                    {
                    // InternalSTFunctionParser.g:2229:2: ( RULE_STRING )
                    // InternalSTFunctionParser.g:2230:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2235:2: ( RULE_WSTRING )
                    {
                    // InternalSTFunctionParser.g:2235:2: ( RULE_WSTRING )
                    // InternalSTFunctionParser.g:2236:3: RULE_WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralAccess().getValueWSTRINGTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralAccess().getValueWSTRINGTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAlternatives_1_0"


    // $ANTLR start "rule__BoolLiteral__Alternatives"
    // InternalSTFunctionParser.g:2245:1: rule__BoolLiteral__Alternatives : ( ( TRUE ) | ( FALSE ) );
    public final void rule__BoolLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2249:1: ( ( TRUE ) | ( FALSE ) )
            int alt21=2;
            int LA21_0 = input.LA(1);

            if ( (LA21_0==TRUE) ) {
                alt21=1;
            }
            else if ( (LA21_0==FALSE) ) {
                alt21=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }
            switch (alt21) {
                case 1 :
                    // InternalSTFunctionParser.g:2250:2: ( TRUE )
                    {
                    // InternalSTFunctionParser.g:2250:2: ( TRUE )
                    // InternalSTFunctionParser.g:2251:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2256:2: ( FALSE )
                    {
                    // InternalSTFunctionParser.g:2256:2: ( FALSE )
                    // InternalSTFunctionParser.g:2257:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolLiteral__Alternatives"


    // $ANTLR start "rule__Number__Alternatives_0"
    // InternalSTFunctionParser.g:2266:1: rule__Number__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__Number__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2270:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt22=2;
            int LA22_0 = input.LA(1);

            if ( (LA22_0==PlusSign) ) {
                alt22=1;
            }
            else if ( (LA22_0==HyphenMinus) ) {
                alt22=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }
            switch (alt22) {
                case 1 :
                    // InternalSTFunctionParser.g:2271:2: ( PlusSign )
                    {
                    // InternalSTFunctionParser.g:2271:2: ( PlusSign )
                    // InternalSTFunctionParser.g:2272:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2277:2: ( HyphenMinus )
                    {
                    // InternalSTFunctionParser.g:2277:2: ( HyphenMinus )
                    // InternalSTFunctionParser.g:2278:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_0"


    // $ANTLR start "rule__Number__Alternatives_2_1"
    // InternalSTFunctionParser.g:2287:1: rule__Number__Alternatives_2_1 : ( ( RULE_EXT_INT ) | ( RULE_INT ) );
    public final void rule__Number__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2291:1: ( ( RULE_EXT_INT ) | ( RULE_INT ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==RULE_EXT_INT) ) {
                alt23=1;
            }
            else if ( (LA23_0==RULE_INT) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSTFunctionParser.g:2292:2: ( RULE_EXT_INT )
                    {
                    // InternalSTFunctionParser.g:2292:2: ( RULE_EXT_INT )
                    // InternalSTFunctionParser.g:2293:3: RULE_EXT_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getEXT_INTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_EXT_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getEXT_INTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2298:2: ( RULE_INT )
                    {
                    // InternalSTFunctionParser.g:2298:2: ( RULE_INT )
                    // InternalSTFunctionParser.g:2299:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_2_1"


    // $ANTLR start "rule__Time__Alternatives_1"
    // InternalSTFunctionParser.g:2308:1: rule__Time__Alternatives_1 : ( ( D ) | ( H ) | ( M ) | ( S ) | ( MS ) | ( US ) | ( NS ) );
    public final void rule__Time__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2312:1: ( ( D ) | ( H ) | ( M ) | ( S ) | ( MS ) | ( US ) | ( NS ) )
            int alt24=7;
            switch ( input.LA(1) ) {
            case D:
                {
                alt24=1;
                }
                break;
            case H:
                {
                alt24=2;
                }
                break;
            case M:
                {
                alt24=3;
                }
                break;
            case S:
                {
                alt24=4;
                }
                break;
            case MS:
                {
                alt24=5;
                }
                break;
            case US:
                {
                alt24=6;
                }
                break;
            case NS:
                {
                alt24=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSTFunctionParser.g:2313:2: ( D )
                    {
                    // InternalSTFunctionParser.g:2313:2: ( D )
                    // InternalSTFunctionParser.g:2314:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getDKeyword_1_0()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getDKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2319:2: ( H )
                    {
                    // InternalSTFunctionParser.g:2319:2: ( H )
                    // InternalSTFunctionParser.g:2320:3: H
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getHKeyword_1_1()); 
                    }
                    match(input,H,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getHKeyword_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2325:2: ( M )
                    {
                    // InternalSTFunctionParser.g:2325:2: ( M )
                    // InternalSTFunctionParser.g:2326:3: M
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getMKeyword_1_2()); 
                    }
                    match(input,M,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getMKeyword_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2331:2: ( S )
                    {
                    // InternalSTFunctionParser.g:2331:2: ( S )
                    // InternalSTFunctionParser.g:2332:3: S
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getSKeyword_1_3()); 
                    }
                    match(input,S,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getSKeyword_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2337:2: ( MS )
                    {
                    // InternalSTFunctionParser.g:2337:2: ( MS )
                    // InternalSTFunctionParser.g:2338:3: MS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getMSKeyword_1_4()); 
                    }
                    match(input,MS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getMSKeyword_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:2343:2: ( US )
                    {
                    // InternalSTFunctionParser.g:2343:2: ( US )
                    // InternalSTFunctionParser.g:2344:3: US
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getUSKeyword_1_5()); 
                    }
                    match(input,US,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getUSKeyword_1_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:2349:2: ( NS )
                    {
                    // InternalSTFunctionParser.g:2349:2: ( NS )
                    // InternalSTFunctionParser.g:2350:3: NS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getNSKeyword_1_6()); 
                    }
                    match(input,NS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getNSKeyword_1_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Alternatives_1"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalSTFunctionParser.g:2359:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2363:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==AND) ) {
                alt25=1;
            }
            else if ( (LA25_0==Ampersand) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSTFunctionParser.g:2364:2: ( ( AND ) )
                    {
                    // InternalSTFunctionParser.g:2364:2: ( ( AND ) )
                    // InternalSTFunctionParser.g:2365:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2366:3: ( AND )
                    // InternalSTFunctionParser.g:2366:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2370:2: ( ( Ampersand ) )
                    {
                    // InternalSTFunctionParser.g:2370:2: ( ( Ampersand ) )
                    // InternalSTFunctionParser.g:2371:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2372:3: ( Ampersand )
                    // InternalSTFunctionParser.g:2372:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalSTFunctionParser.g:2380:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2384:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt26=2;
            int LA26_0 = input.LA(1);

            if ( (LA26_0==EqualsSign) ) {
                alt26=1;
            }
            else if ( (LA26_0==LessThanSignGreaterThanSign) ) {
                alt26=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }
            switch (alt26) {
                case 1 :
                    // InternalSTFunctionParser.g:2385:2: ( ( EqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:2385:2: ( ( EqualsSign ) )
                    // InternalSTFunctionParser.g:2386:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2387:3: ( EqualsSign )
                    // InternalSTFunctionParser.g:2387:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2391:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalSTFunctionParser.g:2391:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalSTFunctionParser.g:2392:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2393:3: ( LessThanSignGreaterThanSign )
                    // InternalSTFunctionParser.g:2393:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalSTFunctionParser.g:2401:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2405:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt27=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt27=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt27=2;
                }
                break;
            case GreaterThanSign:
                {
                alt27=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt27=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalSTFunctionParser.g:2406:2: ( ( LessThanSign ) )
                    {
                    // InternalSTFunctionParser.g:2406:2: ( ( LessThanSign ) )
                    // InternalSTFunctionParser.g:2407:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2408:3: ( LessThanSign )
                    // InternalSTFunctionParser.g:2408:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2412:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:2412:2: ( ( LessThanSignEqualsSign ) )
                    // InternalSTFunctionParser.g:2413:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2414:3: ( LessThanSignEqualsSign )
                    // InternalSTFunctionParser.g:2414:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2418:2: ( ( GreaterThanSign ) )
                    {
                    // InternalSTFunctionParser.g:2418:2: ( ( GreaterThanSign ) )
                    // InternalSTFunctionParser.g:2419:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:2420:3: ( GreaterThanSign )
                    // InternalSTFunctionParser.g:2420:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2424:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:2424:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalSTFunctionParser.g:2425:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTFunctionParser.g:2426:3: ( GreaterThanSignEqualsSign )
                    // InternalSTFunctionParser.g:2426:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalSTFunctionParser.g:2434:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2438:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt28=2;
            int LA28_0 = input.LA(1);

            if ( (LA28_0==PlusSign) ) {
                alt28=1;
            }
            else if ( (LA28_0==HyphenMinus) ) {
                alt28=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }
            switch (alt28) {
                case 1 :
                    // InternalSTFunctionParser.g:2439:2: ( ( PlusSign ) )
                    {
                    // InternalSTFunctionParser.g:2439:2: ( ( PlusSign ) )
                    // InternalSTFunctionParser.g:2440:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2441:3: ( PlusSign )
                    // InternalSTFunctionParser.g:2441:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2445:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTFunctionParser.g:2445:2: ( ( HyphenMinus ) )
                    // InternalSTFunctionParser.g:2446:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2447:3: ( HyphenMinus )
                    // InternalSTFunctionParser.g:2447:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalSTFunctionParser.g:2455:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2459:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt29=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt29=1;
                }
                break;
            case Solidus:
                {
                alt29=2;
                }
                break;
            case MOD:
                {
                alt29=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }

            switch (alt29) {
                case 1 :
                    // InternalSTFunctionParser.g:2460:2: ( ( Asterisk ) )
                    {
                    // InternalSTFunctionParser.g:2460:2: ( ( Asterisk ) )
                    // InternalSTFunctionParser.g:2461:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2462:3: ( Asterisk )
                    // InternalSTFunctionParser.g:2462:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2466:2: ( ( Solidus ) )
                    {
                    // InternalSTFunctionParser.g:2466:2: ( ( Solidus ) )
                    // InternalSTFunctionParser.g:2467:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2468:3: ( Solidus )
                    // InternalSTFunctionParser.g:2468:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2472:2: ( ( MOD ) )
                    {
                    // InternalSTFunctionParser.g:2472:2: ( ( MOD ) )
                    // InternalSTFunctionParser.g:2473:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:2474:3: ( MOD )
                    // InternalSTFunctionParser.g:2474:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalSTFunctionParser.g:2482:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2486:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt30=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt30=1;
                }
                break;
            case PlusSign:
                {
                alt30=2;
                }
                break;
            case NOT:
                {
                alt30=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }

            switch (alt30) {
                case 1 :
                    // InternalSTFunctionParser.g:2487:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTFunctionParser.g:2487:2: ( ( HyphenMinus ) )
                    // InternalSTFunctionParser.g:2488:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2489:3: ( HyphenMinus )
                    // InternalSTFunctionParser.g:2489:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2493:2: ( ( PlusSign ) )
                    {
                    // InternalSTFunctionParser.g:2493:2: ( ( PlusSign ) )
                    // InternalSTFunctionParser.g:2494:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2495:3: ( PlusSign )
                    // InternalSTFunctionParser.g:2495:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2499:2: ( ( NOT ) )
                    {
                    // InternalSTFunctionParser.g:2499:2: ( ( NOT ) )
                    // InternalSTFunctionParser.g:2500:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:2501:3: ( NOT )
                    // InternalSTFunctionParser.g:2501:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__STMultiBitAccessSpecifier__Alternatives"
    // InternalSTFunctionParser.g:2509:1: rule__STMultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) );
    public final void rule__STMultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2513:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) )
            int alt31=5;
            switch ( input.LA(1) ) {
            case L:
                {
                alt31=1;
                }
                break;
            case D_1:
                {
                alt31=2;
                }
                break;
            case W:
                {
                alt31=3;
                }
                break;
            case B:
                {
                alt31=4;
                }
                break;
            case X:
                {
                alt31=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }

            switch (alt31) {
                case 1 :
                    // InternalSTFunctionParser.g:2514:2: ( ( L ) )
                    {
                    // InternalSTFunctionParser.g:2514:2: ( ( L ) )
                    // InternalSTFunctionParser.g:2515:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2516:3: ( L )
                    // InternalSTFunctionParser.g:2516:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2520:2: ( ( D_1 ) )
                    {
                    // InternalSTFunctionParser.g:2520:2: ( ( D_1 ) )
                    // InternalSTFunctionParser.g:2521:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2522:3: ( D_1 )
                    // InternalSTFunctionParser.g:2522:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2526:2: ( ( W ) )
                    {
                    // InternalSTFunctionParser.g:2526:2: ( ( W ) )
                    // InternalSTFunctionParser.g:2527:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:2528:3: ( W )
                    // InternalSTFunctionParser.g:2528:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2532:2: ( ( B ) )
                    {
                    // InternalSTFunctionParser.g:2532:2: ( ( B ) )
                    // InternalSTFunctionParser.g:2533:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTFunctionParser.g:2534:3: ( B )
                    // InternalSTFunctionParser.g:2534:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2538:2: ( ( X ) )
                    {
                    // InternalSTFunctionParser.g:2538:2: ( ( X ) )
                    // InternalSTFunctionParser.g:2539:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTFunctionParser.g:2540:3: ( X )
                    // InternalSTFunctionParser.g:2540:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__FunctionDefinition__Group__0"
    // InternalSTFunctionParser.g:2548:1: rule__FunctionDefinition__Group__0 : rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1 ;
    public final void rule__FunctionDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2552:1: ( rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1 )
            // InternalSTFunctionParser.g:2553:2: rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__FunctionDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__0"


    // $ANTLR start "rule__FunctionDefinition__Group__0__Impl"
    // InternalSTFunctionParser.g:2560:1: rule__FunctionDefinition__Group__0__Impl : ( FUNCTION ) ;
    public final void rule__FunctionDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2564:1: ( ( FUNCTION ) )
            // InternalSTFunctionParser.g:2565:1: ( FUNCTION )
            {
            // InternalSTFunctionParser.g:2565:1: ( FUNCTION )
            // InternalSTFunctionParser.g:2566:2: FUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getFUNCTIONKeyword_0()); 
            }
            match(input,FUNCTION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getFUNCTIONKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__0__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__1"
    // InternalSTFunctionParser.g:2575:1: rule__FunctionDefinition__Group__1 : rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2 ;
    public final void rule__FunctionDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2579:1: ( rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2 )
            // InternalSTFunctionParser.g:2580:2: rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__FunctionDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__1"


    // $ANTLR start "rule__FunctionDefinition__Group__1__Impl"
    // InternalSTFunctionParser.g:2587:1: rule__FunctionDefinition__Group__1__Impl : ( ( rule__FunctionDefinition__NameAssignment_1 ) ) ;
    public final void rule__FunctionDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2591:1: ( ( ( rule__FunctionDefinition__NameAssignment_1 ) ) )
            // InternalSTFunctionParser.g:2592:1: ( ( rule__FunctionDefinition__NameAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:2592:1: ( ( rule__FunctionDefinition__NameAssignment_1 ) )
            // InternalSTFunctionParser.g:2593:2: ( rule__FunctionDefinition__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_1()); 
            }
            // InternalSTFunctionParser.g:2594:2: ( rule__FunctionDefinition__NameAssignment_1 )
            // InternalSTFunctionParser.g:2594:3: rule__FunctionDefinition__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__1__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__2"
    // InternalSTFunctionParser.g:2602:1: rule__FunctionDefinition__Group__2 : rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3 ;
    public final void rule__FunctionDefinition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2606:1: ( rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3 )
            // InternalSTFunctionParser.g:2607:2: rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__FunctionDefinition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__2"


    // $ANTLR start "rule__FunctionDefinition__Group__2__Impl"
    // InternalSTFunctionParser.g:2614:1: rule__FunctionDefinition__Group__2__Impl : ( ( rule__FunctionDefinition__Group_2__0 )? ) ;
    public final void rule__FunctionDefinition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2618:1: ( ( ( rule__FunctionDefinition__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:2619:1: ( ( rule__FunctionDefinition__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:2619:1: ( ( rule__FunctionDefinition__Group_2__0 )? )
            // InternalSTFunctionParser.g:2620:2: ( rule__FunctionDefinition__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:2621:2: ( rule__FunctionDefinition__Group_2__0 )?
            int alt32=2;
            int LA32_0 = input.LA(1);

            if ( (LA32_0==Colon) ) {
                alt32=1;
            }
            switch (alt32) {
                case 1 :
                    // InternalSTFunctionParser.g:2621:3: rule__FunctionDefinition__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__2__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__3"
    // InternalSTFunctionParser.g:2629:1: rule__FunctionDefinition__Group__3 : rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4 ;
    public final void rule__FunctionDefinition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2633:1: ( rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4 )
            // InternalSTFunctionParser.g:2634:2: rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4
            {
            pushFollow(FOLLOW_6);
            rule__FunctionDefinition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__3"


    // $ANTLR start "rule__FunctionDefinition__Group__3__Impl"
    // InternalSTFunctionParser.g:2641:1: rule__FunctionDefinition__Group__3__Impl : ( ( rule__FunctionDefinition__Alternatives_3 )* ) ;
    public final void rule__FunctionDefinition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2645:1: ( ( ( rule__FunctionDefinition__Alternatives_3 )* ) )
            // InternalSTFunctionParser.g:2646:1: ( ( rule__FunctionDefinition__Alternatives_3 )* )
            {
            // InternalSTFunctionParser.g:2646:1: ( ( rule__FunctionDefinition__Alternatives_3 )* )
            // InternalSTFunctionParser.g:2647:2: ( rule__FunctionDefinition__Alternatives_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getAlternatives_3()); 
            }
            // InternalSTFunctionParser.g:2648:2: ( rule__FunctionDefinition__Alternatives_3 )*
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( (LA33_0==RULE_ID) ) {
                    int LA33_2 = input.LA(2);

                    if ( (LA33_2==AT||LA33_2==Colon) ) {
                        alt33=1;
                    }


                }
                else if ( (LA33_0==VAR_OUTPUT||LA33_0==VAR_INPUT||LA33_0==VAR_TEMP) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2648:3: rule__FunctionDefinition__Alternatives_3
            	    {
            	    pushFollow(FOLLOW_7);
            	    rule__FunctionDefinition__Alternatives_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop33;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getAlternatives_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__3__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__4"
    // InternalSTFunctionParser.g:2656:1: rule__FunctionDefinition__Group__4 : rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5 ;
    public final void rule__FunctionDefinition__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2660:1: ( rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5 )
            // InternalSTFunctionParser.g:2661:2: rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5
            {
            pushFollow(FOLLOW_6);
            rule__FunctionDefinition__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__4"


    // $ANTLR start "rule__FunctionDefinition__Group__4__Impl"
    // InternalSTFunctionParser.g:2668:1: rule__FunctionDefinition__Group__4__Impl : ( ( rule__FunctionDefinition__CodeAssignment_4 )* ) ;
    public final void rule__FunctionDefinition__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2672:1: ( ( ( rule__FunctionDefinition__CodeAssignment_4 )* ) )
            // InternalSTFunctionParser.g:2673:1: ( ( rule__FunctionDefinition__CodeAssignment_4 )* )
            {
            // InternalSTFunctionParser.g:2673:1: ( ( rule__FunctionDefinition__CodeAssignment_4 )* )
            // InternalSTFunctionParser.g:2674:2: ( rule__FunctionDefinition__CodeAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getCodeAssignment_4()); 
            }
            // InternalSTFunctionParser.g:2675:2: ( rule__FunctionDefinition__CodeAssignment_4 )*
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( ((LA34_0>=LDATE_AND_TIME && LA34_0<=DATE_AND_TIME)||LA34_0==TIME_OF_DAY||LA34_0==CONTINUE||LA34_0==WSTRING||(LA34_0>=STRING && LA34_0<=DWORD)||(LA34_0>=LDATE && LA34_0<=WCHAR)||(LA34_0>=BOOL && LA34_0<=DINT)||(LA34_0>=FALSE && LA34_0<=UINT)||(LA34_0>=WHILE && LA34_0<=CASE)||(LA34_0>=EXIT && LA34_0<=LDT)||(LA34_0>=TOD && LA34_0<=TRUE)||(LA34_0>=DT && LA34_0<=LT)||LA34_0==D_2||LA34_0==IF||LA34_0==T||LA34_0==LeftParenthesis||LA34_0==PlusSign||LA34_0==HyphenMinus||LA34_0==Semicolon||(LA34_0>=RULE_NON_DECIMAL && LA34_0<=RULE_INT)||(LA34_0>=RULE_ID && LA34_0<=RULE_WSTRING)) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2675:3: rule__FunctionDefinition__CodeAssignment_4
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__FunctionDefinition__CodeAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop34;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getCodeAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__4__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__5"
    // InternalSTFunctionParser.g:2683:1: rule__FunctionDefinition__Group__5 : rule__FunctionDefinition__Group__5__Impl ;
    public final void rule__FunctionDefinition__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2687:1: ( rule__FunctionDefinition__Group__5__Impl )
            // InternalSTFunctionParser.g:2688:2: rule__FunctionDefinition__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__5"


    // $ANTLR start "rule__FunctionDefinition__Group__5__Impl"
    // InternalSTFunctionParser.g:2694:1: rule__FunctionDefinition__Group__5__Impl : ( END_FUNCTION ) ;
    public final void rule__FunctionDefinition__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2698:1: ( ( END_FUNCTION ) )
            // InternalSTFunctionParser.g:2699:1: ( END_FUNCTION )
            {
            // InternalSTFunctionParser.g:2699:1: ( END_FUNCTION )
            // InternalSTFunctionParser.g:2700:2: END_FUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getEND_FUNCTIONKeyword_5()); 
            }
            match(input,END_FUNCTION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getEND_FUNCTIONKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__5__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group_2__0"
    // InternalSTFunctionParser.g:2710:1: rule__FunctionDefinition__Group_2__0 : rule__FunctionDefinition__Group_2__0__Impl rule__FunctionDefinition__Group_2__1 ;
    public final void rule__FunctionDefinition__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2714:1: ( rule__FunctionDefinition__Group_2__0__Impl rule__FunctionDefinition__Group_2__1 )
            // InternalSTFunctionParser.g:2715:2: rule__FunctionDefinition__Group_2__0__Impl rule__FunctionDefinition__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__FunctionDefinition__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_2__0"


    // $ANTLR start "rule__FunctionDefinition__Group_2__0__Impl"
    // InternalSTFunctionParser.g:2722:1: rule__FunctionDefinition__Group_2__0__Impl : ( Colon ) ;
    public final void rule__FunctionDefinition__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2726:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:2727:1: ( Colon )
            {
            // InternalSTFunctionParser.g:2727:1: ( Colon )
            // InternalSTFunctionParser.g:2728:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getColonKeyword_2_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getColonKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_2__0__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group_2__1"
    // InternalSTFunctionParser.g:2737:1: rule__FunctionDefinition__Group_2__1 : rule__FunctionDefinition__Group_2__1__Impl ;
    public final void rule__FunctionDefinition__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2741:1: ( rule__FunctionDefinition__Group_2__1__Impl )
            // InternalSTFunctionParser.g:2742:2: rule__FunctionDefinition__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_2__1"


    // $ANTLR start "rule__FunctionDefinition__Group_2__1__Impl"
    // InternalSTFunctionParser.g:2748:1: rule__FunctionDefinition__Group_2__1__Impl : ( ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 ) ) ;
    public final void rule__FunctionDefinition__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2752:1: ( ( ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:2753:1: ( ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:2753:1: ( ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 ) )
            // InternalSTFunctionParser.g:2754:2: ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:2755:2: ( rule__FunctionDefinition__ReturnTypeAssignment_2_1 )
            // InternalSTFunctionParser.g:2755:3: rule__FunctionDefinition__ReturnTypeAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__ReturnTypeAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_2__1__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:2764:1: rule__VarTempDeclarationBlock__Group__0 : rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1 ;
    public final void rule__VarTempDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2768:1: ( rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:2769:2: rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_9);
            rule__VarTempDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:2776:1: rule__VarTempDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarTempDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2780:1: ( ( () ) )
            // InternalSTFunctionParser.g:2781:1: ( () )
            {
            // InternalSTFunctionParser.g:2781:1: ( () )
            // InternalSTFunctionParser.g:2782:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:2783:2: ()
            // InternalSTFunctionParser.g:2783:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:2791:1: rule__VarTempDeclarationBlock__Group__1 : rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2 ;
    public final void rule__VarTempDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2795:1: ( rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:2796:2: rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__VarTempDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:2803:1: rule__VarTempDeclarationBlock__Group__1__Impl : ( VAR_TEMP ) ;
    public final void rule__VarTempDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2807:1: ( ( VAR_TEMP ) )
            // InternalSTFunctionParser.g:2808:1: ( VAR_TEMP )
            {
            // InternalSTFunctionParser.g:2808:1: ( VAR_TEMP )
            // InternalSTFunctionParser.g:2809:2: VAR_TEMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }
            match(input,VAR_TEMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:2818:1: rule__VarTempDeclarationBlock__Group__2 : rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3 ;
    public final void rule__VarTempDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2822:1: ( rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:2823:2: rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__VarTempDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:2830:1: rule__VarTempDeclarationBlock__Group__2__Impl : ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarTempDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2834:1: ( ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:2835:1: ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:2835:1: ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:2836:2: ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:2837:2: ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( (LA35_0==CONSTANT) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // InternalSTFunctionParser.g:2837:3: rule__VarTempDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarTempDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:2845:1: rule__VarTempDeclarationBlock__Group__3 : rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4 ;
    public final void rule__VarTempDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2849:1: ( rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:2850:2: rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__VarTempDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:2857:1: rule__VarTempDeclarationBlock__Group__3__Impl : ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarTempDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2861:1: ( ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:2862:1: ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:2862:1: ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:2863:2: ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:2864:2: ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop36:
            do {
                int alt36=2;
                int LA36_0 = input.LA(1);

                if ( (LA36_0==RULE_ID) ) {
                    alt36=1;
                }


                switch (alt36) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2864:3: rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop36;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:2872:1: rule__VarTempDeclarationBlock__Group__4 : rule__VarTempDeclarationBlock__Group__4__Impl ;
    public final void rule__VarTempDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2876:1: ( rule__VarTempDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:2877:2: rule__VarTempDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:2883:1: rule__VarTempDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarTempDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2887:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:2888:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:2888:1: ( END_VAR )
            // InternalSTFunctionParser.g:2889:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:2899:1: rule__VarInputDeclarationBlock__Group__0 : rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1 ;
    public final void rule__VarInputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2903:1: ( rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:2904:2: rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_12);
            rule__VarInputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:2911:1: rule__VarInputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarInputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2915:1: ( ( () ) )
            // InternalSTFunctionParser.g:2916:1: ( () )
            {
            // InternalSTFunctionParser.g:2916:1: ( () )
            // InternalSTFunctionParser.g:2917:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:2918:2: ()
            // InternalSTFunctionParser.g:2918:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:2926:1: rule__VarInputDeclarationBlock__Group__1 : rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2 ;
    public final void rule__VarInputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2930:1: ( rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:2931:2: rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__VarInputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:2938:1: rule__VarInputDeclarationBlock__Group__1__Impl : ( VAR_INPUT ) ;
    public final void rule__VarInputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2942:1: ( ( VAR_INPUT ) )
            // InternalSTFunctionParser.g:2943:1: ( VAR_INPUT )
            {
            // InternalSTFunctionParser.g:2943:1: ( VAR_INPUT )
            // InternalSTFunctionParser.g:2944:2: VAR_INPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }
            match(input,VAR_INPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:2953:1: rule__VarInputDeclarationBlock__Group__2 : rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3 ;
    public final void rule__VarInputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2957:1: ( rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:2958:2: rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__VarInputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:2965:1: rule__VarInputDeclarationBlock__Group__2__Impl : ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarInputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2969:1: ( ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:2970:1: ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:2970:1: ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:2971:2: ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:2972:2: ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( (LA37_0==CONSTANT) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // InternalSTFunctionParser.g:2972:3: rule__VarInputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarInputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:2980:1: rule__VarInputDeclarationBlock__Group__3 : rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4 ;
    public final void rule__VarInputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2984:1: ( rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:2985:2: rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__VarInputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:2992:1: rule__VarInputDeclarationBlock__Group__3__Impl : ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarInputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2996:1: ( ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:2997:1: ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:2997:1: ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:2998:2: ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:2999:2: ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop38:
            do {
                int alt38=2;
                int LA38_0 = input.LA(1);

                if ( (LA38_0==RULE_ID) ) {
                    alt38=1;
                }


                switch (alt38) {
            	case 1 :
            	    // InternalSTFunctionParser.g:2999:3: rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop38;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:3007:1: rule__VarInputDeclarationBlock__Group__4 : rule__VarInputDeclarationBlock__Group__4__Impl ;
    public final void rule__VarInputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3011:1: ( rule__VarInputDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:3012:2: rule__VarInputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:3018:1: rule__VarInputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarInputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3022:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:3023:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:3023:1: ( END_VAR )
            // InternalSTFunctionParser.g:3024:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:3034:1: rule__VarOutputDeclarationBlock__Group__0 : rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1 ;
    public final void rule__VarOutputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3038:1: ( rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:3039:2: rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__VarOutputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:3046:1: rule__VarOutputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarOutputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3050:1: ( ( () ) )
            // InternalSTFunctionParser.g:3051:1: ( () )
            {
            // InternalSTFunctionParser.g:3051:1: ( () )
            // InternalSTFunctionParser.g:3052:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:3053:2: ()
            // InternalSTFunctionParser.g:3053:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:3061:1: rule__VarOutputDeclarationBlock__Group__1 : rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2 ;
    public final void rule__VarOutputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3065:1: ( rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:3066:2: rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_10);
            rule__VarOutputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:3073:1: rule__VarOutputDeclarationBlock__Group__1__Impl : ( VAR_OUTPUT ) ;
    public final void rule__VarOutputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3077:1: ( ( VAR_OUTPUT ) )
            // InternalSTFunctionParser.g:3078:1: ( VAR_OUTPUT )
            {
            // InternalSTFunctionParser.g:3078:1: ( VAR_OUTPUT )
            // InternalSTFunctionParser.g:3079:2: VAR_OUTPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }
            match(input,VAR_OUTPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:3088:1: rule__VarOutputDeclarationBlock__Group__2 : rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3 ;
    public final void rule__VarOutputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3092:1: ( rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:3093:2: rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_10);
            rule__VarOutputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:3100:1: rule__VarOutputDeclarationBlock__Group__2__Impl : ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarOutputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3104:1: ( ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:3105:1: ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:3105:1: ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:3106:2: ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:3107:2: ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( (LA39_0==CONSTANT) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // InternalSTFunctionParser.g:3107:3: rule__VarOutputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarOutputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:3115:1: rule__VarOutputDeclarationBlock__Group__3 : rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4 ;
    public final void rule__VarOutputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3119:1: ( rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:3120:2: rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_10);
            rule__VarOutputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:3127:1: rule__VarOutputDeclarationBlock__Group__3__Impl : ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarOutputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3131:1: ( ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:3132:1: ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:3132:1: ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:3133:2: ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:3134:2: ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop40:
            do {
                int alt40=2;
                int LA40_0 = input.LA(1);

                if ( (LA40_0==RULE_ID) ) {
                    alt40=1;
                }


                switch (alt40) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3134:3: rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_11);
            	    rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop40;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:3142:1: rule__VarOutputDeclarationBlock__Group__4 : rule__VarOutputDeclarationBlock__Group__4__Impl ;
    public final void rule__VarOutputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3146:1: ( rule__VarOutputDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:3147:2: rule__VarOutputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:3153:1: rule__VarOutputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarOutputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3157:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:3158:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:3158:1: ( END_VAR )
            // InternalSTFunctionParser.g:3159:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSTFunctionParser.g:3169:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3173:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSTFunctionParser.g:3174:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSTFunctionParser.g:3181:1: rule__VarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3185:1: ( ( () ) )
            // InternalSTFunctionParser.g:3186:1: ( () )
            {
            // InternalSTFunctionParser.g:3186:1: ( () )
            // InternalSTFunctionParser.g:3187:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }
            // InternalSTFunctionParser.g:3188:2: ()
            // InternalSTFunctionParser.g:3188:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSTFunctionParser.g:3196:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3200:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSTFunctionParser.g:3201:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FOLLOW_14);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSTFunctionParser.g:3208:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__NameAssignment_1 ) ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3212:1: ( ( ( rule__VarDeclaration__NameAssignment_1 ) ) )
            // InternalSTFunctionParser.g:3213:1: ( ( rule__VarDeclaration__NameAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:3213:1: ( ( rule__VarDeclaration__NameAssignment_1 ) )
            // InternalSTFunctionParser.g:3214:2: ( rule__VarDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalSTFunctionParser.g:3215:2: ( rule__VarDeclaration__NameAssignment_1 )
            // InternalSTFunctionParser.g:3215:3: rule__VarDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSTFunctionParser.g:3223:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3227:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSTFunctionParser.g:3228:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FOLLOW_14);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSTFunctionParser.g:3235:1: rule__VarDeclaration__Group__2__Impl : ( ( rule__VarDeclaration__Group_2__0 )? ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3239:1: ( ( ( rule__VarDeclaration__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:3240:1: ( ( rule__VarDeclaration__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:3240:1: ( ( rule__VarDeclaration__Group_2__0 )? )
            // InternalSTFunctionParser.g:3241:2: ( rule__VarDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:3242:2: ( rule__VarDeclaration__Group_2__0 )?
            int alt41=2;
            int LA41_0 = input.LA(1);

            if ( (LA41_0==AT) ) {
                alt41=1;
            }
            switch (alt41) {
                case 1 :
                    // InternalSTFunctionParser.g:3242:3: rule__VarDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSTFunctionParser.g:3250:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3254:1: ( rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 )
            // InternalSTFunctionParser.g:3255:2: rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSTFunctionParser.g:3262:1: rule__VarDeclaration__Group__3__Impl : ( Colon ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3266:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:3267:1: ( Colon )
            {
            // InternalSTFunctionParser.g:3267:1: ( Colon )
            // InternalSTFunctionParser.g:3268:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__4"
    // InternalSTFunctionParser.g:3277:1: rule__VarDeclaration__Group__4 : rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 ;
    public final void rule__VarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3281:1: ( rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 )
            // InternalSTFunctionParser.g:3282:2: rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5
            {
            pushFollow(FOLLOW_15);
            rule__VarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4"


    // $ANTLR start "rule__VarDeclaration__Group__4__Impl"
    // InternalSTFunctionParser.g:3289:1: rule__VarDeclaration__Group__4__Impl : ( ( rule__VarDeclaration__Group_4__0 )? ) ;
    public final void rule__VarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3293:1: ( ( ( rule__VarDeclaration__Group_4__0 )? ) )
            // InternalSTFunctionParser.g:3294:1: ( ( rule__VarDeclaration__Group_4__0 )? )
            {
            // InternalSTFunctionParser.g:3294:1: ( ( rule__VarDeclaration__Group_4__0 )? )
            // InternalSTFunctionParser.g:3295:2: ( rule__VarDeclaration__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_4()); 
            }
            // InternalSTFunctionParser.g:3296:2: ( rule__VarDeclaration__Group_4__0 )?
            int alt42=2;
            int LA42_0 = input.LA(1);

            if ( (LA42_0==ARRAY) ) {
                alt42=1;
            }
            switch (alt42) {
                case 1 :
                    // InternalSTFunctionParser.g:3296:3: rule__VarDeclaration__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__5"
    // InternalSTFunctionParser.g:3304:1: rule__VarDeclaration__Group__5 : rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 ;
    public final void rule__VarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3308:1: ( rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 )
            // InternalSTFunctionParser.g:3309:2: rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6
            {
            pushFollow(FOLLOW_16);
            rule__VarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5"


    // $ANTLR start "rule__VarDeclaration__Group__5__Impl"
    // InternalSTFunctionParser.g:3316:1: rule__VarDeclaration__Group__5__Impl : ( ( rule__VarDeclaration__TypeAssignment_5 ) ) ;
    public final void rule__VarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3320:1: ( ( ( rule__VarDeclaration__TypeAssignment_5 ) ) )
            // InternalSTFunctionParser.g:3321:1: ( ( rule__VarDeclaration__TypeAssignment_5 ) )
            {
            // InternalSTFunctionParser.g:3321:1: ( ( rule__VarDeclaration__TypeAssignment_5 ) )
            // InternalSTFunctionParser.g:3322:2: ( rule__VarDeclaration__TypeAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_5()); 
            }
            // InternalSTFunctionParser.g:3323:2: ( rule__VarDeclaration__TypeAssignment_5 )
            // InternalSTFunctionParser.g:3323:3: rule__VarDeclaration__TypeAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__TypeAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__6"
    // InternalSTFunctionParser.g:3331:1: rule__VarDeclaration__Group__6 : rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 ;
    public final void rule__VarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3335:1: ( rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 )
            // InternalSTFunctionParser.g:3336:2: rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7
            {
            pushFollow(FOLLOW_16);
            rule__VarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6"


    // $ANTLR start "rule__VarDeclaration__Group__6__Impl"
    // InternalSTFunctionParser.g:3343:1: rule__VarDeclaration__Group__6__Impl : ( ( rule__VarDeclaration__Group_6__0 )? ) ;
    public final void rule__VarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3347:1: ( ( ( rule__VarDeclaration__Group_6__0 )? ) )
            // InternalSTFunctionParser.g:3348:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            {
            // InternalSTFunctionParser.g:3348:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            // InternalSTFunctionParser.g:3349:2: ( rule__VarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTFunctionParser.g:3350:2: ( rule__VarDeclaration__Group_6__0 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==LeftSquareBracket) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalSTFunctionParser.g:3350:3: rule__VarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__7"
    // InternalSTFunctionParser.g:3358:1: rule__VarDeclaration__Group__7 : rule__VarDeclaration__Group__7__Impl rule__VarDeclaration__Group__8 ;
    public final void rule__VarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3362:1: ( rule__VarDeclaration__Group__7__Impl rule__VarDeclaration__Group__8 )
            // InternalSTFunctionParser.g:3363:2: rule__VarDeclaration__Group__7__Impl rule__VarDeclaration__Group__8
            {
            pushFollow(FOLLOW_16);
            rule__VarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7"


    // $ANTLR start "rule__VarDeclaration__Group__7__Impl"
    // InternalSTFunctionParser.g:3370:1: rule__VarDeclaration__Group__7__Impl : ( ( rule__VarDeclaration__Group_7__0 )? ) ;
    public final void rule__VarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3374:1: ( ( ( rule__VarDeclaration__Group_7__0 )? ) )
            // InternalSTFunctionParser.g:3375:1: ( ( rule__VarDeclaration__Group_7__0 )? )
            {
            // InternalSTFunctionParser.g:3375:1: ( ( rule__VarDeclaration__Group_7__0 )? )
            // InternalSTFunctionParser.g:3376:2: ( rule__VarDeclaration__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_7()); 
            }
            // InternalSTFunctionParser.g:3377:2: ( rule__VarDeclaration__Group_7__0 )?
            int alt44=2;
            int LA44_0 = input.LA(1);

            if ( (LA44_0==ColonEqualsSign) ) {
                alt44=1;
            }
            switch (alt44) {
                case 1 :
                    // InternalSTFunctionParser.g:3377:3: rule__VarDeclaration__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__8"
    // InternalSTFunctionParser.g:3385:1: rule__VarDeclaration__Group__8 : rule__VarDeclaration__Group__8__Impl ;
    public final void rule__VarDeclaration__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3389:1: ( rule__VarDeclaration__Group__8__Impl )
            // InternalSTFunctionParser.g:3390:2: rule__VarDeclaration__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__8"


    // $ANTLR start "rule__VarDeclaration__Group__8__Impl"
    // InternalSTFunctionParser.g:3396:1: rule__VarDeclaration__Group__8__Impl : ( Semicolon ) ;
    public final void rule__VarDeclaration__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3400:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:3401:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:3401:1: ( Semicolon )
            // InternalSTFunctionParser.g:3402:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_8()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__8__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__0"
    // InternalSTFunctionParser.g:3412:1: rule__VarDeclaration__Group_2__0 : rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 ;
    public final void rule__VarDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3416:1: ( rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 )
            // InternalSTFunctionParser.g:3417:2: rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_5);
            rule__VarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_2__0__Impl"
    // InternalSTFunctionParser.g:3424:1: rule__VarDeclaration__Group_2__0__Impl : ( AT ) ;
    public final void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3428:1: ( ( AT ) )
            // InternalSTFunctionParser.g:3429:1: ( AT )
            {
            // InternalSTFunctionParser.g:3429:1: ( AT )
            // InternalSTFunctionParser.g:3430:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getATKeyword_2_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getATKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__1"
    // InternalSTFunctionParser.g:3439:1: rule__VarDeclaration__Group_2__1 : rule__VarDeclaration__Group_2__1__Impl ;
    public final void rule__VarDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3443:1: ( rule__VarDeclaration__Group_2__1__Impl )
            // InternalSTFunctionParser.g:3444:2: rule__VarDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_2__1__Impl"
    // InternalSTFunctionParser.g:3450:1: rule__VarDeclaration__Group_2__1__Impl : ( ( rule__VarDeclaration__LocatedAtAssignment_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3454:1: ( ( ( rule__VarDeclaration__LocatedAtAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:3455:1: ( ( rule__VarDeclaration__LocatedAtAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:3455:1: ( ( rule__VarDeclaration__LocatedAtAssignment_2_1 ) )
            // InternalSTFunctionParser.g:3456:2: ( rule__VarDeclaration__LocatedAtAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:3457:2: ( rule__VarDeclaration__LocatedAtAssignment_2_1 )
            // InternalSTFunctionParser.g:3457:3: rule__VarDeclaration__LocatedAtAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__LocatedAtAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4__0"
    // InternalSTFunctionParser.g:3466:1: rule__VarDeclaration__Group_4__0 : rule__VarDeclaration__Group_4__0__Impl rule__VarDeclaration__Group_4__1 ;
    public final void rule__VarDeclaration__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3470:1: ( rule__VarDeclaration__Group_4__0__Impl rule__VarDeclaration__Group_4__1 )
            // InternalSTFunctionParser.g:3471:2: rule__VarDeclaration__Group_4__0__Impl rule__VarDeclaration__Group_4__1
            {
            pushFollow(FOLLOW_17);
            rule__VarDeclaration__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__0"


    // $ANTLR start "rule__VarDeclaration__Group_4__0__Impl"
    // InternalSTFunctionParser.g:3478:1: rule__VarDeclaration__Group_4__0__Impl : ( ( rule__VarDeclaration__ArrayAssignment_4_0 ) ) ;
    public final void rule__VarDeclaration__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3482:1: ( ( ( rule__VarDeclaration__ArrayAssignment_4_0 ) ) )
            // InternalSTFunctionParser.g:3483:1: ( ( rule__VarDeclaration__ArrayAssignment_4_0 ) )
            {
            // InternalSTFunctionParser.g:3483:1: ( ( rule__VarDeclaration__ArrayAssignment_4_0 ) )
            // InternalSTFunctionParser.g:3484:2: ( rule__VarDeclaration__ArrayAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayAssignment_4_0()); 
            }
            // InternalSTFunctionParser.g:3485:2: ( rule__VarDeclaration__ArrayAssignment_4_0 )
            // InternalSTFunctionParser.g:3485:3: rule__VarDeclaration__ArrayAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__ArrayAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4__1"
    // InternalSTFunctionParser.g:3493:1: rule__VarDeclaration__Group_4__1 : rule__VarDeclaration__Group_4__1__Impl rule__VarDeclaration__Group_4__2 ;
    public final void rule__VarDeclaration__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3497:1: ( rule__VarDeclaration__Group_4__1__Impl rule__VarDeclaration__Group_4__2 )
            // InternalSTFunctionParser.g:3498:2: rule__VarDeclaration__Group_4__1__Impl rule__VarDeclaration__Group_4__2
            {
            pushFollow(FOLLOW_18);
            rule__VarDeclaration__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__1"


    // $ANTLR start "rule__VarDeclaration__Group_4__1__Impl"
    // InternalSTFunctionParser.g:3505:1: rule__VarDeclaration__Group_4__1__Impl : ( ( rule__VarDeclaration__Alternatives_4_1 ) ) ;
    public final void rule__VarDeclaration__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3509:1: ( ( ( rule__VarDeclaration__Alternatives_4_1 ) ) )
            // InternalSTFunctionParser.g:3510:1: ( ( rule__VarDeclaration__Alternatives_4_1 ) )
            {
            // InternalSTFunctionParser.g:3510:1: ( ( rule__VarDeclaration__Alternatives_4_1 ) )
            // InternalSTFunctionParser.g:3511:2: ( rule__VarDeclaration__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_4_1()); 
            }
            // InternalSTFunctionParser.g:3512:2: ( rule__VarDeclaration__Alternatives_4_1 )
            // InternalSTFunctionParser.g:3512:3: rule__VarDeclaration__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4__2"
    // InternalSTFunctionParser.g:3520:1: rule__VarDeclaration__Group_4__2 : rule__VarDeclaration__Group_4__2__Impl ;
    public final void rule__VarDeclaration__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3524:1: ( rule__VarDeclaration__Group_4__2__Impl )
            // InternalSTFunctionParser.g:3525:2: rule__VarDeclaration__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__2"


    // $ANTLR start "rule__VarDeclaration__Group_4__2__Impl"
    // InternalSTFunctionParser.g:3531:1: rule__VarDeclaration__Group_4__2__Impl : ( OF ) ;
    public final void rule__VarDeclaration__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3535:1: ( ( OF ) )
            // InternalSTFunctionParser.g:3536:1: ( OF )
            {
            // InternalSTFunctionParser.g:3536:1: ( OF )
            // InternalSTFunctionParser.g:3537:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getOFKeyword_4_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getOFKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__0"
    // InternalSTFunctionParser.g:3547:1: rule__VarDeclaration__Group_4_1_0__0 : rule__VarDeclaration__Group_4_1_0__0__Impl rule__VarDeclaration__Group_4_1_0__1 ;
    public final void rule__VarDeclaration__Group_4_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3551:1: ( rule__VarDeclaration__Group_4_1_0__0__Impl rule__VarDeclaration__Group_4_1_0__1 )
            // InternalSTFunctionParser.g:3552:2: rule__VarDeclaration__Group_4_1_0__0__Impl rule__VarDeclaration__Group_4_1_0__1
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_4_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__0"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__0__Impl"
    // InternalSTFunctionParser.g:3559:1: rule__VarDeclaration__Group_4_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_4_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3563:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:3564:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:3564:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:3565:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__1"
    // InternalSTFunctionParser.g:3574:1: rule__VarDeclaration__Group_4_1_0__1 : rule__VarDeclaration__Group_4_1_0__1__Impl rule__VarDeclaration__Group_4_1_0__2 ;
    public final void rule__VarDeclaration__Group_4_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3578:1: ( rule__VarDeclaration__Group_4_1_0__1__Impl rule__VarDeclaration__Group_4_1_0__2 )
            // InternalSTFunctionParser.g:3579:2: rule__VarDeclaration__Group_4_1_0__1__Impl rule__VarDeclaration__Group_4_1_0__2
            {
            pushFollow(FOLLOW_20);
            rule__VarDeclaration__Group_4_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__1"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__1__Impl"
    // InternalSTFunctionParser.g:3586:1: rule__VarDeclaration__Group_4_1_0__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_4_1_0_1 ) ) ;
    public final void rule__VarDeclaration__Group_4_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3590:1: ( ( ( rule__VarDeclaration__RangesAssignment_4_1_0_1 ) ) )
            // InternalSTFunctionParser.g:3591:1: ( ( rule__VarDeclaration__RangesAssignment_4_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:3591:1: ( ( rule__VarDeclaration__RangesAssignment_4_1_0_1 ) )
            // InternalSTFunctionParser.g:3592:2: ( rule__VarDeclaration__RangesAssignment_4_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }
            // InternalSTFunctionParser.g:3593:2: ( rule__VarDeclaration__RangesAssignment_4_1_0_1 )
            // InternalSTFunctionParser.g:3593:3: rule__VarDeclaration__RangesAssignment_4_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_4_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__2"
    // InternalSTFunctionParser.g:3601:1: rule__VarDeclaration__Group_4_1_0__2 : rule__VarDeclaration__Group_4_1_0__2__Impl rule__VarDeclaration__Group_4_1_0__3 ;
    public final void rule__VarDeclaration__Group_4_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3605:1: ( rule__VarDeclaration__Group_4_1_0__2__Impl rule__VarDeclaration__Group_4_1_0__3 )
            // InternalSTFunctionParser.g:3606:2: rule__VarDeclaration__Group_4_1_0__2__Impl rule__VarDeclaration__Group_4_1_0__3
            {
            pushFollow(FOLLOW_20);
            rule__VarDeclaration__Group_4_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__2"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__2__Impl"
    // InternalSTFunctionParser.g:3613:1: rule__VarDeclaration__Group_4_1_0__2__Impl : ( ( rule__VarDeclaration__Group_4_1_0_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_4_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3617:1: ( ( ( rule__VarDeclaration__Group_4_1_0_2__0 )* ) )
            // InternalSTFunctionParser.g:3618:1: ( ( rule__VarDeclaration__Group_4_1_0_2__0 )* )
            {
            // InternalSTFunctionParser.g:3618:1: ( ( rule__VarDeclaration__Group_4_1_0_2__0 )* )
            // InternalSTFunctionParser.g:3619:2: ( rule__VarDeclaration__Group_4_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_4_1_0_2()); 
            }
            // InternalSTFunctionParser.g:3620:2: ( rule__VarDeclaration__Group_4_1_0_2__0 )*
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( (LA45_0==Comma) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3620:3: rule__VarDeclaration__Group_4_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__VarDeclaration__Group_4_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop45;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_4_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__3"
    // InternalSTFunctionParser.g:3628:1: rule__VarDeclaration__Group_4_1_0__3 : rule__VarDeclaration__Group_4_1_0__3__Impl ;
    public final void rule__VarDeclaration__Group_4_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3632:1: ( rule__VarDeclaration__Group_4_1_0__3__Impl )
            // InternalSTFunctionParser.g:3633:2: rule__VarDeclaration__Group_4_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__3"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__3__Impl"
    // InternalSTFunctionParser.g:3639:1: rule__VarDeclaration__Group_4_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_4_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3643:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:3644:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:3644:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:3645:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0_2__0"
    // InternalSTFunctionParser.g:3655:1: rule__VarDeclaration__Group_4_1_0_2__0 : rule__VarDeclaration__Group_4_1_0_2__0__Impl rule__VarDeclaration__Group_4_1_0_2__1 ;
    public final void rule__VarDeclaration__Group_4_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3659:1: ( rule__VarDeclaration__Group_4_1_0_2__0__Impl rule__VarDeclaration__Group_4_1_0_2__1 )
            // InternalSTFunctionParser.g:3660:2: rule__VarDeclaration__Group_4_1_0_2__0__Impl rule__VarDeclaration__Group_4_1_0_2__1
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_4_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0_2__0__Impl"
    // InternalSTFunctionParser.g:3667:1: rule__VarDeclaration__Group_4_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_4_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3671:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:3672:1: ( Comma )
            {
            // InternalSTFunctionParser.g:3672:1: ( Comma )
            // InternalSTFunctionParser.g:3673:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0_2__1"
    // InternalSTFunctionParser.g:3682:1: rule__VarDeclaration__Group_4_1_0_2__1 : rule__VarDeclaration__Group_4_1_0_2__1__Impl ;
    public final void rule__VarDeclaration__Group_4_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3686:1: ( rule__VarDeclaration__Group_4_1_0_2__1__Impl )
            // InternalSTFunctionParser.g:3687:2: rule__VarDeclaration__Group_4_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0_2__1__Impl"
    // InternalSTFunctionParser.g:3693:1: rule__VarDeclaration__Group_4_1_0_2__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_4_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3697:1: ( ( ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 ) ) )
            // InternalSTFunctionParser.g:3698:1: ( ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            {
            // InternalSTFunctionParser.g:3698:1: ( ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            // InternalSTFunctionParser.g:3699:2: ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }
            // InternalSTFunctionParser.g:3700:2: ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 )
            // InternalSTFunctionParser.g:3700:3: rule__VarDeclaration__RangesAssignment_4_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_4_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__0"
    // InternalSTFunctionParser.g:3709:1: rule__VarDeclaration__Group_4_1_1__0 : rule__VarDeclaration__Group_4_1_1__0__Impl rule__VarDeclaration__Group_4_1_1__1 ;
    public final void rule__VarDeclaration__Group_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3713:1: ( rule__VarDeclaration__Group_4_1_1__0__Impl rule__VarDeclaration__Group_4_1_1__1 )
            // InternalSTFunctionParser.g:3714:2: rule__VarDeclaration__Group_4_1_1__0__Impl rule__VarDeclaration__Group_4_1_1__1
            {
            pushFollow(FOLLOW_22);
            rule__VarDeclaration__Group_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__0__Impl"
    // InternalSTFunctionParser.g:3721:1: rule__VarDeclaration__Group_4_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3725:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:3726:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:3726:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:3727:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__1"
    // InternalSTFunctionParser.g:3736:1: rule__VarDeclaration__Group_4_1_1__1 : rule__VarDeclaration__Group_4_1_1__1__Impl rule__VarDeclaration__Group_4_1_1__2 ;
    public final void rule__VarDeclaration__Group_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3740:1: ( rule__VarDeclaration__Group_4_1_1__1__Impl rule__VarDeclaration__Group_4_1_1__2 )
            // InternalSTFunctionParser.g:3741:2: rule__VarDeclaration__Group_4_1_1__1__Impl rule__VarDeclaration__Group_4_1_1__2
            {
            pushFollow(FOLLOW_20);
            rule__VarDeclaration__Group_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__1__Impl"
    // InternalSTFunctionParser.g:3748:1: rule__VarDeclaration__Group_4_1_1__1__Impl : ( ( rule__VarDeclaration__CountAssignment_4_1_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3752:1: ( ( ( rule__VarDeclaration__CountAssignment_4_1_1_1 ) ) )
            // InternalSTFunctionParser.g:3753:1: ( ( rule__VarDeclaration__CountAssignment_4_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:3753:1: ( ( rule__VarDeclaration__CountAssignment_4_1_1_1 ) )
            // InternalSTFunctionParser.g:3754:2: ( rule__VarDeclaration__CountAssignment_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }
            // InternalSTFunctionParser.g:3755:2: ( rule__VarDeclaration__CountAssignment_4_1_1_1 )
            // InternalSTFunctionParser.g:3755:3: rule__VarDeclaration__CountAssignment_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__2"
    // InternalSTFunctionParser.g:3763:1: rule__VarDeclaration__Group_4_1_1__2 : rule__VarDeclaration__Group_4_1_1__2__Impl rule__VarDeclaration__Group_4_1_1__3 ;
    public final void rule__VarDeclaration__Group_4_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3767:1: ( rule__VarDeclaration__Group_4_1_1__2__Impl rule__VarDeclaration__Group_4_1_1__3 )
            // InternalSTFunctionParser.g:3768:2: rule__VarDeclaration__Group_4_1_1__2__Impl rule__VarDeclaration__Group_4_1_1__3
            {
            pushFollow(FOLLOW_20);
            rule__VarDeclaration__Group_4_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__2"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__2__Impl"
    // InternalSTFunctionParser.g:3775:1: rule__VarDeclaration__Group_4_1_1__2__Impl : ( ( rule__VarDeclaration__Group_4_1_1_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_4_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3779:1: ( ( ( rule__VarDeclaration__Group_4_1_1_2__0 )* ) )
            // InternalSTFunctionParser.g:3780:1: ( ( rule__VarDeclaration__Group_4_1_1_2__0 )* )
            {
            // InternalSTFunctionParser.g:3780:1: ( ( rule__VarDeclaration__Group_4_1_1_2__0 )* )
            // InternalSTFunctionParser.g:3781:2: ( rule__VarDeclaration__Group_4_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_4_1_1_2()); 
            }
            // InternalSTFunctionParser.g:3782:2: ( rule__VarDeclaration__Group_4_1_1_2__0 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==Comma) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3782:3: rule__VarDeclaration__Group_4_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__VarDeclaration__Group_4_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_4_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__3"
    // InternalSTFunctionParser.g:3790:1: rule__VarDeclaration__Group_4_1_1__3 : rule__VarDeclaration__Group_4_1_1__3__Impl ;
    public final void rule__VarDeclaration__Group_4_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3794:1: ( rule__VarDeclaration__Group_4_1_1__3__Impl )
            // InternalSTFunctionParser.g:3795:2: rule__VarDeclaration__Group_4_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__3"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__3__Impl"
    // InternalSTFunctionParser.g:3801:1: rule__VarDeclaration__Group_4_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_4_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3805:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:3806:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:3806:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:3807:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1_2__0"
    // InternalSTFunctionParser.g:3817:1: rule__VarDeclaration__Group_4_1_1_2__0 : rule__VarDeclaration__Group_4_1_1_2__0__Impl rule__VarDeclaration__Group_4_1_1_2__1 ;
    public final void rule__VarDeclaration__Group_4_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3821:1: ( rule__VarDeclaration__Group_4_1_1_2__0__Impl rule__VarDeclaration__Group_4_1_1_2__1 )
            // InternalSTFunctionParser.g:3822:2: rule__VarDeclaration__Group_4_1_1_2__0__Impl rule__VarDeclaration__Group_4_1_1_2__1
            {
            pushFollow(FOLLOW_22);
            rule__VarDeclaration__Group_4_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1_2__0__Impl"
    // InternalSTFunctionParser.g:3829:1: rule__VarDeclaration__Group_4_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_4_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3833:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:3834:1: ( Comma )
            {
            // InternalSTFunctionParser.g:3834:1: ( Comma )
            // InternalSTFunctionParser.g:3835:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1_2__1"
    // InternalSTFunctionParser.g:3844:1: rule__VarDeclaration__Group_4_1_1_2__1 : rule__VarDeclaration__Group_4_1_1_2__1__Impl ;
    public final void rule__VarDeclaration__Group_4_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3848:1: ( rule__VarDeclaration__Group_4_1_1_2__1__Impl )
            // InternalSTFunctionParser.g:3849:2: rule__VarDeclaration__Group_4_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1_2__1__Impl"
    // InternalSTFunctionParser.g:3855:1: rule__VarDeclaration__Group_4_1_1_2__1__Impl : ( ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_4_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3859:1: ( ( ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 ) ) )
            // InternalSTFunctionParser.g:3860:1: ( ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 ) )
            {
            // InternalSTFunctionParser.g:3860:1: ( ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 ) )
            // InternalSTFunctionParser.g:3861:2: ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }
            // InternalSTFunctionParser.g:3862:2: ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 )
            // InternalSTFunctionParser.g:3862:3: rule__VarDeclaration__CountAssignment_4_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_4_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__0"
    // InternalSTFunctionParser.g:3871:1: rule__VarDeclaration__Group_6__0 : rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 ;
    public final void rule__VarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3875:1: ( rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 )
            // InternalSTFunctionParser.g:3876:2: rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0"


    // $ANTLR start "rule__VarDeclaration__Group_6__0__Impl"
    // InternalSTFunctionParser.g:3883:1: rule__VarDeclaration__Group_6__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3887:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:3888:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:3888:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:3889:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__1"
    // InternalSTFunctionParser.g:3898:1: rule__VarDeclaration__Group_6__1 : rule__VarDeclaration__Group_6__1__Impl rule__VarDeclaration__Group_6__2 ;
    public final void rule__VarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3902:1: ( rule__VarDeclaration__Group_6__1__Impl rule__VarDeclaration__Group_6__2 )
            // InternalSTFunctionParser.g:3903:2: rule__VarDeclaration__Group_6__1__Impl rule__VarDeclaration__Group_6__2
            {
            pushFollow(FOLLOW_23);
            rule__VarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1"


    // $ANTLR start "rule__VarDeclaration__Group_6__1__Impl"
    // InternalSTFunctionParser.g:3910:1: rule__VarDeclaration__Group_6__1__Impl : ( ( rule__VarDeclaration__MaxLengthAssignment_6_1 ) ) ;
    public final void rule__VarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3914:1: ( ( ( rule__VarDeclaration__MaxLengthAssignment_6_1 ) ) )
            // InternalSTFunctionParser.g:3915:1: ( ( rule__VarDeclaration__MaxLengthAssignment_6_1 ) )
            {
            // InternalSTFunctionParser.g:3915:1: ( ( rule__VarDeclaration__MaxLengthAssignment_6_1 ) )
            // InternalSTFunctionParser.g:3916:2: ( rule__VarDeclaration__MaxLengthAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }
            // InternalSTFunctionParser.g:3917:2: ( rule__VarDeclaration__MaxLengthAssignment_6_1 )
            // InternalSTFunctionParser.g:3917:3: rule__VarDeclaration__MaxLengthAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__MaxLengthAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__2"
    // InternalSTFunctionParser.g:3925:1: rule__VarDeclaration__Group_6__2 : rule__VarDeclaration__Group_6__2__Impl ;
    public final void rule__VarDeclaration__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3929:1: ( rule__VarDeclaration__Group_6__2__Impl )
            // InternalSTFunctionParser.g:3930:2: rule__VarDeclaration__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__2"


    // $ANTLR start "rule__VarDeclaration__Group_6__2__Impl"
    // InternalSTFunctionParser.g:3936:1: rule__VarDeclaration__Group_6__2__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3940:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:3941:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:3941:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:3942:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_7__0"
    // InternalSTFunctionParser.g:3952:1: rule__VarDeclaration__Group_7__0 : rule__VarDeclaration__Group_7__0__Impl rule__VarDeclaration__Group_7__1 ;
    public final void rule__VarDeclaration__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3956:1: ( rule__VarDeclaration__Group_7__0__Impl rule__VarDeclaration__Group_7__1 )
            // InternalSTFunctionParser.g:3957:2: rule__VarDeclaration__Group_7__0__Impl rule__VarDeclaration__Group_7__1
            {
            pushFollow(FOLLOW_24);
            rule__VarDeclaration__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_7__0"


    // $ANTLR start "rule__VarDeclaration__Group_7__0__Impl"
    // InternalSTFunctionParser.g:3964:1: rule__VarDeclaration__Group_7__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__VarDeclaration__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3968:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:3969:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:3969:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:3970:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_7__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_7__1"
    // InternalSTFunctionParser.g:3979:1: rule__VarDeclaration__Group_7__1 : rule__VarDeclaration__Group_7__1__Impl ;
    public final void rule__VarDeclaration__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3983:1: ( rule__VarDeclaration__Group_7__1__Impl )
            // InternalSTFunctionParser.g:3984:2: rule__VarDeclaration__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_7__1"


    // $ANTLR start "rule__VarDeclaration__Group_7__1__Impl"
    // InternalSTFunctionParser.g:3990:1: rule__VarDeclaration__Group_7__1__Impl : ( ( rule__VarDeclaration__DefaultValueAssignment_7_1 ) ) ;
    public final void rule__VarDeclaration__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3994:1: ( ( ( rule__VarDeclaration__DefaultValueAssignment_7_1 ) ) )
            // InternalSTFunctionParser.g:3995:1: ( ( rule__VarDeclaration__DefaultValueAssignment_7_1 ) )
            {
            // InternalSTFunctionParser.g:3995:1: ( ( rule__VarDeclaration__DefaultValueAssignment_7_1 ) )
            // InternalSTFunctionParser.g:3996:2: ( rule__VarDeclaration__DefaultValueAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }
            // InternalSTFunctionParser.g:3997:2: ( rule__VarDeclaration__DefaultValueAssignment_7_1 )
            // InternalSTFunctionParser.g:3997:3: rule__VarDeclaration__DefaultValueAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__DefaultValueAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_7__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0"
    // InternalSTFunctionParser.g:4006:1: rule__ArrayInitializerExpression__Group__0 : rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 ;
    public final void rule__ArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4010:1: ( rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 )
            // InternalSTFunctionParser.g:4011:2: rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__ArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:4018:1: rule__ArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4022:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:4023:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:4023:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:4024:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1"
    // InternalSTFunctionParser.g:4033:1: rule__ArrayInitializerExpression__Group__1 : rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 ;
    public final void rule__ArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4037:1: ( rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 )
            // InternalSTFunctionParser.g:4038:2: rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_20);
            rule__ArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:4045:1: rule__ArrayInitializerExpression__Group__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4049:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4050:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4050:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTFunctionParser.g:4051:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4052:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTFunctionParser.g:4052:3: rule__ArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2"
    // InternalSTFunctionParser.g:4060:1: rule__ArrayInitializerExpression__Group__2 : rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 ;
    public final void rule__ArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4064:1: ( rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 )
            // InternalSTFunctionParser.g:4065:2: rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_20);
            rule__ArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:4072:1: rule__ArrayInitializerExpression__Group__2__Impl : ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__ArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4076:1: ( ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTFunctionParser.g:4077:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTFunctionParser.g:4077:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            // InternalSTFunctionParser.g:4078:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:4079:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( (LA47_0==Comma) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4079:3: rule__ArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__ArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop47;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3"
    // InternalSTFunctionParser.g:4087:1: rule__ArrayInitializerExpression__Group__3 : rule__ArrayInitializerExpression__Group__3__Impl ;
    public final void rule__ArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4091:1: ( rule__ArrayInitializerExpression__Group__3__Impl )
            // InternalSTFunctionParser.g:4092:2: rule__ArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3__Impl"
    // InternalSTFunctionParser.g:4098:1: rule__ArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4102:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:4103:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:4103:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:4104:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0"
    // InternalSTFunctionParser.g:4114:1: rule__ArrayInitializerExpression__Group_2__0 : rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 ;
    public final void rule__ArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4118:1: ( rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 )
            // InternalSTFunctionParser.g:4119:2: rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_19);
            rule__ArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:4126:1: rule__ArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__ArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4130:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:4131:1: ( Comma )
            {
            // InternalSTFunctionParser.g:4131:1: ( Comma )
            // InternalSTFunctionParser.g:4132:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1"
    // InternalSTFunctionParser.g:4141:1: rule__ArrayInitializerExpression__Group_2__1 : rule__ArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__ArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4145:1: ( rule__ArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTFunctionParser.g:4146:2: rule__ArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:4152:1: rule__ArrayInitializerExpression__Group_2__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4156:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:4157:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:4157:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTFunctionParser.g:4158:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:4159:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTFunctionParser.g:4159:3: rule__ArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__0"
    // InternalSTFunctionParser.g:4168:1: rule__ArrayInitElement__Group__0 : rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 ;
    public final void rule__ArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4172:1: ( rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 )
            // InternalSTFunctionParser.g:4173:2: rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_25);
            rule__ArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0"


    // $ANTLR start "rule__ArrayInitElement__Group__0__Impl"
    // InternalSTFunctionParser.g:4180:1: rule__ArrayInitElement__Group__0__Impl : ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__ArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4184:1: ( ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTFunctionParser.g:4185:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:4185:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTFunctionParser.g:4186:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTFunctionParser.g:4187:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTFunctionParser.g:4187:3: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__1"
    // InternalSTFunctionParser.g:4195:1: rule__ArrayInitElement__Group__1 : rule__ArrayInitElement__Group__1__Impl ;
    public final void rule__ArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4199:1: ( rule__ArrayInitElement__Group__1__Impl )
            // InternalSTFunctionParser.g:4200:2: rule__ArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1"


    // $ANTLR start "rule__ArrayInitElement__Group__1__Impl"
    // InternalSTFunctionParser.g:4206:1: rule__ArrayInitElement__Group__1__Impl : ( ( rule__ArrayInitElement__Group_1__0 )? ) ;
    public final void rule__ArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4210:1: ( ( ( rule__ArrayInitElement__Group_1__0 )? ) )
            // InternalSTFunctionParser.g:4211:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            {
            // InternalSTFunctionParser.g:4211:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            // InternalSTFunctionParser.g:4212:2: ( rule__ArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:4213:2: ( rule__ArrayInitElement__Group_1__0 )?
            int alt48=2;
            int LA48_0 = input.LA(1);

            if ( (LA48_0==LeftParenthesis) ) {
                alt48=1;
            }
            switch (alt48) {
                case 1 :
                    // InternalSTFunctionParser.g:4213:3: rule__ArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0"
    // InternalSTFunctionParser.g:4222:1: rule__ArrayInitElement__Group_1__0 : rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 ;
    public final void rule__ArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4226:1: ( rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 )
            // InternalSTFunctionParser.g:4227:2: rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__ArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0__Impl"
    // InternalSTFunctionParser.g:4234:1: rule__ArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4238:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:4239:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:4239:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:4240:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1"
    // InternalSTFunctionParser.g:4249:1: rule__ArrayInitElement__Group_1__1 : rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 ;
    public final void rule__ArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4253:1: ( rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 )
            // InternalSTFunctionParser.g:4254:2: rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_26);
            rule__ArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1__Impl"
    // InternalSTFunctionParser.g:4261:1: rule__ArrayInitElement__Group_1__1__Impl : ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) ;
    public final void rule__ArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4265:1: ( ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:4266:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:4266:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            // InternalSTFunctionParser.g:4267:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:4268:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            // InternalSTFunctionParser.g:4268:3: rule__ArrayInitElement__InitExpressionAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__InitExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2"
    // InternalSTFunctionParser.g:4276:1: rule__ArrayInitElement__Group_1__2 : rule__ArrayInitElement__Group_1__2__Impl ;
    public final void rule__ArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4280:1: ( rule__ArrayInitElement__Group_1__2__Impl )
            // InternalSTFunctionParser.g:4281:2: rule__ArrayInitElement__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2__Impl"
    // InternalSTFunctionParser.g:4287:1: rule__ArrayInitElement__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4291:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:4292:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:4292:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:4293:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTFunctionParser.g:4303:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4307:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTFunctionParser.g:4308:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_27);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTFunctionParser.g:4315:1: rule__STStatement__Group_0__0__Impl : ( ( rule__STStatement__Alternatives_0_0 ) ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4319:1: ( ( ( rule__STStatement__Alternatives_0_0 ) ) )
            // InternalSTFunctionParser.g:4320:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            {
            // InternalSTFunctionParser.g:4320:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            // InternalSTFunctionParser.g:4321:2: ( rule__STStatement__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }
            // InternalSTFunctionParser.g:4322:2: ( rule__STStatement__Alternatives_0_0 )
            // InternalSTFunctionParser.g:4322:3: rule__STStatement__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTFunctionParser.g:4330:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4334:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTFunctionParser.g:4335:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTFunctionParser.g:4341:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4345:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4346:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4346:1: ( Semicolon )
            // InternalSTFunctionParser.g:4347:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_6__0"
    // InternalSTFunctionParser.g:4357:1: rule__STStatement__Group_0_0_6__0 : rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1 ;
    public final void rule__STStatement__Group_0_0_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4361:1: ( rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1 )
            // InternalSTFunctionParser.g:4362:2: rule__STStatement__Group_0_0_6__0__Impl rule__STStatement__Group_0_0_6__1
            {
            pushFollow(FOLLOW_28);
            rule__STStatement__Group_0_0_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__0"


    // $ANTLR start "rule__STStatement__Group_0_0_6__0__Impl"
    // InternalSTFunctionParser.g:4369:1: rule__STStatement__Group_0_0_6__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4373:1: ( ( () ) )
            // InternalSTFunctionParser.g:4374:1: ( () )
            {
            // InternalSTFunctionParser.g:4374:1: ( () )
            // InternalSTFunctionParser.g:4375:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_6_0()); 
            }
            // InternalSTFunctionParser.g:4376:2: ()
            // InternalSTFunctionParser.g:4376:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_6_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_6__1"
    // InternalSTFunctionParser.g:4384:1: rule__STStatement__Group_0_0_6__1 : rule__STStatement__Group_0_0_6__1__Impl ;
    public final void rule__STStatement__Group_0_0_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4388:1: ( rule__STStatement__Group_0_0_6__1__Impl )
            // InternalSTFunctionParser.g:4389:2: rule__STStatement__Group_0_0_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__1"


    // $ANTLR start "rule__STStatement__Group_0_0_6__1__Impl"
    // InternalSTFunctionParser.g:4395:1: rule__STStatement__Group_0_0_6__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_0_0_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4399:1: ( ( RETURN ) )
            // InternalSTFunctionParser.g:4400:1: ( RETURN )
            {
            // InternalSTFunctionParser.g:4400:1: ( RETURN )
            // InternalSTFunctionParser.g:4401:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_6_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_6__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0"
    // InternalSTFunctionParser.g:4411:1: rule__STStatement__Group_0_0_7__0 : rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 ;
    public final void rule__STStatement__Group_0_0_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4415:1: ( rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 )
            // InternalSTFunctionParser.g:4416:2: rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1
            {
            pushFollow(FOLLOW_29);
            rule__STStatement__Group_0_0_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0__Impl"
    // InternalSTFunctionParser.g:4423:1: rule__STStatement__Group_0_0_7__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4427:1: ( ( () ) )
            // InternalSTFunctionParser.g:4428:1: ( () )
            {
            // InternalSTFunctionParser.g:4428:1: ( () )
            // InternalSTFunctionParser.g:4429:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_7_0()); 
            }
            // InternalSTFunctionParser.g:4430:2: ()
            // InternalSTFunctionParser.g:4430:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1"
    // InternalSTFunctionParser.g:4438:1: rule__STStatement__Group_0_0_7__1 : rule__STStatement__Group_0_0_7__1__Impl ;
    public final void rule__STStatement__Group_0_0_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4442:1: ( rule__STStatement__Group_0_0_7__1__Impl )
            // InternalSTFunctionParser.g:4443:2: rule__STStatement__Group_0_0_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1__Impl"
    // InternalSTFunctionParser.g:4449:1: rule__STStatement__Group_0_0_7__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_0_0_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4453:1: ( ( CONTINUE ) )
            // InternalSTFunctionParser.g:4454:1: ( CONTINUE )
            {
            // InternalSTFunctionParser.g:4454:1: ( CONTINUE )
            // InternalSTFunctionParser.g:4455:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_7_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0"
    // InternalSTFunctionParser.g:4465:1: rule__STStatement__Group_0_0_8__0 : rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 ;
    public final void rule__STStatement__Group_0_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4469:1: ( rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 )
            // InternalSTFunctionParser.g:4470:2: rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1
            {
            pushFollow(FOLLOW_30);
            rule__STStatement__Group_0_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0__Impl"
    // InternalSTFunctionParser.g:4477:1: rule__STStatement__Group_0_0_8__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4481:1: ( ( () ) )
            // InternalSTFunctionParser.g:4482:1: ( () )
            {
            // InternalSTFunctionParser.g:4482:1: ( () )
            // InternalSTFunctionParser.g:4483:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_8_0()); 
            }
            // InternalSTFunctionParser.g:4484:2: ()
            // InternalSTFunctionParser.g:4484:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1"
    // InternalSTFunctionParser.g:4492:1: rule__STStatement__Group_0_0_8__1 : rule__STStatement__Group_0_0_8__1__Impl ;
    public final void rule__STStatement__Group_0_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4496:1: ( rule__STStatement__Group_0_0_8__1__Impl )
            // InternalSTFunctionParser.g:4497:2: rule__STStatement__Group_0_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1__Impl"
    // InternalSTFunctionParser.g:4503:1: rule__STStatement__Group_0_0_8__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_0_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4507:1: ( ( EXIT ) )
            // InternalSTFunctionParser.g:4508:1: ( EXIT )
            {
            // InternalSTFunctionParser.g:4508:1: ( EXIT )
            // InternalSTFunctionParser.g:4509:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_8_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTFunctionParser.g:4519:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4523:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTFunctionParser.g:4524:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_31);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTFunctionParser.g:4531:1: rule__STStatement__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4535:1: ( ( () ) )
            // InternalSTFunctionParser.g:4536:1: ( () )
            {
            // InternalSTFunctionParser.g:4536:1: ( () )
            // InternalSTFunctionParser.g:4537:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }
            // InternalSTFunctionParser.g:4538:2: ()
            // InternalSTFunctionParser.g:4538:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTFunctionParser.g:4546:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4550:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTFunctionParser.g:4551:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTFunctionParser.g:4557:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4561:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4562:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4562:1: ( Semicolon )
            // InternalSTFunctionParser.g:4563:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTFunctionParser.g:4573:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4577:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTFunctionParser.g:4578:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_32);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:4585:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4589:1: ( ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) )
            // InternalSTFunctionParser.g:4590:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:4590:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            // InternalSTFunctionParser.g:4591:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }
            // InternalSTFunctionParser.g:4592:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            // InternalSTFunctionParser.g:4592:3: rule__STAssignmentStatement__LeftAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LeftAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTFunctionParser.g:4600:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4604:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTFunctionParser.g:4605:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_19);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:4612:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4616:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:4617:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:4617:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:4618:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTFunctionParser.g:4627:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4631:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTFunctionParser.g:4632:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:4638:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4642:1: ( ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) )
            // InternalSTFunctionParser.g:4643:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:4643:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            // InternalSTFunctionParser.g:4644:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }
            // InternalSTFunctionParser.g:4645:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            // InternalSTFunctionParser.g:4645:3: rule__STAssignmentStatement__RightAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RightAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__0"
    // InternalSTFunctionParser.g:4654:1: rule__STIfStatment__Group__0 : rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 ;
    public final void rule__STIfStatment__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4658:1: ( rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1 )
            // InternalSTFunctionParser.g:4659:2: rule__STIfStatment__Group__0__Impl rule__STIfStatment__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STIfStatment__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0"


    // $ANTLR start "rule__STIfStatment__Group__0__Impl"
    // InternalSTFunctionParser.g:4666:1: rule__STIfStatment__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatment__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4670:1: ( ( IF ) )
            // InternalSTFunctionParser.g:4671:1: ( IF )
            {
            // InternalSTFunctionParser.g:4671:1: ( IF )
            // InternalSTFunctionParser.g:4672:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__0__Impl"


    // $ANTLR start "rule__STIfStatment__Group__1"
    // InternalSTFunctionParser.g:4681:1: rule__STIfStatment__Group__1 : rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 ;
    public final void rule__STIfStatment__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4685:1: ( rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2 )
            // InternalSTFunctionParser.g:4686:2: rule__STIfStatment__Group__1__Impl rule__STIfStatment__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__STIfStatment__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1"


    // $ANTLR start "rule__STIfStatment__Group__1__Impl"
    // InternalSTFunctionParser.g:4693:1: rule__STIfStatment__Group__1__Impl : ( ( rule__STIfStatment__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatment__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4697:1: ( ( ( rule__STIfStatment__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4698:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4698:1: ( ( rule__STIfStatment__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:4699:2: ( rule__STIfStatment__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4700:2: ( rule__STIfStatment__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:4700:3: rule__STIfStatment__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__1__Impl"


    // $ANTLR start "rule__STIfStatment__Group__2"
    // InternalSTFunctionParser.g:4708:1: rule__STIfStatment__Group__2 : rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 ;
    public final void rule__STIfStatment__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4712:1: ( rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3 )
            // InternalSTFunctionParser.g:4713:2: rule__STIfStatment__Group__2__Impl rule__STIfStatment__Group__3
            {
            pushFollow(FOLLOW_34);
            rule__STIfStatment__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2"


    // $ANTLR start "rule__STIfStatment__Group__2__Impl"
    // InternalSTFunctionParser.g:4720:1: rule__STIfStatment__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatment__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4724:1: ( ( THEN ) )
            // InternalSTFunctionParser.g:4725:1: ( THEN )
            {
            // InternalSTFunctionParser.g:4725:1: ( THEN )
            // InternalSTFunctionParser.g:4726:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__2__Impl"


    // $ANTLR start "rule__STIfStatment__Group__3"
    // InternalSTFunctionParser.g:4735:1: rule__STIfStatment__Group__3 : rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 ;
    public final void rule__STIfStatment__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4739:1: ( rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4 )
            // InternalSTFunctionParser.g:4740:2: rule__STIfStatment__Group__3__Impl rule__STIfStatment__Group__4
            {
            pushFollow(FOLLOW_34);
            rule__STIfStatment__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3"


    // $ANTLR start "rule__STIfStatment__Group__3__Impl"
    // InternalSTFunctionParser.g:4747:1: rule__STIfStatment__Group__3__Impl : ( ( rule__STIfStatment__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatment__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4751:1: ( ( ( rule__STIfStatment__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4752:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4752:1: ( ( rule__STIfStatment__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:4753:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4754:2: ( rule__STIfStatment__StatementsAssignment_3 )*
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( ((LA49_0>=LDATE_AND_TIME && LA49_0<=DATE_AND_TIME)||LA49_0==TIME_OF_DAY||LA49_0==CONTINUE||LA49_0==WSTRING||(LA49_0>=STRING && LA49_0<=DWORD)||(LA49_0>=LDATE && LA49_0<=WCHAR)||(LA49_0>=BOOL && LA49_0<=DINT)||(LA49_0>=FALSE && LA49_0<=UINT)||(LA49_0>=WHILE && LA49_0<=CASE)||(LA49_0>=EXIT && LA49_0<=LDT)||(LA49_0>=TOD && LA49_0<=TRUE)||(LA49_0>=DT && LA49_0<=LT)||LA49_0==D_2||LA49_0==IF||LA49_0==T||LA49_0==LeftParenthesis||LA49_0==PlusSign||LA49_0==HyphenMinus||LA49_0==Semicolon||(LA49_0>=RULE_NON_DECIMAL && LA49_0<=RULE_INT)||(LA49_0>=RULE_ID && LA49_0<=RULE_WSTRING)) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4754:3: rule__STIfStatment__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__STIfStatment__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop49;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__3__Impl"


    // $ANTLR start "rule__STIfStatment__Group__4"
    // InternalSTFunctionParser.g:4762:1: rule__STIfStatment__Group__4 : rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 ;
    public final void rule__STIfStatment__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4766:1: ( rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5 )
            // InternalSTFunctionParser.g:4767:2: rule__STIfStatment__Group__4__Impl rule__STIfStatment__Group__5
            {
            pushFollow(FOLLOW_34);
            rule__STIfStatment__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4"


    // $ANTLR start "rule__STIfStatment__Group__4__Impl"
    // InternalSTFunctionParser.g:4774:1: rule__STIfStatment__Group__4__Impl : ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatment__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4778:1: ( ( ( rule__STIfStatment__ElseifsAssignment_4 )* ) )
            // InternalSTFunctionParser.g:4779:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            {
            // InternalSTFunctionParser.g:4779:1: ( ( rule__STIfStatment__ElseifsAssignment_4 )* )
            // InternalSTFunctionParser.g:4780:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }
            // InternalSTFunctionParser.g:4781:2: ( rule__STIfStatment__ElseifsAssignment_4 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==ELSIF) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4781:3: rule__STIfStatment__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_35);
            	    rule__STIfStatment__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__4__Impl"


    // $ANTLR start "rule__STIfStatment__Group__5"
    // InternalSTFunctionParser.g:4789:1: rule__STIfStatment__Group__5 : rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 ;
    public final void rule__STIfStatment__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4793:1: ( rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6 )
            // InternalSTFunctionParser.g:4794:2: rule__STIfStatment__Group__5__Impl rule__STIfStatment__Group__6
            {
            pushFollow(FOLLOW_34);
            rule__STIfStatment__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5"


    // $ANTLR start "rule__STIfStatment__Group__5__Impl"
    // InternalSTFunctionParser.g:4801:1: rule__STIfStatment__Group__5__Impl : ( ( rule__STIfStatment__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatment__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4805:1: ( ( ( rule__STIfStatment__ElseAssignment_5 )? ) )
            // InternalSTFunctionParser.g:4806:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            {
            // InternalSTFunctionParser.g:4806:1: ( ( rule__STIfStatment__ElseAssignment_5 )? )
            // InternalSTFunctionParser.g:4807:2: ( rule__STIfStatment__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }
            // InternalSTFunctionParser.g:4808:2: ( rule__STIfStatment__ElseAssignment_5 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==ELSE) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSTFunctionParser.g:4808:3: rule__STIfStatment__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatment__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__5__Impl"


    // $ANTLR start "rule__STIfStatment__Group__6"
    // InternalSTFunctionParser.g:4816:1: rule__STIfStatment__Group__6 : rule__STIfStatment__Group__6__Impl ;
    public final void rule__STIfStatment__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4820:1: ( rule__STIfStatment__Group__6__Impl )
            // InternalSTFunctionParser.g:4821:2: rule__STIfStatment__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatment__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6"


    // $ANTLR start "rule__STIfStatment__Group__6__Impl"
    // InternalSTFunctionParser.g:4827:1: rule__STIfStatment__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatment__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4831:1: ( ( END_IF ) )
            // InternalSTFunctionParser.g:4832:1: ( END_IF )
            {
            // InternalSTFunctionParser.g:4832:1: ( END_IF )
            // InternalSTFunctionParser.g:4833:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTFunctionParser.g:4843:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4847:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTFunctionParser.g:4848:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTFunctionParser.g:4855:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4859:1: ( ( ELSIF ) )
            // InternalSTFunctionParser.g:4860:1: ( ELSIF )
            {
            // InternalSTFunctionParser.g:4860:1: ( ELSIF )
            // InternalSTFunctionParser.g:4861:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTFunctionParser.g:4870:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4874:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTFunctionParser.g:4875:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTFunctionParser.g:4882:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4886:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4887:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4887:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:4888:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4889:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:4889:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTFunctionParser.g:4897:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4901:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTFunctionParser.g:4902:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTFunctionParser.g:4909:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4913:1: ( ( THEN ) )
            // InternalSTFunctionParser.g:4914:1: ( THEN )
            {
            // InternalSTFunctionParser.g:4914:1: ( THEN )
            // InternalSTFunctionParser.g:4915:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTFunctionParser.g:4924:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4928:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTFunctionParser.g:4929:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTFunctionParser.g:4935:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4939:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:4940:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:4940:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:4941:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:4942:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( ((LA52_0>=LDATE_AND_TIME && LA52_0<=DATE_AND_TIME)||LA52_0==TIME_OF_DAY||LA52_0==CONTINUE||LA52_0==WSTRING||(LA52_0>=STRING && LA52_0<=DWORD)||(LA52_0>=LDATE && LA52_0<=WCHAR)||(LA52_0>=BOOL && LA52_0<=DINT)||(LA52_0>=FALSE && LA52_0<=UINT)||(LA52_0>=WHILE && LA52_0<=CASE)||(LA52_0>=EXIT && LA52_0<=LDT)||(LA52_0>=TOD && LA52_0<=TRUE)||(LA52_0>=DT && LA52_0<=LT)||LA52_0==D_2||LA52_0==IF||LA52_0==T||LA52_0==LeftParenthesis||LA52_0==PlusSign||LA52_0==HyphenMinus||LA52_0==Semicolon||(LA52_0>=RULE_NON_DECIMAL && LA52_0<=RULE_INT)||(LA52_0>=RULE_ID && LA52_0<=RULE_WSTRING)) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4942:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTFunctionParser.g:4951:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4955:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTFunctionParser.g:4956:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:4963:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4967:1: ( ( CASE ) )
            // InternalSTFunctionParser.g:4968:1: ( CASE )
            {
            // InternalSTFunctionParser.g:4968:1: ( CASE )
            // InternalSTFunctionParser.g:4969:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTFunctionParser.g:4978:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4982:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTFunctionParser.g:4983:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_18);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:4990:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4994:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4995:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4995:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTFunctionParser.g:4996:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4997:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTFunctionParser.g:4997:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTFunctionParser.g:5005:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5009:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTFunctionParser.g:5010:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5017:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5021:1: ( ( OF ) )
            // InternalSTFunctionParser.g:5022:1: ( OF )
            {
            // InternalSTFunctionParser.g:5022:1: ( OF )
            // InternalSTFunctionParser.g:5023:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTFunctionParser.g:5032:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5036:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTFunctionParser.g:5037:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_36);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5044:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5048:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTFunctionParser.g:5049:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTFunctionParser.g:5049:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTFunctionParser.g:5050:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:5050:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTFunctionParser.g:5051:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5052:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTFunctionParser.g:5052:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_37);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTFunctionParser.g:5055:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTFunctionParser.g:5056:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5057:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( ((LA53_0>=LDATE_AND_TIME && LA53_0<=DATE_AND_TIME)||LA53_0==TIME_OF_DAY||LA53_0==WSTRING||(LA53_0>=STRING && LA53_0<=DWORD)||(LA53_0>=LDATE && LA53_0<=LWORD)||(LA53_0>=UDINT && LA53_0<=WCHAR)||(LA53_0>=BOOL && LA53_0<=DINT)||(LA53_0>=FALSE && LA53_0<=UINT)||LA53_0==WORD||(LA53_0>=INT && LA53_0<=LDT)||(LA53_0>=TOD && LA53_0<=TRUE)||LA53_0==DT||(LA53_0>=LD && LA53_0<=LT)||LA53_0==NOT||LA53_0==D_2||LA53_0==T||LA53_0==LeftParenthesis||LA53_0==PlusSign||LA53_0==HyphenMinus||(LA53_0>=RULE_NON_DECIMAL && LA53_0<=RULE_INT)||(LA53_0>=RULE_ID && LA53_0<=RULE_WSTRING)) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5057:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_37);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop53;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTFunctionParser.g:5066:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5070:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTFunctionParser.g:5071:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_36);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5078:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5082:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTFunctionParser.g:5083:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTFunctionParser.g:5083:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTFunctionParser.g:5084:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTFunctionParser.g:5085:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==ELSE) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSTFunctionParser.g:5085:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTFunctionParser.g:5093:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5097:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTFunctionParser.g:5098:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:5104:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5108:1: ( ( END_CASE ) )
            // InternalSTFunctionParser.g:5109:1: ( END_CASE )
            {
            // InternalSTFunctionParser.g:5109:1: ( END_CASE )
            // InternalSTFunctionParser.g:5110:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTFunctionParser.g:5120:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5124:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTFunctionParser.g:5125:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_38);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTFunctionParser.g:5132:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5136:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTFunctionParser.g:5137:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:5137:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTFunctionParser.g:5138:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTFunctionParser.g:5139:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTFunctionParser.g:5139:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTFunctionParser.g:5147:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5151:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTFunctionParser.g:5152:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_38);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTFunctionParser.g:5159:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5163:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:5164:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:5164:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTFunctionParser.g:5165:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:5166:2: ( rule__STCaseCases__Group_1__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==Comma) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5166:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTFunctionParser.g:5174:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5178:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTFunctionParser.g:5179:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_31);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTFunctionParser.g:5186:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5190:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:5191:1: ( Colon )
            {
            // InternalSTFunctionParser.g:5191:1: ( Colon )
            // InternalSTFunctionParser.g:5192:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTFunctionParser.g:5201:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5205:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTFunctionParser.g:5206:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTFunctionParser.g:5212:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5216:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:5217:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:5217:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:5218:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5219:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop56:
            do {
                int alt56=2;
                alt56 = dfa56.predict(input);
                switch (alt56) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5219:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTFunctionParser.g:5228:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5232:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTFunctionParser.g:5233:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTFunctionParser.g:5240:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5244:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:5245:1: ( Comma )
            {
            // InternalSTFunctionParser.g:5245:1: ( Comma )
            // InternalSTFunctionParser.g:5246:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTFunctionParser.g:5255:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5259:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTFunctionParser.g:5260:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTFunctionParser.g:5266:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5270:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:5271:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:5271:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTFunctionParser.g:5272:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:5273:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTFunctionParser.g:5273:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTFunctionParser.g:5282:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5286:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTFunctionParser.g:5287:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_39);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTFunctionParser.g:5294:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5298:1: ( ( () ) )
            // InternalSTFunctionParser.g:5299:1: ( () )
            {
            // InternalSTFunctionParser.g:5299:1: ( () )
            // InternalSTFunctionParser.g:5300:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTFunctionParser.g:5301:2: ()
            // InternalSTFunctionParser.g:5301:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTFunctionParser.g:5309:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5313:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTFunctionParser.g:5314:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_31);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTFunctionParser.g:5321:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5325:1: ( ( ELSE ) )
            // InternalSTFunctionParser.g:5326:1: ( ELSE )
            {
            // InternalSTFunctionParser.g:5326:1: ( ELSE )
            // InternalSTFunctionParser.g:5327:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTFunctionParser.g:5336:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5340:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTFunctionParser.g:5341:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTFunctionParser.g:5347:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5351:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTFunctionParser.g:5352:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTFunctionParser.g:5352:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTFunctionParser.g:5353:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTFunctionParser.g:5354:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( ((LA57_0>=LDATE_AND_TIME && LA57_0<=DATE_AND_TIME)||LA57_0==TIME_OF_DAY||LA57_0==CONTINUE||LA57_0==WSTRING||(LA57_0>=STRING && LA57_0<=DWORD)||(LA57_0>=LDATE && LA57_0<=WCHAR)||(LA57_0>=BOOL && LA57_0<=DINT)||(LA57_0>=FALSE && LA57_0<=UINT)||(LA57_0>=WHILE && LA57_0<=CASE)||(LA57_0>=EXIT && LA57_0<=LDT)||(LA57_0>=TOD && LA57_0<=TRUE)||(LA57_0>=DT && LA57_0<=LT)||LA57_0==D_2||LA57_0==IF||LA57_0==T||LA57_0==LeftParenthesis||LA57_0==PlusSign||LA57_0==HyphenMinus||LA57_0==Semicolon||(LA57_0>=RULE_NON_DECIMAL && LA57_0<=RULE_INT)||(LA57_0>=RULE_ID && LA57_0<=RULE_WSTRING)) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5354:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTFunctionParser.g:5363:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5367:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTFunctionParser.g:5368:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5375:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5379:1: ( ( FOR ) )
            // InternalSTFunctionParser.g:5380:1: ( FOR )
            {
            // InternalSTFunctionParser.g:5380:1: ( FOR )
            // InternalSTFunctionParser.g:5381:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTFunctionParser.g:5390:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5394:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTFunctionParser.g:5395:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_40);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5402:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__ForAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5406:1: ( ( ( rule__STForStatement__ForAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5407:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5407:1: ( ( rule__STForStatement__ForAssignment_1 ) )
            // InternalSTFunctionParser.g:5408:2: ( rule__STForStatement__ForAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5409:2: ( rule__STForStatement__ForAssignment_1 )
            // InternalSTFunctionParser.g:5409:3: rule__STForStatement__ForAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ForAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTFunctionParser.g:5417:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5421:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTFunctionParser.g:5422:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5429:1: rule__STForStatement__Group__2__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5433:1: ( ( TO ) )
            // InternalSTFunctionParser.g:5434:1: ( TO )
            {
            // InternalSTFunctionParser.g:5434:1: ( TO )
            // InternalSTFunctionParser.g:5435:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTFunctionParser.g:5444:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5448:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTFunctionParser.g:5449:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_41);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5456:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__ToAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5460:1: ( ( ( rule__STForStatement__ToAssignment_3 ) ) )
            // InternalSTFunctionParser.g:5461:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:5461:1: ( ( rule__STForStatement__ToAssignment_3 ) )
            // InternalSTFunctionParser.g:5462:2: ( rule__STForStatement__ToAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5463:2: ( rule__STForStatement__ToAssignment_3 )
            // InternalSTFunctionParser.g:5463:3: rule__STForStatement__ToAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTFunctionParser.g:5471:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5475:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTFunctionParser.g:5476:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_41);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5483:1: rule__STForStatement__Group__4__Impl : ( ( rule__STForStatement__Group_4__0 )? ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5487:1: ( ( ( rule__STForStatement__Group_4__0 )? ) )
            // InternalSTFunctionParser.g:5488:1: ( ( rule__STForStatement__Group_4__0 )? )
            {
            // InternalSTFunctionParser.g:5488:1: ( ( rule__STForStatement__Group_4__0 )? )
            // InternalSTFunctionParser.g:5489:2: ( rule__STForStatement__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }
            // InternalSTFunctionParser.g:5490:2: ( rule__STForStatement__Group_4__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==BY) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSTFunctionParser.g:5490:3: rule__STForStatement__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTFunctionParser.g:5498:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5502:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTFunctionParser.g:5503:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_42);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:5510:1: rule__STForStatement__Group__5__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5514:1: ( ( DO ) )
            // InternalSTFunctionParser.g:5515:1: ( DO )
            {
            // InternalSTFunctionParser.g:5515:1: ( DO )
            // InternalSTFunctionParser.g:5516:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTFunctionParser.g:5525:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5529:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTFunctionParser.g:5530:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_42);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTFunctionParser.g:5537:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__StatementsAssignment_6 )* ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5541:1: ( ( ( rule__STForStatement__StatementsAssignment_6 )* ) )
            // InternalSTFunctionParser.g:5542:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            {
            // InternalSTFunctionParser.g:5542:1: ( ( rule__STForStatement__StatementsAssignment_6 )* )
            // InternalSTFunctionParser.g:5543:2: ( rule__STForStatement__StatementsAssignment_6 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }
            // InternalSTFunctionParser.g:5544:2: ( rule__STForStatement__StatementsAssignment_6 )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( ((LA59_0>=LDATE_AND_TIME && LA59_0<=DATE_AND_TIME)||LA59_0==TIME_OF_DAY||LA59_0==CONTINUE||LA59_0==WSTRING||(LA59_0>=STRING && LA59_0<=DWORD)||(LA59_0>=LDATE && LA59_0<=WCHAR)||(LA59_0>=BOOL && LA59_0<=DINT)||(LA59_0>=FALSE && LA59_0<=UINT)||(LA59_0>=WHILE && LA59_0<=CASE)||(LA59_0>=EXIT && LA59_0<=LDT)||(LA59_0>=TOD && LA59_0<=TRUE)||(LA59_0>=DT && LA59_0<=LT)||LA59_0==D_2||LA59_0==IF||LA59_0==T||LA59_0==LeftParenthesis||LA59_0==PlusSign||LA59_0==HyphenMinus||LA59_0==Semicolon||(LA59_0>=RULE_NON_DECIMAL && LA59_0<=RULE_INT)||(LA59_0>=RULE_ID && LA59_0<=RULE_WSTRING)) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5544:3: rule__STForStatement__StatementsAssignment_6
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__STForStatement__StatementsAssignment_6();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTFunctionParser.g:5552:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5556:1: ( rule__STForStatement__Group__7__Impl )
            // InternalSTFunctionParser.g:5557:2: rule__STForStatement__Group__7__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTFunctionParser.g:5563:1: rule__STForStatement__Group__7__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5567:1: ( ( END_FOR ) )
            // InternalSTFunctionParser.g:5568:1: ( END_FOR )
            {
            // InternalSTFunctionParser.g:5568:1: ( END_FOR )
            // InternalSTFunctionParser.g:5569:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__0"
    // InternalSTFunctionParser.g:5579:1: rule__STForStatement__Group_4__0 : rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 ;
    public final void rule__STForStatement__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5583:1: ( rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1 )
            // InternalSTFunctionParser.g:5584:2: rule__STForStatement__Group_4__0__Impl rule__STForStatement__Group_4__1
            {
            pushFollow(FOLLOW_19);
            rule__STForStatement__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0"


    // $ANTLR start "rule__STForStatement__Group_4__0__Impl"
    // InternalSTFunctionParser.g:5591:1: rule__STForStatement__Group_4__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5595:1: ( ( BY ) )
            // InternalSTFunctionParser.g:5596:1: ( BY )
            {
            // InternalSTFunctionParser.g:5596:1: ( BY )
            // InternalSTFunctionParser.g:5597:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_4__1"
    // InternalSTFunctionParser.g:5606:1: rule__STForStatement__Group_4__1 : rule__STForStatement__Group_4__1__Impl ;
    public final void rule__STForStatement__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5610:1: ( rule__STForStatement__Group_4__1__Impl )
            // InternalSTFunctionParser.g:5611:2: rule__STForStatement__Group_4__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1"


    // $ANTLR start "rule__STForStatement__Group_4__1__Impl"
    // InternalSTFunctionParser.g:5617:1: rule__STForStatement__Group_4__1__Impl : ( ( rule__STForStatement__ByAssignment_4_1 ) ) ;
    public final void rule__STForStatement__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5621:1: ( ( ( rule__STForStatement__ByAssignment_4_1 ) ) )
            // InternalSTFunctionParser.g:5622:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            {
            // InternalSTFunctionParser.g:5622:1: ( ( rule__STForStatement__ByAssignment_4_1 ) )
            // InternalSTFunctionParser.g:5623:2: ( rule__STForStatement__ByAssignment_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }
            // InternalSTFunctionParser.g:5624:2: ( rule__STForStatement__ByAssignment_4_1 )
            // InternalSTFunctionParser.g:5624:3: rule__STForStatement__ByAssignment_4_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_4__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTFunctionParser.g:5633:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5637:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTFunctionParser.g:5638:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_19);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5645:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5649:1: ( ( WHILE ) )
            // InternalSTFunctionParser.g:5650:1: ( WHILE )
            {
            // InternalSTFunctionParser.g:5650:1: ( WHILE )
            // InternalSTFunctionParser.g:5651:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTFunctionParser.g:5660:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5664:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTFunctionParser.g:5665:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_43);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5672:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5676:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5677:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5677:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:5678:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5679:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:5679:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTFunctionParser.g:5687:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5691:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTFunctionParser.g:5692:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_44);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5699:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5703:1: ( ( DO ) )
            // InternalSTFunctionParser.g:5704:1: ( DO )
            {
            // InternalSTFunctionParser.g:5704:1: ( DO )
            // InternalSTFunctionParser.g:5705:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTFunctionParser.g:5714:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5718:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTFunctionParser.g:5719:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_44);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5726:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5730:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:5731:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:5731:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:5732:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5733:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=LDATE_AND_TIME && LA60_0<=DATE_AND_TIME)||LA60_0==TIME_OF_DAY||LA60_0==CONTINUE||LA60_0==WSTRING||(LA60_0>=STRING && LA60_0<=DWORD)||(LA60_0>=LDATE && LA60_0<=WCHAR)||(LA60_0>=BOOL && LA60_0<=DINT)||(LA60_0>=FALSE && LA60_0<=UINT)||(LA60_0>=WHILE && LA60_0<=CASE)||(LA60_0>=EXIT && LA60_0<=LDT)||(LA60_0>=TOD && LA60_0<=TRUE)||(LA60_0>=DT && LA60_0<=LT)||LA60_0==D_2||LA60_0==IF||LA60_0==T||LA60_0==LeftParenthesis||LA60_0==PlusSign||LA60_0==HyphenMinus||LA60_0==Semicolon||(LA60_0>=RULE_NON_DECIMAL && LA60_0<=RULE_INT)||(LA60_0>=RULE_ID && LA60_0<=RULE_WSTRING)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5733:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTFunctionParser.g:5741:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5745:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTFunctionParser.g:5746:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5752:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5756:1: ( ( END_WHILE ) )
            // InternalSTFunctionParser.g:5757:1: ( END_WHILE )
            {
            // InternalSTFunctionParser.g:5757:1: ( END_WHILE )
            // InternalSTFunctionParser.g:5758:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTFunctionParser.g:5768:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5772:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTFunctionParser.g:5773:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_45);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5780:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5784:1: ( ( REPEAT ) )
            // InternalSTFunctionParser.g:5785:1: ( REPEAT )
            {
            // InternalSTFunctionParser.g:5785:1: ( REPEAT )
            // InternalSTFunctionParser.g:5786:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTFunctionParser.g:5795:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5799:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTFunctionParser.g:5800:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_45);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5807:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5811:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTFunctionParser.g:5812:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTFunctionParser.g:5812:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTFunctionParser.g:5813:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5814:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( ((LA61_0>=LDATE_AND_TIME && LA61_0<=DATE_AND_TIME)||LA61_0==TIME_OF_DAY||LA61_0==CONTINUE||LA61_0==WSTRING||(LA61_0>=STRING && LA61_0<=DWORD)||(LA61_0>=LDATE && LA61_0<=WCHAR)||(LA61_0>=BOOL && LA61_0<=DINT)||(LA61_0>=FALSE && LA61_0<=UINT)||(LA61_0>=WHILE && LA61_0<=CASE)||(LA61_0>=EXIT && LA61_0<=LDT)||(LA61_0>=TOD && LA61_0<=TRUE)||(LA61_0>=DT && LA61_0<=LT)||LA61_0==D_2||LA61_0==IF||LA61_0==T||LA61_0==LeftParenthesis||LA61_0==PlusSign||LA61_0==HyphenMinus||LA61_0==Semicolon||(LA61_0>=RULE_NON_DECIMAL && LA61_0<=RULE_INT)||(LA61_0>=RULE_ID && LA61_0<=RULE_WSTRING)) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5814:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTFunctionParser.g:5822:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5826:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTFunctionParser.g:5827:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_19);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5834:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5838:1: ( ( UNTIL ) )
            // InternalSTFunctionParser.g:5839:1: ( UNTIL )
            {
            // InternalSTFunctionParser.g:5839:1: ( UNTIL )
            // InternalSTFunctionParser.g:5840:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTFunctionParser.g:5849:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5853:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTFunctionParser.g:5854:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_46);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5861:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5865:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTFunctionParser.g:5866:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:5866:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTFunctionParser.g:5867:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5868:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTFunctionParser.g:5868:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTFunctionParser.g:5876:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5880:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTFunctionParser.g:5881:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5887:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5891:1: ( ( END_REPEAT ) )
            // InternalSTFunctionParser.g:5892:1: ( END_REPEAT )
            {
            // InternalSTFunctionParser.g:5892:1: ( END_REPEAT )
            // InternalSTFunctionParser.g:5893:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTFunctionParser.g:5903:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5907:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTFunctionParser.g:5908:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_47);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:5915:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5919:1: ( ( ruleSTOrExpression ) )
            // InternalSTFunctionParser.g:5920:1: ( ruleSTOrExpression )
            {
            // InternalSTFunctionParser.g:5920:1: ( ruleSTOrExpression )
            // InternalSTFunctionParser.g:5921:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTFunctionParser.g:5930:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5934:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:5935:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:5941:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5945:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:5946:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:5946:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:5947:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:5948:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==FullStopFullStop) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5948:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_48);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTFunctionParser.g:5957:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5961:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTFunctionParser.g:5962:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:5969:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5973:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:5974:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:5974:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:5975:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:5976:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:5976:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTFunctionParser.g:5984:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5988:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:5989:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:5995:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5999:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6000:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6000:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6001:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6002:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6002:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6011:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6015:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6016:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_47);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6023:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6027:1: ( ( () ) )
            // InternalSTFunctionParser.g:6028:1: ( () )
            {
            // InternalSTFunctionParser.g:6028:1: ( () )
            // InternalSTFunctionParser.g:6029:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6030:2: ()
            // InternalSTFunctionParser.g:6030:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6038:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6042:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6043:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6049:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6053:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6054:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6054:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6055:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6056:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6056:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTFunctionParser.g:6065:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6069:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTFunctionParser.g:6070:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_49);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6077:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6081:1: ( ( ruleSTXorExpression ) )
            // InternalSTFunctionParser.g:6082:1: ( ruleSTXorExpression )
            {
            // InternalSTFunctionParser.g:6082:1: ( ruleSTXorExpression )
            // InternalSTFunctionParser.g:6083:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTFunctionParser.g:6092:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6096:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6097:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6103:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6107:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6108:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6108:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6109:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6110:2: ( rule__STOrExpression__Group_1__0 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==OR) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6110:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_50);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTFunctionParser.g:6119:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6123:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6124:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6131:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6135:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6136:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6136:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6137:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6138:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6138:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTFunctionParser.g:6146:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6150:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6151:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6157:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6161:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6162:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6162:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6163:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6164:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6164:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6173:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6177:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6178:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_49);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6185:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6189:1: ( ( () ) )
            // InternalSTFunctionParser.g:6190:1: ( () )
            {
            // InternalSTFunctionParser.g:6190:1: ( () )
            // InternalSTFunctionParser.g:6191:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6192:2: ()
            // InternalSTFunctionParser.g:6192:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6200:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6204:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6205:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6211:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6215:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6216:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6216:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6217:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6218:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6218:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTFunctionParser.g:6227:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6231:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTFunctionParser.g:6232:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_51);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6239:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6243:1: ( ( ruleSTAndExpression ) )
            // InternalSTFunctionParser.g:6244:1: ( ruleSTAndExpression )
            {
            // InternalSTFunctionParser.g:6244:1: ( ruleSTAndExpression )
            // InternalSTFunctionParser.g:6245:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTFunctionParser.g:6254:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6258:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6259:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6265:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6269:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6270:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6270:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6271:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6272:2: ( rule__STXorExpression__Group_1__0 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==XOR) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6272:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_52);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTFunctionParser.g:6281:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6285:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6286:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6293:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6297:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6298:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6298:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6299:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6300:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6300:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTFunctionParser.g:6308:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6312:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6313:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6319:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6323:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6324:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6324:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6325:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6326:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6326:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6335:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6339:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6340:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_51);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6347:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6351:1: ( ( () ) )
            // InternalSTFunctionParser.g:6352:1: ( () )
            {
            // InternalSTFunctionParser.g:6352:1: ( () )
            // InternalSTFunctionParser.g:6353:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6354:2: ()
            // InternalSTFunctionParser.g:6354:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6362:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6366:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6367:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6373:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6377:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6378:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6378:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6379:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6380:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6380:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTFunctionParser.g:6389:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6393:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTFunctionParser.g:6394:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_53);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6401:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6405:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTFunctionParser.g:6406:1: ( ruleSTEqualityExpression )
            {
            // InternalSTFunctionParser.g:6406:1: ( ruleSTEqualityExpression )
            // InternalSTFunctionParser.g:6407:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTFunctionParser.g:6416:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6420:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6421:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6427:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6431:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6432:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6432:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6433:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6434:2: ( rule__STAndExpression__Group_1__0 )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==AND||LA65_0==Ampersand) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6434:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_54);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTFunctionParser.g:6443:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6447:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6448:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6455:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6459:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6460:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6460:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6461:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6462:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6462:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTFunctionParser.g:6470:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6474:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6475:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6481:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6485:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6486:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6486:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6487:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6488:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6488:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6497:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6501:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6502:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_53);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6509:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6513:1: ( ( () ) )
            // InternalSTFunctionParser.g:6514:1: ( () )
            {
            // InternalSTFunctionParser.g:6514:1: ( () )
            // InternalSTFunctionParser.g:6515:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6516:2: ()
            // InternalSTFunctionParser.g:6516:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6524:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6528:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6529:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6535:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6539:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6540:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6540:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6541:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6542:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6542:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTFunctionParser.g:6551:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6555:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTFunctionParser.g:6556:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_55);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6563:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6567:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTFunctionParser.g:6568:1: ( ruleSTComparisonExpression )
            {
            // InternalSTFunctionParser.g:6568:1: ( ruleSTComparisonExpression )
            // InternalSTFunctionParser.g:6569:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTFunctionParser.g:6578:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6582:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6583:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6589:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6593:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6594:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6594:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6595:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6596:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==LessThanSignGreaterThanSign||LA66_0==EqualsSign) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6596:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_56);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTFunctionParser.g:6605:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6609:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6610:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6617:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6621:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6622:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6622:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6623:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6624:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6624:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTFunctionParser.g:6632:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6636:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6637:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6643:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6647:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6648:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6648:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6649:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6650:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6650:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6659:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6663:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6664:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_55);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6671:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6675:1: ( ( () ) )
            // InternalSTFunctionParser.g:6676:1: ( () )
            {
            // InternalSTFunctionParser.g:6676:1: ( () )
            // InternalSTFunctionParser.g:6677:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6678:2: ()
            // InternalSTFunctionParser.g:6678:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6686:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6690:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6691:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6697:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6701:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6702:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6702:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6703:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6704:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6704:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTFunctionParser.g:6713:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6717:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTFunctionParser.g:6718:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_57);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6725:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6729:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTFunctionParser.g:6730:1: ( ruleSTAddSubExpression )
            {
            // InternalSTFunctionParser.g:6730:1: ( ruleSTAddSubExpression )
            // InternalSTFunctionParser.g:6731:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTFunctionParser.g:6740:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6744:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6745:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6751:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6755:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6756:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6756:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6757:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6758:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==LessThanSignEqualsSign||LA67_0==GreaterThanSignEqualsSign||LA67_0==LessThanSign||LA67_0==GreaterThanSign) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6758:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_58);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTFunctionParser.g:6767:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6771:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6772:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6779:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6783:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6784:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6784:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6785:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6786:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6786:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTFunctionParser.g:6794:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6798:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6799:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6805:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6809:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6810:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6810:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6811:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6812:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6812:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6821:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6825:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6826:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_57);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6833:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6837:1: ( ( () ) )
            // InternalSTFunctionParser.g:6838:1: ( () )
            {
            // InternalSTFunctionParser.g:6838:1: ( () )
            // InternalSTFunctionParser.g:6839:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6840:2: ()
            // InternalSTFunctionParser.g:6840:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6848:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6852:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6853:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6859:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6863:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6864:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6864:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6865:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6866:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6866:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTFunctionParser.g:6875:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6879:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTFunctionParser.g:6880:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_59);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6887:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6891:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTFunctionParser.g:6892:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTFunctionParser.g:6892:1: ( ruleSTMulDivModExpression )
            // InternalSTFunctionParser.g:6893:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTFunctionParser.g:6902:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6906:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6907:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6913:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6917:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6918:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6918:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6919:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6920:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( (LA68_0==PlusSign||LA68_0==HyphenMinus) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6920:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_60);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTFunctionParser.g:6929:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6933:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6934:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6941:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6945:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6946:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6946:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6947:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6948:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6948:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTFunctionParser.g:6956:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6960:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6961:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6967:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6971:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6972:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6972:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6973:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6974:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6974:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6983:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6987:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6988:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_59);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6995:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6999:1: ( ( () ) )
            // InternalSTFunctionParser.g:7000:1: ( () )
            {
            // InternalSTFunctionParser.g:7000:1: ( () )
            // InternalSTFunctionParser.g:7001:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7002:2: ()
            // InternalSTFunctionParser.g:7002:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7010:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7014:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7015:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7021:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7025:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7026:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7026:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7027:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7028:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7028:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTFunctionParser.g:7037:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7041:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTFunctionParser.g:7042:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_61);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7049:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7053:1: ( ( ruleSTPowerExpression ) )
            // InternalSTFunctionParser.g:7054:1: ( ruleSTPowerExpression )
            {
            // InternalSTFunctionParser.g:7054:1: ( ruleSTPowerExpression )
            // InternalSTFunctionParser.g:7055:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTFunctionParser.g:7064:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7068:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7069:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7075:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7079:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7080:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7080:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7081:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7082:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==MOD||LA69_0==Asterisk||LA69_0==Solidus) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7082:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_62);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTFunctionParser.g:7091:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7095:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7096:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7103:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7107:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7108:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7108:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7109:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7110:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7110:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTFunctionParser.g:7118:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7122:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7123:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7129:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7133:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7134:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7134:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7135:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7136:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7136:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7145:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7149:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7150:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_61);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7157:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7161:1: ( ( () ) )
            // InternalSTFunctionParser.g:7162:1: ( () )
            {
            // InternalSTFunctionParser.g:7162:1: ( () )
            // InternalSTFunctionParser.g:7163:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7164:2: ()
            // InternalSTFunctionParser.g:7164:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7172:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7176:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7177:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7183:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7187:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7188:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7188:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7189:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7190:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7190:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTFunctionParser.g:7199:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7203:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTFunctionParser.g:7204:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_63);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7211:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7215:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:7216:1: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:7216:1: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:7217:2: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTFunctionParser.g:7226:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7230:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7231:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7237:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7241:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7242:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7242:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7243:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7244:2: ( rule__STPowerExpression__Group_1__0 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==AsteriskAsterisk) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7244:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_64);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTFunctionParser.g:7253:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7257:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7258:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7265:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7269:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7270:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7270:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7271:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7272:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7272:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTFunctionParser.g:7280:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7284:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7285:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7291:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7295:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7296:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7296:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7297:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7298:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7298:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7307:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7311:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7312:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_63);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7319:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7323:1: ( ( () ) )
            // InternalSTFunctionParser.g:7324:1: ( () )
            {
            // InternalSTFunctionParser.g:7324:1: ( () )
            // InternalSTFunctionParser.g:7325:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7326:2: ()
            // InternalSTFunctionParser.g:7326:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7334:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7338:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7339:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7345:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7349:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7350:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7350:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7351:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7352:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7352:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0"
    // InternalSTFunctionParser.g:7361:1: rule__STUnaryExpression__Group_1__0 : rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 ;
    public final void rule__STUnaryExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7365:1: ( rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7366:2: rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STUnaryExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7373:1: rule__STUnaryExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STUnaryExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7377:1: ( ( () ) )
            // InternalSTFunctionParser.g:7378:1: ( () )
            {
            // InternalSTFunctionParser.g:7378:1: ( () )
            // InternalSTFunctionParser.g:7379:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }
            // InternalSTFunctionParser.g:7380:2: ()
            // InternalSTFunctionParser.g:7380:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1"
    // InternalSTFunctionParser.g:7388:1: rule__STUnaryExpression__Group_1__1 : rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 ;
    public final void rule__STUnaryExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7392:1: ( rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 )
            // InternalSTFunctionParser.g:7393:2: rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2
            {
            pushFollow(FOLLOW_19);
            rule__STUnaryExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7400:1: rule__STUnaryExpression__Group_1__1__Impl : ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) ;
    public final void rule__STUnaryExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7404:1: ( ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7405:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7405:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7406:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7407:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            // InternalSTFunctionParser.g:7407:3: rule__STUnaryExpression__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2"
    // InternalSTFunctionParser.g:7415:1: rule__STUnaryExpression__Group_1__2 : rule__STUnaryExpression__Group_1__2__Impl ;
    public final void rule__STUnaryExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7419:1: ( rule__STUnaryExpression__Group_1__2__Impl )
            // InternalSTFunctionParser.g:7420:2: rule__STUnaryExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2__Impl"
    // InternalSTFunctionParser.g:7426:1: rule__STUnaryExpression__Group_1__2__Impl : ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) ;
    public final void rule__STUnaryExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7430:1: ( ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) )
            // InternalSTFunctionParser.g:7431:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            {
            // InternalSTFunctionParser.g:7431:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            // InternalSTFunctionParser.g:7432:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }
            // InternalSTFunctionParser.g:7433:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            // InternalSTFunctionParser.g:7433:3: rule__STUnaryExpression__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__ExpressionAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__0"
    // InternalSTFunctionParser.g:7442:1: rule__STAccessExpression__Group__0 : rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 ;
    public final void rule__STAccessExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7446:1: ( rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 )
            // InternalSTFunctionParser.g:7447:2: rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1
            {
            pushFollow(FOLLOW_65);
            rule__STAccessExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0"


    // $ANTLR start "rule__STAccessExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7454:1: rule__STAccessExpression__Group__0__Impl : ( ruleSTPrimaryExpression ) ;
    public final void rule__STAccessExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7458:1: ( ( ruleSTPrimaryExpression ) )
            // InternalSTFunctionParser.g:7459:1: ( ruleSTPrimaryExpression )
            {
            // InternalSTFunctionParser.g:7459:1: ( ruleSTPrimaryExpression )
            // InternalSTFunctionParser.g:7460:2: ruleSTPrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__1"
    // InternalSTFunctionParser.g:7469:1: rule__STAccessExpression__Group__1 : rule__STAccessExpression__Group__1__Impl ;
    public final void rule__STAccessExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7473:1: ( rule__STAccessExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7474:2: rule__STAccessExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1"


    // $ANTLR start "rule__STAccessExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7480:1: rule__STAccessExpression__Group__1__Impl : ( ( rule__STAccessExpression__Alternatives_1 )* ) ;
    public final void rule__STAccessExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7484:1: ( ( ( rule__STAccessExpression__Alternatives_1 )* ) )
            // InternalSTFunctionParser.g:7485:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            {
            // InternalSTFunctionParser.g:7485:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            // InternalSTFunctionParser.g:7486:2: ( rule__STAccessExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }
            // InternalSTFunctionParser.g:7487:2: ( rule__STAccessExpression__Alternatives_1 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==FullStop||LA71_0==LeftSquareBracket) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7487:3: rule__STAccessExpression__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_66);
            	    rule__STAccessExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7496:1: rule__STAccessExpression__Group_1_0__0 : rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 ;
    public final void rule__STAccessExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7500:1: ( rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7501:2: rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_67);
            rule__STAccessExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7508:1: rule__STAccessExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7512:1: ( ( () ) )
            // InternalSTFunctionParser.g:7513:1: ( () )
            {
            // InternalSTFunctionParser.g:7513:1: ( () )
            // InternalSTFunctionParser.g:7514:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7515:2: ()
            // InternalSTFunctionParser.g:7515:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7523:1: rule__STAccessExpression__Group_1_0__1 : rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 ;
    public final void rule__STAccessExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7527:1: ( rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 )
            // InternalSTFunctionParser.g:7528:2: rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2
            {
            pushFollow(FOLLOW_68);
            rule__STAccessExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7535:1: rule__STAccessExpression__Group_1_0__1__Impl : ( FullStop ) ;
    public final void rule__STAccessExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7539:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:7540:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:7540:1: ( FullStop )
            // InternalSTFunctionParser.g:7541:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2"
    // InternalSTFunctionParser.g:7550:1: rule__STAccessExpression__Group_1_0__2 : rule__STAccessExpression__Group_1_0__2__Impl ;
    public final void rule__STAccessExpression__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7554:1: ( rule__STAccessExpression__Group_1_0__2__Impl )
            // InternalSTFunctionParser.g:7555:2: rule__STAccessExpression__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2__Impl"
    // InternalSTFunctionParser.g:7561:1: rule__STAccessExpression__Group_1_0__2__Impl : ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7565:1: ( ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) )
            // InternalSTFunctionParser.g:7566:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            {
            // InternalSTFunctionParser.g:7566:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            // InternalSTFunctionParser.g:7567:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }
            // InternalSTFunctionParser.g:7568:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            // InternalSTFunctionParser.g:7568:3: rule__STAccessExpression__MemberAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0"
    // InternalSTFunctionParser.g:7577:1: rule__STAccessExpression__Group_1_1__0 : rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 ;
    public final void rule__STAccessExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7581:1: ( rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 )
            // InternalSTFunctionParser.g:7582:2: rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_65);
            rule__STAccessExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0__Impl"
    // InternalSTFunctionParser.g:7589:1: rule__STAccessExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7593:1: ( ( () ) )
            // InternalSTFunctionParser.g:7594:1: ( () )
            {
            // InternalSTFunctionParser.g:7594:1: ( () )
            // InternalSTFunctionParser.g:7595:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }
            // InternalSTFunctionParser.g:7596:2: ()
            // InternalSTFunctionParser.g:7596:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1"
    // InternalSTFunctionParser.g:7604:1: rule__STAccessExpression__Group_1_1__1 : rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 ;
    public final void rule__STAccessExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7608:1: ( rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 )
            // InternalSTFunctionParser.g:7609:2: rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2
            {
            pushFollow(FOLLOW_19);
            rule__STAccessExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1__Impl"
    // InternalSTFunctionParser.g:7616:1: rule__STAccessExpression__Group_1_1__1__Impl : ( LeftSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7620:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:7621:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:7621:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:7622:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2"
    // InternalSTFunctionParser.g:7631:1: rule__STAccessExpression__Group_1_1__2 : rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 ;
    public final void rule__STAccessExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7635:1: ( rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 )
            // InternalSTFunctionParser.g:7636:2: rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3
            {
            pushFollow(FOLLOW_20);
            rule__STAccessExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2__Impl"
    // InternalSTFunctionParser.g:7643:1: rule__STAccessExpression__Group_1_1__2__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7647:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) )
            // InternalSTFunctionParser.g:7648:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            {
            // InternalSTFunctionParser.g:7648:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            // InternalSTFunctionParser.g:7649:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }
            // InternalSTFunctionParser.g:7650:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            // InternalSTFunctionParser.g:7650:3: rule__STAccessExpression__IndexAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3"
    // InternalSTFunctionParser.g:7658:1: rule__STAccessExpression__Group_1_1__3 : rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 ;
    public final void rule__STAccessExpression__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7662:1: ( rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 )
            // InternalSTFunctionParser.g:7663:2: rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4
            {
            pushFollow(FOLLOW_20);
            rule__STAccessExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3__Impl"
    // InternalSTFunctionParser.g:7670:1: rule__STAccessExpression__Group_1_1__3__Impl : ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) ;
    public final void rule__STAccessExpression__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7674:1: ( ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) )
            // InternalSTFunctionParser.g:7675:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            {
            // InternalSTFunctionParser.g:7675:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            // InternalSTFunctionParser.g:7676:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }
            // InternalSTFunctionParser.g:7677:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==Comma) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7677:3: rule__STAccessExpression__Group_1_1_3__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STAccessExpression__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4"
    // InternalSTFunctionParser.g:7685:1: rule__STAccessExpression__Group_1_1__4 : rule__STAccessExpression__Group_1_1__4__Impl ;
    public final void rule__STAccessExpression__Group_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7689:1: ( rule__STAccessExpression__Group_1_1__4__Impl )
            // InternalSTFunctionParser.g:7690:2: rule__STAccessExpression__Group_1_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4__Impl"
    // InternalSTFunctionParser.g:7696:1: rule__STAccessExpression__Group_1_1__4__Impl : ( RightSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7700:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:7701:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:7701:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:7702:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0"
    // InternalSTFunctionParser.g:7712:1: rule__STAccessExpression__Group_1_1_3__0 : rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 ;
    public final void rule__STAccessExpression__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7716:1: ( rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 )
            // InternalSTFunctionParser.g:7717:2: rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1
            {
            pushFollow(FOLLOW_19);
            rule__STAccessExpression__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0__Impl"
    // InternalSTFunctionParser.g:7724:1: rule__STAccessExpression__Group_1_1_3__0__Impl : ( Comma ) ;
    public final void rule__STAccessExpression__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7728:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:7729:1: ( Comma )
            {
            // InternalSTFunctionParser.g:7729:1: ( Comma )
            // InternalSTFunctionParser.g:7730:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1"
    // InternalSTFunctionParser.g:7739:1: rule__STAccessExpression__Group_1_1_3__1 : rule__STAccessExpression__Group_1_1_3__1__Impl ;
    public final void rule__STAccessExpression__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7743:1: ( rule__STAccessExpression__Group_1_1_3__1__Impl )
            // InternalSTFunctionParser.g:7744:2: rule__STAccessExpression__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1__Impl"
    // InternalSTFunctionParser.g:7750:1: rule__STAccessExpression__Group_1_1_3__1__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) ;
    public final void rule__STAccessExpression__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7754:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) )
            // InternalSTFunctionParser.g:7755:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            {
            // InternalSTFunctionParser.g:7755:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            // InternalSTFunctionParser.g:7756:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }
            // InternalSTFunctionParser.g:7757:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            // InternalSTFunctionParser.g:7757:3: rule__STAccessExpression__IndexAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0"
    // InternalSTFunctionParser.g:7766:1: rule__STPrimaryExpression__Group_0__0 : rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 ;
    public final void rule__STPrimaryExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7770:1: ( rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 )
            // InternalSTFunctionParser.g:7771:2: rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1
            {
            pushFollow(FOLLOW_19);
            rule__STPrimaryExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0__Impl"
    // InternalSTFunctionParser.g:7778:1: rule__STPrimaryExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7782:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:7783:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:7783:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:7784:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1"
    // InternalSTFunctionParser.g:7793:1: rule__STPrimaryExpression__Group_0__1 : rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 ;
    public final void rule__STPrimaryExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7797:1: ( rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 )
            // InternalSTFunctionParser.g:7798:2: rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2
            {
            pushFollow(FOLLOW_26);
            rule__STPrimaryExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1__Impl"
    // InternalSTFunctionParser.g:7805:1: rule__STPrimaryExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STPrimaryExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7809:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:7810:1: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:7810:1: ( ruleSTExpression )
            // InternalSTFunctionParser.g:7811:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2"
    // InternalSTFunctionParser.g:7820:1: rule__STPrimaryExpression__Group_0__2 : rule__STPrimaryExpression__Group_0__2__Impl ;
    public final void rule__STPrimaryExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7824:1: ( rule__STPrimaryExpression__Group_0__2__Impl )
            // InternalSTFunctionParser.g:7825:2: rule__STPrimaryExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2__Impl"
    // InternalSTFunctionParser.g:7831:1: rule__STPrimaryExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7835:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:7836:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:7836:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:7837:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__0"
    // InternalSTFunctionParser.g:7847:1: rule__STFeatureExpression__Group__0 : rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 ;
    public final void rule__STFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7851:1: ( rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 )
            // InternalSTFunctionParser.g:7852:2: rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__STFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0"


    // $ANTLR start "rule__STFeatureExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7859:1: rule__STFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7863:1: ( ( () ) )
            // InternalSTFunctionParser.g:7864:1: ( () )
            {
            // InternalSTFunctionParser.g:7864:1: ( () )
            // InternalSTFunctionParser.g:7865:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }
            // InternalSTFunctionParser.g:7866:2: ()
            // InternalSTFunctionParser.g:7866:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__1"
    // InternalSTFunctionParser.g:7874:1: rule__STFeatureExpression__Group__1 : rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 ;
    public final void rule__STFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7878:1: ( rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 )
            // InternalSTFunctionParser.g:7879:2: rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_25);
            rule__STFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1"


    // $ANTLR start "rule__STFeatureExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7886:1: rule__STFeatureExpression__Group__1__Impl : ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7890:1: ( ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalSTFunctionParser.g:7891:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:7891:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            // InternalSTFunctionParser.g:7892:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalSTFunctionParser.g:7893:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            // InternalSTFunctionParser.g:7893:3: rule__STFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__2"
    // InternalSTFunctionParser.g:7901:1: rule__STFeatureExpression__Group__2 : rule__STFeatureExpression__Group__2__Impl ;
    public final void rule__STFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7905:1: ( rule__STFeatureExpression__Group__2__Impl )
            // InternalSTFunctionParser.g:7906:2: rule__STFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2"


    // $ANTLR start "rule__STFeatureExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:7912:1: rule__STFeatureExpression__Group__2__Impl : ( ( rule__STFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7916:1: ( ( ( rule__STFeatureExpression__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:7917:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:7917:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            // InternalSTFunctionParser.g:7918:2: ( rule__STFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:7919:2: ( rule__STFeatureExpression__Group_2__0 )?
            int alt73=2;
            alt73 = dfa73.predict(input);
            switch (alt73) {
                case 1 :
                    // InternalSTFunctionParser.g:7919:3: rule__STFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0"
    // InternalSTFunctionParser.g:7928:1: rule__STFeatureExpression__Group_2__0 : rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 ;
    public final void rule__STFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7932:1: ( rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 )
            // InternalSTFunctionParser.g:7933:2: rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_69);
            rule__STFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:7940:1: rule__STFeatureExpression__Group_2__0__Impl : ( ( LeftParenthesis ) ) ;
    public final void rule__STFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7944:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTFunctionParser.g:7945:1: ( ( LeftParenthesis ) )
            {
            // InternalSTFunctionParser.g:7945:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:7946:2: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getLeftParenthesisKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:7947:2: ( LeftParenthesis )
            // InternalSTFunctionParser.g:7947:3: LeftParenthesis
            {
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1"
    // InternalSTFunctionParser.g:7955:1: rule__STFeatureExpression__Group_2__1 : rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 ;
    public final void rule__STFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7959:1: ( rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 )
            // InternalSTFunctionParser.g:7960:2: rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_69);
            rule__STFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:7967:1: rule__STFeatureExpression__Group_2__1__Impl : ( ( rule__STFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7971:1: ( ( ( rule__STFeatureExpression__Group_2_1__0 )? ) )
            // InternalSTFunctionParser.g:7972:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            {
            // InternalSTFunctionParser.g:7972:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            // InternalSTFunctionParser.g:7973:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalSTFunctionParser.g:7974:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            int alt74=2;
            int LA74_0 = input.LA(1);

            if ( ((LA74_0>=LDATE_AND_TIME && LA74_0<=DATE_AND_TIME)||LA74_0==TIME_OF_DAY||LA74_0==WSTRING||(LA74_0>=STRING && LA74_0<=DWORD)||(LA74_0>=LDATE && LA74_0<=LWORD)||(LA74_0>=UDINT && LA74_0<=WCHAR)||(LA74_0>=BOOL && LA74_0<=DINT)||(LA74_0>=FALSE && LA74_0<=UINT)||LA74_0==WORD||(LA74_0>=INT && LA74_0<=LDT)||(LA74_0>=TOD && LA74_0<=TRUE)||LA74_0==DT||(LA74_0>=LD && LA74_0<=LT)||LA74_0==NOT||LA74_0==D_2||LA74_0==T||LA74_0==LeftParenthesis||LA74_0==PlusSign||LA74_0==HyphenMinus||(LA74_0>=RULE_NON_DECIMAL && LA74_0<=RULE_INT)||(LA74_0>=RULE_ID && LA74_0<=RULE_WSTRING)) ) {
                alt74=1;
            }
            switch (alt74) {
                case 1 :
                    // InternalSTFunctionParser.g:7974:3: rule__STFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2"
    // InternalSTFunctionParser.g:7982:1: rule__STFeatureExpression__Group_2__2 : rule__STFeatureExpression__Group_2__2__Impl ;
    public final void rule__STFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7986:1: ( rule__STFeatureExpression__Group_2__2__Impl )
            // InternalSTFunctionParser.g:7987:2: rule__STFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2__Impl"
    // InternalSTFunctionParser.g:7993:1: rule__STFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7997:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:7998:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:7998:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:7999:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0"
    // InternalSTFunctionParser.g:8009:1: rule__STFeatureExpression__Group_2_1__0 : rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8013:1: ( rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 )
            // InternalSTFunctionParser.g:8014:2: rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_70);
            rule__STFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0__Impl"
    // InternalSTFunctionParser.g:8021:1: rule__STFeatureExpression__Group_2_1__0__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8025:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalSTFunctionParser.g:8026:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalSTFunctionParser.g:8026:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalSTFunctionParser.g:8027:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalSTFunctionParser.g:8028:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalSTFunctionParser.g:8028:3: rule__STFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1"
    // InternalSTFunctionParser.g:8036:1: rule__STFeatureExpression__Group_2_1__1 : rule__STFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8040:1: ( rule__STFeatureExpression__Group_2_1__1__Impl )
            // InternalSTFunctionParser.g:8041:2: rule__STFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1__Impl"
    // InternalSTFunctionParser.g:8047:1: rule__STFeatureExpression__Group_2_1__1__Impl : ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8051:1: ( ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalSTFunctionParser.g:8052:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalSTFunctionParser.g:8052:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            // InternalSTFunctionParser.g:8053:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalSTFunctionParser.g:8054:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==Comma) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8054:3: rule__STFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_21);
            	    rule__STFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0"
    // InternalSTFunctionParser.g:8063:1: rule__STFeatureExpression__Group_2_1_1__0 : rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8067:1: ( rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 )
            // InternalSTFunctionParser.g:8068:2: rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_19);
            rule__STFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0__Impl"
    // InternalSTFunctionParser.g:8075:1: rule__STFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8079:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:8080:1: ( Comma )
            {
            // InternalSTFunctionParser.g:8080:1: ( Comma )
            // InternalSTFunctionParser.g:8081:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1"
    // InternalSTFunctionParser.g:8090:1: rule__STFeatureExpression__Group_2_1_1__1 : rule__STFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8094:1: ( rule__STFeatureExpression__Group_2_1_1__1__Impl )
            // InternalSTFunctionParser.g:8095:2: rule__STFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1__Impl"
    // InternalSTFunctionParser.g:8101:1: rule__STFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8105:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalSTFunctionParser.g:8106:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:8106:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalSTFunctionParser.g:8107:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalSTFunctionParser.g:8108:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalSTFunctionParser.g:8108:3: rule__STFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0"
    // InternalSTFunctionParser.g:8117:1: rule__STMultibitPartialExpression__Group__0 : rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 ;
    public final void rule__STMultibitPartialExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8121:1: ( rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 )
            // InternalSTFunctionParser.g:8122:2: rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__STMultibitPartialExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:8129:1: rule__STMultibitPartialExpression__Group__0__Impl : ( () ) ;
    public final void rule__STMultibitPartialExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8133:1: ( ( () ) )
            // InternalSTFunctionParser.g:8134:1: ( () )
            {
            // InternalSTFunctionParser.g:8134:1: ( () )
            // InternalSTFunctionParser.g:8135:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }
            // InternalSTFunctionParser.g:8136:2: ()
            // InternalSTFunctionParser.g:8136:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1"
    // InternalSTFunctionParser.g:8144:1: rule__STMultibitPartialExpression__Group__1 : rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 ;
    public final void rule__STMultibitPartialExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8148:1: ( rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 )
            // InternalSTFunctionParser.g:8149:2: rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2
            {
            pushFollow(FOLLOW_68);
            rule__STMultibitPartialExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:8156:1: rule__STMultibitPartialExpression__Group__1__Impl : ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) ;
    public final void rule__STMultibitPartialExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8160:1: ( ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) )
            // InternalSTFunctionParser.g:8161:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            {
            // InternalSTFunctionParser.g:8161:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            // InternalSTFunctionParser.g:8162:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8163:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            int alt76=2;
            int LA76_0 = input.LA(1);

            if ( ((LA76_0>=B && LA76_0<=X)) ) {
                alt76=1;
            }
            switch (alt76) {
                case 1 :
                    // InternalSTFunctionParser.g:8163:3: rule__STMultibitPartialExpression__SpecifierAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__SpecifierAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2"
    // InternalSTFunctionParser.g:8171:1: rule__STMultibitPartialExpression__Group__2 : rule__STMultibitPartialExpression__Group__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8175:1: ( rule__STMultibitPartialExpression__Group__2__Impl )
            // InternalSTFunctionParser.g:8176:2: rule__STMultibitPartialExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:8182:1: rule__STMultibitPartialExpression__Group__2__Impl : ( ( rule__STMultibitPartialExpression__IndexAssignment_2 ) ) ;
    public final void rule__STMultibitPartialExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8186:1: ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2 ) ) )
            // InternalSTFunctionParser.g:8187:1: ( ( rule__STMultibitPartialExpression__IndexAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:8187:1: ( ( rule__STMultibitPartialExpression__IndexAssignment_2 ) )
            // InternalSTFunctionParser.g:8188:2: ( rule__STMultibitPartialExpression__IndexAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2()); 
            }
            // InternalSTFunctionParser.g:8189:2: ( rule__STMultibitPartialExpression__IndexAssignment_2 )
            // InternalSTFunctionParser.g:8189:3: rule__STMultibitPartialExpression__IndexAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__IndexAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__0"
    // InternalSTFunctionParser.g:8198:1: rule__STNumericLiteral__Group__0 : rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 ;
    public final void rule__STNumericLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8202:1: ( rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 )
            // InternalSTFunctionParser.g:8203:2: rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__STNumericLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0"


    // $ANTLR start "rule__STNumericLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:8210:1: rule__STNumericLiteral__Group__0__Impl : ( ( rule__STNumericLiteral__TypeAssignment_0 )? ) ;
    public final void rule__STNumericLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8214:1: ( ( ( rule__STNumericLiteral__TypeAssignment_0 )? ) )
            // InternalSTFunctionParser.g:8215:1: ( ( rule__STNumericLiteral__TypeAssignment_0 )? )
            {
            // InternalSTFunctionParser.g:8215:1: ( ( rule__STNumericLiteral__TypeAssignment_0 )? )
            // InternalSTFunctionParser.g:8216:2: ( rule__STNumericLiteral__TypeAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8217:2: ( rule__STNumericLiteral__TypeAssignment_0 )?
            int alt77=2;
            int LA77_0 = input.LA(1);

            if ( (LA77_0==DWORD||LA77_0==LREAL||LA77_0==LWORD||(LA77_0>=UDINT && LA77_0<=USINT)||(LA77_0>=BOOL && LA77_0<=BYTE)||LA77_0==DINT||LA77_0==LINT||(LA77_0>=REAL && LA77_0<=SINT)||LA77_0==UINT||LA77_0==WORD||LA77_0==INT) ) {
                alt77=1;
            }
            switch (alt77) {
                case 1 :
                    // InternalSTFunctionParser.g:8217:3: rule__STNumericLiteral__TypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STNumericLiteral__TypeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__1"
    // InternalSTFunctionParser.g:8225:1: rule__STNumericLiteral__Group__1 : rule__STNumericLiteral__Group__1__Impl ;
    public final void rule__STNumericLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8229:1: ( rule__STNumericLiteral__Group__1__Impl )
            // InternalSTFunctionParser.g:8230:2: rule__STNumericLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1"


    // $ANTLR start "rule__STNumericLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:8236:1: rule__STNumericLiteral__Group__1__Impl : ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STNumericLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8240:1: ( ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8241:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8241:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8242:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8243:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            // InternalSTFunctionParser.g:8243:3: rule__STNumericLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__0"
    // InternalSTFunctionParser.g:8252:1: rule__STDateLiteral__Group__0 : rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 ;
    public final void rule__STDateLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8256:1: ( rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 )
            // InternalSTFunctionParser.g:8257:2: rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__STDateLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0"


    // $ANTLR start "rule__STDateLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:8264:1: rule__STDateLiteral__Group__0__Impl : ( ( rule__STDateLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8268:1: ( ( ( rule__STDateLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:8269:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:8269:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:8270:2: ( rule__STDateLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8271:2: ( rule__STDateLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:8271:3: rule__STDateLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__1"
    // InternalSTFunctionParser.g:8279:1: rule__STDateLiteral__Group__1 : rule__STDateLiteral__Group__1__Impl ;
    public final void rule__STDateLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8283:1: ( rule__STDateLiteral__Group__1__Impl )
            // InternalSTFunctionParser.g:8284:2: rule__STDateLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1"


    // $ANTLR start "rule__STDateLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:8290:1: rule__STDateLiteral__Group__1__Impl : ( ( rule__STDateLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STDateLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8294:1: ( ( ( rule__STDateLiteral__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8295:1: ( ( rule__STDateLiteral__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8295:1: ( ( rule__STDateLiteral__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8296:2: ( rule__STDateLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8297:2: ( rule__STDateLiteral__ValueAssignment_1 )
            // InternalSTFunctionParser.g:8297:3: rule__STDateLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__0"
    // InternalSTFunctionParser.g:8306:1: rule__STTimeLiteral__Group__0 : rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 ;
    public final void rule__STTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8310:1: ( rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 )
            // InternalSTFunctionParser.g:8311:2: rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__STTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0"


    // $ANTLR start "rule__STTimeLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:8318:1: rule__STTimeLiteral__Group__0__Impl : ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8322:1: ( ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:8323:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:8323:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:8324:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8325:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:8325:3: rule__STTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__1"
    // InternalSTFunctionParser.g:8333:1: rule__STTimeLiteral__Group__1 : rule__STTimeLiteral__Group__1__Impl ;
    public final void rule__STTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8337:1: ( rule__STTimeLiteral__Group__1__Impl )
            // InternalSTFunctionParser.g:8338:2: rule__STTimeLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1"


    // $ANTLR start "rule__STTimeLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:8344:1: rule__STTimeLiteral__Group__1__Impl : ( ( rule__STTimeLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8348:1: ( ( ( rule__STTimeLiteral__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8349:1: ( ( rule__STTimeLiteral__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8349:1: ( ( rule__STTimeLiteral__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8350:2: ( rule__STTimeLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8351:2: ( rule__STTimeLiteral__ValueAssignment_1 )
            // InternalSTFunctionParser.g:8351:3: rule__STTimeLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0"
    // InternalSTFunctionParser.g:8360:1: rule__STTimeOfDayLiteral__Group__0 : rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 ;
    public final void rule__STTimeOfDayLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8364:1: ( rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 )
            // InternalSTFunctionParser.g:8365:2: rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__STTimeOfDayLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:8372:1: rule__STTimeOfDayLiteral__Group__0__Impl : ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8376:1: ( ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:8377:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:8377:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:8378:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8379:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:8379:3: rule__STTimeOfDayLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1"
    // InternalSTFunctionParser.g:8387:1: rule__STTimeOfDayLiteral__Group__1 : rule__STTimeOfDayLiteral__Group__1__Impl ;
    public final void rule__STTimeOfDayLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8391:1: ( rule__STTimeOfDayLiteral__Group__1__Impl )
            // InternalSTFunctionParser.g:8392:2: rule__STTimeOfDayLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:8398:1: rule__STTimeOfDayLiteral__Group__1__Impl : ( ( rule__STTimeOfDayLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8402:1: ( ( ( rule__STTimeOfDayLiteral__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8403:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8403:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8404:2: ( rule__STTimeOfDayLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8405:2: ( rule__STTimeOfDayLiteral__ValueAssignment_1 )
            // InternalSTFunctionParser.g:8405:3: rule__STTimeOfDayLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0"
    // InternalSTFunctionParser.g:8414:1: rule__STDateAndTimeLiteral__Group__0 : rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 ;
    public final void rule__STDateAndTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8418:1: ( rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 )
            // InternalSTFunctionParser.g:8419:2: rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_72);
            rule__STDateAndTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:8426:1: rule__STDateAndTimeLiteral__Group__0__Impl : ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8430:1: ( ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:8431:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:8431:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:8432:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8433:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:8433:3: rule__STDateAndTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1"
    // InternalSTFunctionParser.g:8441:1: rule__STDateAndTimeLiteral__Group__1 : rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 ;
    public final void rule__STDateAndTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8445:1: ( rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 )
            // InternalSTFunctionParser.g:8446:2: rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_74);
            rule__STDateAndTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:8453:1: rule__STDateAndTimeLiteral__Group__1__Impl : ( ( rule__STDateAndTimeLiteral__DateValueAssignment_1 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8457:1: ( ( ( rule__STDateAndTimeLiteral__DateValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8458:1: ( ( rule__STDateAndTimeLiteral__DateValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8458:1: ( ( rule__STDateAndTimeLiteral__DateValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8459:2: ( rule__STDateAndTimeLiteral__DateValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getDateValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8460:2: ( rule__STDateAndTimeLiteral__DateValueAssignment_1 )
            // InternalSTFunctionParser.g:8460:3: rule__STDateAndTimeLiteral__DateValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__DateValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getDateValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2"
    // InternalSTFunctionParser.g:8468:1: rule__STDateAndTimeLiteral__Group__2 : rule__STDateAndTimeLiteral__Group__2__Impl rule__STDateAndTimeLiteral__Group__3 ;
    public final void rule__STDateAndTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8472:1: ( rule__STDateAndTimeLiteral__Group__2__Impl rule__STDateAndTimeLiteral__Group__3 )
            // InternalSTFunctionParser.g:8473:2: rule__STDateAndTimeLiteral__Group__2__Impl rule__STDateAndTimeLiteral__Group__3
            {
            pushFollow(FOLLOW_72);
            rule__STDateAndTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:8480:1: rule__STDateAndTimeLiteral__Group__2__Impl : ( HyphenMinus ) ;
    public final void rule__STDateAndTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8484:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:8485:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:8485:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:8486:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getHyphenMinusKeyword_2()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getHyphenMinusKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__3"
    // InternalSTFunctionParser.g:8495:1: rule__STDateAndTimeLiteral__Group__3 : rule__STDateAndTimeLiteral__Group__3__Impl ;
    public final void rule__STDateAndTimeLiteral__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8499:1: ( rule__STDateAndTimeLiteral__Group__3__Impl )
            // InternalSTFunctionParser.g:8500:2: rule__STDateAndTimeLiteral__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__3"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__3__Impl"
    // InternalSTFunctionParser.g:8506:1: rule__STDateAndTimeLiteral__Group__3__Impl : ( ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8510:1: ( ( ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3 ) ) )
            // InternalSTFunctionParser.g:8511:1: ( ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:8511:1: ( ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3 ) )
            // InternalSTFunctionParser.g:8512:2: ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTimeOfDayValueAssignment_3()); 
            }
            // InternalSTFunctionParser.g:8513:2: ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3 )
            // InternalSTFunctionParser.g:8513:3: rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTimeOfDayValueAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__3__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__0"
    // InternalSTFunctionParser.g:8522:1: rule__STStringLiteral__Group__0 : rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 ;
    public final void rule__STStringLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8526:1: ( rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 )
            // InternalSTFunctionParser.g:8527:2: rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__STStringLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0"


    // $ANTLR start "rule__STStringLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:8534:1: rule__STStringLiteral__Group__0__Impl : ( ( rule__STStringLiteral__TypeAssignment_0 )? ) ;
    public final void rule__STStringLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8538:1: ( ( ( rule__STStringLiteral__TypeAssignment_0 )? ) )
            // InternalSTFunctionParser.g:8539:1: ( ( rule__STStringLiteral__TypeAssignment_0 )? )
            {
            // InternalSTFunctionParser.g:8539:1: ( ( rule__STStringLiteral__TypeAssignment_0 )? )
            // InternalSTFunctionParser.g:8540:2: ( rule__STStringLiteral__TypeAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:8541:2: ( rule__STStringLiteral__TypeAssignment_0 )?
            int alt78=2;
            int LA78_0 = input.LA(1);

            if ( (LA78_0==WSTRING||LA78_0==STRING||LA78_0==WCHAR||LA78_0==CHAR) ) {
                alt78=1;
            }
            switch (alt78) {
                case 1 :
                    // InternalSTFunctionParser.g:8541:3: rule__STStringLiteral__TypeAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStringLiteral__TypeAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__1"
    // InternalSTFunctionParser.g:8549:1: rule__STStringLiteral__Group__1 : rule__STStringLiteral__Group__1__Impl ;
    public final void rule__STStringLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8553:1: ( rule__STStringLiteral__Group__1__Impl )
            // InternalSTFunctionParser.g:8554:2: rule__STStringLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1"


    // $ANTLR start "rule__STStringLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:8560:1: rule__STStringLiteral__Group__1__Impl : ( ( rule__STStringLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STStringLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8564:1: ( ( ( rule__STStringLiteral__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8565:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8565:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:8566:2: ( rule__STStringLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8567:2: ( rule__STStringLiteral__ValueAssignment_1 )
            // InternalSTFunctionParser.g:8567:3: rule__STStringLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1__Impl"


    // $ANTLR start "rule__Number__Group__0"
    // InternalSTFunctionParser.g:8576:1: rule__Number__Group__0 : rule__Number__Group__0__Impl rule__Number__Group__1 ;
    public final void rule__Number__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8580:1: ( rule__Number__Group__0__Impl rule__Number__Group__1 )
            // InternalSTFunctionParser.g:8581:2: rule__Number__Group__0__Impl rule__Number__Group__1
            {
            pushFollow(FOLLOW_73);
            rule__Number__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0"


    // $ANTLR start "rule__Number__Group__0__Impl"
    // InternalSTFunctionParser.g:8588:1: rule__Number__Group__0__Impl : ( ( rule__Number__Alternatives_0 )? ) ;
    public final void rule__Number__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8592:1: ( ( ( rule__Number__Alternatives_0 )? ) )
            // InternalSTFunctionParser.g:8593:1: ( ( rule__Number__Alternatives_0 )? )
            {
            // InternalSTFunctionParser.g:8593:1: ( ( rule__Number__Alternatives_0 )? )
            // InternalSTFunctionParser.g:8594:2: ( rule__Number__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }
            // InternalSTFunctionParser.g:8595:2: ( rule__Number__Alternatives_0 )?
            int alt79=2;
            int LA79_0 = input.LA(1);

            if ( (LA79_0==PlusSign||LA79_0==HyphenMinus) ) {
                alt79=1;
            }
            switch (alt79) {
                case 1 :
                    // InternalSTFunctionParser.g:8595:3: rule__Number__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0__Impl"


    // $ANTLR start "rule__Number__Group__1"
    // InternalSTFunctionParser.g:8603:1: rule__Number__Group__1 : rule__Number__Group__1__Impl rule__Number__Group__2 ;
    public final void rule__Number__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8607:1: ( rule__Number__Group__1__Impl rule__Number__Group__2 )
            // InternalSTFunctionParser.g:8608:2: rule__Number__Group__1__Impl rule__Number__Group__2
            {
            pushFollow(FOLLOW_67);
            rule__Number__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1"


    // $ANTLR start "rule__Number__Group__1__Impl"
    // InternalSTFunctionParser.g:8615:1: rule__Number__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__Number__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8619:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:8620:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:8620:1: ( RULE_INT )
            // InternalSTFunctionParser.g:8621:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1__Impl"


    // $ANTLR start "rule__Number__Group__2"
    // InternalSTFunctionParser.g:8630:1: rule__Number__Group__2 : rule__Number__Group__2__Impl ;
    public final void rule__Number__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8634:1: ( rule__Number__Group__2__Impl )
            // InternalSTFunctionParser.g:8635:2: rule__Number__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2"


    // $ANTLR start "rule__Number__Group__2__Impl"
    // InternalSTFunctionParser.g:8641:1: rule__Number__Group__2__Impl : ( ( rule__Number__Group_2__0 )? ) ;
    public final void rule__Number__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8645:1: ( ( ( rule__Number__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:8646:1: ( ( rule__Number__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:8646:1: ( ( rule__Number__Group_2__0 )? )
            // InternalSTFunctionParser.g:8647:2: ( rule__Number__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:8648:2: ( rule__Number__Group_2__0 )?
            int alt80=2;
            int LA80_0 = input.LA(1);

            if ( (LA80_0==FullStop) ) {
                int LA80_1 = input.LA(2);

                if ( (LA80_1==RULE_INT) ) {
                    int LA80_3 = input.LA(3);

                    if ( (synpred129_InternalSTFunctionParser()) ) {
                        alt80=1;
                    }
                }
                else if ( (LA80_1==RULE_EXT_INT) ) {
                    alt80=1;
                }
            }
            switch (alt80) {
                case 1 :
                    // InternalSTFunctionParser.g:8648:3: rule__Number__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2__Impl"


    // $ANTLR start "rule__Number__Group_2__0"
    // InternalSTFunctionParser.g:8657:1: rule__Number__Group_2__0 : rule__Number__Group_2__0__Impl rule__Number__Group_2__1 ;
    public final void rule__Number__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8661:1: ( rule__Number__Group_2__0__Impl rule__Number__Group_2__1 )
            // InternalSTFunctionParser.g:8662:2: rule__Number__Group_2__0__Impl rule__Number__Group_2__1
            {
            pushFollow(FOLLOW_76);
            rule__Number__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0"


    // $ANTLR start "rule__Number__Group_2__0__Impl"
    // InternalSTFunctionParser.g:8669:1: rule__Number__Group_2__0__Impl : ( ( FullStop ) ) ;
    public final void rule__Number__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8673:1: ( ( ( FullStop ) ) )
            // InternalSTFunctionParser.g:8674:1: ( ( FullStop ) )
            {
            // InternalSTFunctionParser.g:8674:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:8675:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:8676:2: ( FullStop )
            // InternalSTFunctionParser.g:8676:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0__Impl"


    // $ANTLR start "rule__Number__Group_2__1"
    // InternalSTFunctionParser.g:8684:1: rule__Number__Group_2__1 : rule__Number__Group_2__1__Impl ;
    public final void rule__Number__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8688:1: ( rule__Number__Group_2__1__Impl )
            // InternalSTFunctionParser.g:8689:2: rule__Number__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1"


    // $ANTLR start "rule__Number__Group_2__1__Impl"
    // InternalSTFunctionParser.g:8695:1: rule__Number__Group_2__1__Impl : ( ( rule__Number__Alternatives_2_1 ) ) ;
    public final void rule__Number__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8699:1: ( ( ( rule__Number__Alternatives_2_1 ) ) )
            // InternalSTFunctionParser.g:8700:1: ( ( rule__Number__Alternatives_2_1 ) )
            {
            // InternalSTFunctionParser.g:8700:1: ( ( rule__Number__Alternatives_2_1 ) )
            // InternalSTFunctionParser.g:8701:2: ( rule__Number__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }
            // InternalSTFunctionParser.g:8702:2: ( rule__Number__Alternatives_2_1 )
            // InternalSTFunctionParser.g:8702:3: rule__Number__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1__Impl"


    // $ANTLR start "rule__Date__Group__0"
    // InternalSTFunctionParser.g:8711:1: rule__Date__Group__0 : rule__Date__Group__0__Impl rule__Date__Group__1 ;
    public final void rule__Date__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8715:1: ( rule__Date__Group__0__Impl rule__Date__Group__1 )
            // InternalSTFunctionParser.g:8716:2: rule__Date__Group__0__Impl rule__Date__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__Date__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0"


    // $ANTLR start "rule__Date__Group__0__Impl"
    // InternalSTFunctionParser.g:8723:1: rule__Date__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8727:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:8728:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:8728:1: ( RULE_INT )
            // InternalSTFunctionParser.g:8729:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0__Impl"


    // $ANTLR start "rule__Date__Group__1"
    // InternalSTFunctionParser.g:8738:1: rule__Date__Group__1 : rule__Date__Group__1__Impl rule__Date__Group__2 ;
    public final void rule__Date__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8742:1: ( rule__Date__Group__1__Impl rule__Date__Group__2 )
            // InternalSTFunctionParser.g:8743:2: rule__Date__Group__1__Impl rule__Date__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__Date__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1"


    // $ANTLR start "rule__Date__Group__1__Impl"
    // InternalSTFunctionParser.g:8750:1: rule__Date__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8754:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:8755:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:8755:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:8756:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__2"
    // InternalSTFunctionParser.g:8765:1: rule__Date__Group__2 : rule__Date__Group__2__Impl rule__Date__Group__3 ;
    public final void rule__Date__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8769:1: ( rule__Date__Group__2__Impl rule__Date__Group__3 )
            // InternalSTFunctionParser.g:8770:2: rule__Date__Group__2__Impl rule__Date__Group__3
            {
            pushFollow(FOLLOW_74);
            rule__Date__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2"


    // $ANTLR start "rule__Date__Group__2__Impl"
    // InternalSTFunctionParser.g:8777:1: rule__Date__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8781:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:8782:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:8782:1: ( RULE_INT )
            // InternalSTFunctionParser.g:8783:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2__Impl"


    // $ANTLR start "rule__Date__Group__3"
    // InternalSTFunctionParser.g:8792:1: rule__Date__Group__3 : rule__Date__Group__3__Impl rule__Date__Group__4 ;
    public final void rule__Date__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8796:1: ( rule__Date__Group__3__Impl rule__Date__Group__4 )
            // InternalSTFunctionParser.g:8797:2: rule__Date__Group__3__Impl rule__Date__Group__4
            {
            pushFollow(FOLLOW_72);
            rule__Date__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3"


    // $ANTLR start "rule__Date__Group__3__Impl"
    // InternalSTFunctionParser.g:8804:1: rule__Date__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8808:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:8809:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:8809:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:8810:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3__Impl"


    // $ANTLR start "rule__Date__Group__4"
    // InternalSTFunctionParser.g:8819:1: rule__Date__Group__4 : rule__Date__Group__4__Impl ;
    public final void rule__Date__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8823:1: ( rule__Date__Group__4__Impl )
            // InternalSTFunctionParser.g:8824:2: rule__Date__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4"


    // $ANTLR start "rule__Date__Group__4__Impl"
    // InternalSTFunctionParser.g:8830:1: rule__Date__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8834:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:8835:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:8835:1: ( RULE_INT )
            // InternalSTFunctionParser.g:8836:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__0"
    // InternalSTFunctionParser.g:8846:1: rule__TimeOfDay__Group__0 : rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 ;
    public final void rule__TimeOfDay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8850:1: ( rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 )
            // InternalSTFunctionParser.g:8851:2: rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__TimeOfDay__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0"


    // $ANTLR start "rule__TimeOfDay__Group__0__Impl"
    // InternalSTFunctionParser.g:8858:1: rule__TimeOfDay__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8862:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:8863:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:8863:1: ( RULE_INT )
            // InternalSTFunctionParser.g:8864:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__1"
    // InternalSTFunctionParser.g:8873:1: rule__TimeOfDay__Group__1 : rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 ;
    public final void rule__TimeOfDay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8877:1: ( rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 )
            // InternalSTFunctionParser.g:8878:2: rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2
            {
            pushFollow(FOLLOW_72);
            rule__TimeOfDay__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1"


    // $ANTLR start "rule__TimeOfDay__Group__1__Impl"
    // InternalSTFunctionParser.g:8885:1: rule__TimeOfDay__Group__1__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8889:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:8890:1: ( Colon )
            {
            // InternalSTFunctionParser.g:8890:1: ( Colon )
            // InternalSTFunctionParser.g:8891:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__2"
    // InternalSTFunctionParser.g:8900:1: rule__TimeOfDay__Group__2 : rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 ;
    public final void rule__TimeOfDay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8904:1: ( rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 )
            // InternalSTFunctionParser.g:8905:2: rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3
            {
            pushFollow(FOLLOW_77);
            rule__TimeOfDay__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2"


    // $ANTLR start "rule__TimeOfDay__Group__2__Impl"
    // InternalSTFunctionParser.g:8912:1: rule__TimeOfDay__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8916:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:8917:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:8917:1: ( RULE_INT )
            // InternalSTFunctionParser.g:8918:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__3"
    // InternalSTFunctionParser.g:8927:1: rule__TimeOfDay__Group__3 : rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 ;
    public final void rule__TimeOfDay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8931:1: ( rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 )
            // InternalSTFunctionParser.g:8932:2: rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4
            {
            pushFollow(FOLLOW_72);
            rule__TimeOfDay__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3"


    // $ANTLR start "rule__TimeOfDay__Group__3__Impl"
    // InternalSTFunctionParser.g:8939:1: rule__TimeOfDay__Group__3__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8943:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:8944:1: ( Colon )
            {
            // InternalSTFunctionParser.g:8944:1: ( Colon )
            // InternalSTFunctionParser.g:8945:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__4"
    // InternalSTFunctionParser.g:8954:1: rule__TimeOfDay__Group__4 : rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 ;
    public final void rule__TimeOfDay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8958:1: ( rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 )
            // InternalSTFunctionParser.g:8959:2: rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5
            {
            pushFollow(FOLLOW_67);
            rule__TimeOfDay__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4"


    // $ANTLR start "rule__TimeOfDay__Group__4__Impl"
    // InternalSTFunctionParser.g:8966:1: rule__TimeOfDay__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8970:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:8971:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:8971:1: ( RULE_INT )
            // InternalSTFunctionParser.g:8972:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__5"
    // InternalSTFunctionParser.g:8981:1: rule__TimeOfDay__Group__5 : rule__TimeOfDay__Group__5__Impl ;
    public final void rule__TimeOfDay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8985:1: ( rule__TimeOfDay__Group__5__Impl )
            // InternalSTFunctionParser.g:8986:2: rule__TimeOfDay__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5"


    // $ANTLR start "rule__TimeOfDay__Group__5__Impl"
    // InternalSTFunctionParser.g:8992:1: rule__TimeOfDay__Group__5__Impl : ( ( rule__TimeOfDay__Group_5__0 )? ) ;
    public final void rule__TimeOfDay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8996:1: ( ( ( rule__TimeOfDay__Group_5__0 )? ) )
            // InternalSTFunctionParser.g:8997:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            {
            // InternalSTFunctionParser.g:8997:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            // InternalSTFunctionParser.g:8998:2: ( rule__TimeOfDay__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }
            // InternalSTFunctionParser.g:8999:2: ( rule__TimeOfDay__Group_5__0 )?
            int alt81=2;
            int LA81_0 = input.LA(1);

            if ( (LA81_0==FullStop) ) {
                int LA81_1 = input.LA(2);

                if ( (LA81_1==RULE_INT) ) {
                    int LA81_3 = input.LA(3);

                    if ( (synpred130_InternalSTFunctionParser()) ) {
                        alt81=1;
                    }
                }
            }
            switch (alt81) {
                case 1 :
                    // InternalSTFunctionParser.g:8999:3: rule__TimeOfDay__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeOfDay__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__0"
    // InternalSTFunctionParser.g:9008:1: rule__TimeOfDay__Group_5__0 : rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 ;
    public final void rule__TimeOfDay__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9012:1: ( rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 )
            // InternalSTFunctionParser.g:9013:2: rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1
            {
            pushFollow(FOLLOW_72);
            rule__TimeOfDay__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0"


    // $ANTLR start "rule__TimeOfDay__Group_5__0__Impl"
    // InternalSTFunctionParser.g:9020:1: rule__TimeOfDay__Group_5__0__Impl : ( ( FullStop ) ) ;
    public final void rule__TimeOfDay__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9024:1: ( ( ( FullStop ) ) )
            // InternalSTFunctionParser.g:9025:1: ( ( FullStop ) )
            {
            // InternalSTFunctionParser.g:9025:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:9026:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }
            // InternalSTFunctionParser.g:9027:2: ( FullStop )
            // InternalSTFunctionParser.g:9027:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__1"
    // InternalSTFunctionParser.g:9035:1: rule__TimeOfDay__Group_5__1 : rule__TimeOfDay__Group_5__1__Impl ;
    public final void rule__TimeOfDay__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9039:1: ( rule__TimeOfDay__Group_5__1__Impl )
            // InternalSTFunctionParser.g:9040:2: rule__TimeOfDay__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1"


    // $ANTLR start "rule__TimeOfDay__Group_5__1__Impl"
    // InternalSTFunctionParser.g:9046:1: rule__TimeOfDay__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9050:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9051:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9051:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9052:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1__Impl"


    // $ANTLR start "rule__Time__Group__0"
    // InternalSTFunctionParser.g:9062:1: rule__Time__Group__0 : rule__Time__Group__0__Impl rule__Time__Group__1 ;
    public final void rule__Time__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9066:1: ( rule__Time__Group__0__Impl rule__Time__Group__1 )
            // InternalSTFunctionParser.g:9067:2: rule__Time__Group__0__Impl rule__Time__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__Time__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0"


    // $ANTLR start "rule__Time__Group__0__Impl"
    // InternalSTFunctionParser.g:9074:1: rule__Time__Group__0__Impl : ( ruleNumber ) ;
    public final void rule__Time__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9078:1: ( ( ruleNumber ) )
            // InternalSTFunctionParser.g:9079:1: ( ruleNumber )
            {
            // InternalSTFunctionParser.g:9079:1: ( ruleNumber )
            // InternalSTFunctionParser.g:9080:2: ruleNumber
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getNumberParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getNumberParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0__Impl"


    // $ANTLR start "rule__Time__Group__1"
    // InternalSTFunctionParser.g:9089:1: rule__Time__Group__1 : rule__Time__Group__1__Impl rule__Time__Group__2 ;
    public final void rule__Time__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9093:1: ( rule__Time__Group__1__Impl rule__Time__Group__2 )
            // InternalSTFunctionParser.g:9094:2: rule__Time__Group__1__Impl rule__Time__Group__2
            {
            pushFollow(FOLLOW_79);
            rule__Time__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1"


    // $ANTLR start "rule__Time__Group__1__Impl"
    // InternalSTFunctionParser.g:9101:1: rule__Time__Group__1__Impl : ( ( rule__Time__Alternatives_1 ) ) ;
    public final void rule__Time__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9105:1: ( ( ( rule__Time__Alternatives_1 ) ) )
            // InternalSTFunctionParser.g:9106:1: ( ( rule__Time__Alternatives_1 ) )
            {
            // InternalSTFunctionParser.g:9106:1: ( ( rule__Time__Alternatives_1 ) )
            // InternalSTFunctionParser.g:9107:2: ( rule__Time__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getAlternatives_1()); 
            }
            // InternalSTFunctionParser.g:9108:2: ( rule__Time__Alternatives_1 )
            // InternalSTFunctionParser.g:9108:3: rule__Time__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Time__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1__Impl"


    // $ANTLR start "rule__Time__Group__2"
    // InternalSTFunctionParser.g:9116:1: rule__Time__Group__2 : rule__Time__Group__2__Impl ;
    public final void rule__Time__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9120:1: ( rule__Time__Group__2__Impl )
            // InternalSTFunctionParser.g:9121:2: rule__Time__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__2"


    // $ANTLR start "rule__Time__Group__2__Impl"
    // InternalSTFunctionParser.g:9127:1: rule__Time__Group__2__Impl : ( ( KW__ )? ) ;
    public final void rule__Time__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9131:1: ( ( ( KW__ )? ) )
            // InternalSTFunctionParser.g:9132:1: ( ( KW__ )? )
            {
            // InternalSTFunctionParser.g:9132:1: ( ( KW__ )? )
            // InternalSTFunctionParser.g:9133:2: ( KW__ )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().get_Keyword_2()); 
            }
            // InternalSTFunctionParser.g:9134:2: ( KW__ )?
            int alt82=2;
            int LA82_0 = input.LA(1);

            if ( (LA82_0==KW__) ) {
                alt82=1;
            }
            switch (alt82) {
                case 1 :
                    // InternalSTFunctionParser.g:9134:3: KW__
                    {
                    match(input,KW__,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().get_Keyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__2__Impl"


    // $ANTLR start "rule__STFunction__FunctionsAssignment"
    // InternalSTFunctionParser.g:9143:1: rule__STFunction__FunctionsAssignment : ( ruleFunctionDefinition ) ;
    public final void rule__STFunction__FunctionsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9147:1: ( ( ruleFunctionDefinition ) )
            // InternalSTFunctionParser.g:9148:2: ( ruleFunctionDefinition )
            {
            // InternalSTFunctionParser.g:9148:2: ( ruleFunctionDefinition )
            // InternalSTFunctionParser.g:9149:3: ruleFunctionDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getFunctionsFunctionDefinitionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getFunctionsFunctionDefinitionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__FunctionsAssignment"


    // $ANTLR start "rule__FunctionDefinition__NameAssignment_1"
    // InternalSTFunctionParser.g:9158:1: rule__FunctionDefinition__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__FunctionDefinition__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9162:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9163:2: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:9163:2: ( RULE_ID )
            // InternalSTFunctionParser.g:9164:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__NameAssignment_1"


    // $ANTLR start "rule__FunctionDefinition__ReturnTypeAssignment_2_1"
    // InternalSTFunctionParser.g:9173:1: rule__FunctionDefinition__ReturnTypeAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__FunctionDefinition__ReturnTypeAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9177:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:9178:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:9178:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9179:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeCrossReference_2_1_0()); 
            }
            // InternalSTFunctionParser.g:9180:3: ( RULE_ID )
            // InternalSTFunctionParser.g:9181:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__ReturnTypeAssignment_2_1"


    // $ANTLR start "rule__FunctionDefinition__VarDeclarationsAssignment_3_0"
    // InternalSTFunctionParser.g:9192:1: rule__FunctionDefinition__VarDeclarationsAssignment_3_0 : ( ruleVarDeclaration ) ;
    public final void rule__FunctionDefinition__VarDeclarationsAssignment_3_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9196:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:9197:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:9197:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:9198:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarDeclarationsAssignment_3_0"


    // $ANTLR start "rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1"
    // InternalSTFunctionParser.g:9207:1: rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1 : ( ruleVarTempDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9211:1: ( ( ruleVarTempDeclarationBlock ) )
            // InternalSTFunctionParser.g:9212:2: ( ruleVarTempDeclarationBlock )
            {
            // InternalSTFunctionParser.g:9212:2: ( ruleVarTempDeclarationBlock )
            // InternalSTFunctionParser.g:9213:3: ruleVarTempDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsVarTempDeclarationBlockParserRuleCall_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsVarTempDeclarationBlockParserRuleCall_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarTempDeclarationsAssignment_3_1"


    // $ANTLR start "rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2"
    // InternalSTFunctionParser.g:9222:1: rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2 : ( ruleVarInputDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9226:1: ( ( ruleVarInputDeclarationBlock ) )
            // InternalSTFunctionParser.g:9227:2: ( ruleVarInputDeclarationBlock )
            {
            // InternalSTFunctionParser.g:9227:2: ( ruleVarInputDeclarationBlock )
            // InternalSTFunctionParser.g:9228:3: ruleVarInputDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsVarInputDeclarationBlockParserRuleCall_3_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarInputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsVarInputDeclarationBlockParserRuleCall_3_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarInpuDeclarationsAssignment_3_2"


    // $ANTLR start "rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3"
    // InternalSTFunctionParser.g:9237:1: rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3 : ( ruleVarOutputDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9241:1: ( ( ruleVarOutputDeclarationBlock ) )
            // InternalSTFunctionParser.g:9242:2: ( ruleVarOutputDeclarationBlock )
            {
            // InternalSTFunctionParser.g:9242:2: ( ruleVarOutputDeclarationBlock )
            // InternalSTFunctionParser.g:9243:3: ruleVarOutputDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsVarOutputDeclarationBlockParserRuleCall_3_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarOutputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsVarOutputDeclarationBlockParserRuleCall_3_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarOutputDeclarationsAssignment_3_3"


    // $ANTLR start "rule__FunctionDefinition__CodeAssignment_4"
    // InternalSTFunctionParser.g:9252:1: rule__FunctionDefinition__CodeAssignment_4 : ( ruleSTStatement ) ;
    public final void rule__FunctionDefinition__CodeAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9256:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9257:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9257:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9258:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getCodeSTStatementParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getCodeSTStatementParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__CodeAssignment_4"


    // $ANTLR start "rule__VarTempDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:9267:1: rule__VarTempDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarTempDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9271:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:9272:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:9272:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:9273:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:9274:3: ( CONSTANT )
            // InternalSTFunctionParser.g:9275:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:9286:1: rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9290:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:9291:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:9291:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:9292:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarInputDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:9301:1: rule__VarInputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarInputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9305:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:9306:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:9306:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:9307:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:9308:3: ( CONSTANT )
            // InternalSTFunctionParser.g:9309:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:9320:1: rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9324:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:9325:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:9325:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:9326:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarOutputDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:9335:1: rule__VarOutputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarOutputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9339:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:9340:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:9340:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:9341:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:9342:3: ( CONSTANT )
            // InternalSTFunctionParser.g:9343:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:9354:1: rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9358:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:9359:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:9359:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:9360:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_1"
    // InternalSTFunctionParser.g:9369:1: rule__VarDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9373:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9374:2: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:9374:2: ( RULE_ID )
            // InternalSTFunctionParser.g:9375:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_1"


    // $ANTLR start "rule__VarDeclaration__LocatedAtAssignment_2_1"
    // InternalSTFunctionParser.g:9384:1: rule__VarDeclaration__LocatedAtAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__LocatedAtAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9388:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:9389:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:9389:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9390:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }
            // InternalSTFunctionParser.g:9391:3: ( RULE_ID )
            // InternalSTFunctionParser.g:9392:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__LocatedAtAssignment_2_1"


    // $ANTLR start "rule__VarDeclaration__ArrayAssignment_4_0"
    // InternalSTFunctionParser.g:9403:1: rule__VarDeclaration__ArrayAssignment_4_0 : ( ( ARRAY ) ) ;
    public final void rule__VarDeclaration__ArrayAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9407:1: ( ( ( ARRAY ) ) )
            // InternalSTFunctionParser.g:9408:2: ( ( ARRAY ) )
            {
            // InternalSTFunctionParser.g:9408:2: ( ( ARRAY ) )
            // InternalSTFunctionParser.g:9409:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            // InternalSTFunctionParser.g:9410:3: ( ARRAY )
            // InternalSTFunctionParser.g:9411:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ArrayAssignment_4_0"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_4_1_0_1"
    // InternalSTFunctionParser.g:9422:1: rule__VarDeclaration__RangesAssignment_4_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_4_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9426:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9427:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9427:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9428:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_4_1_0_1"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_4_1_0_2_1"
    // InternalSTFunctionParser.g:9437:1: rule__VarDeclaration__RangesAssignment_4_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_4_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9441:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9442:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9442:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9443:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_4_1_0_2_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_4_1_1_1"
    // InternalSTFunctionParser.g:9452:1: rule__VarDeclaration__CountAssignment_4_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9456:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:9457:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:9457:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:9458:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            // InternalSTFunctionParser.g:9459:3: ( Asterisk )
            // InternalSTFunctionParser.g:9460:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_4_1_1_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_4_1_1_2_1"
    // InternalSTFunctionParser.g:9471:1: rule__VarDeclaration__CountAssignment_4_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_4_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9475:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:9476:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:9476:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:9477:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            // InternalSTFunctionParser.g:9478:3: ( Asterisk )
            // InternalSTFunctionParser.g:9479:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_4_1_1_2_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_5"
    // InternalSTFunctionParser.g:9490:1: rule__VarDeclaration__TypeAssignment_5 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__TypeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9494:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:9495:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:9495:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:9496:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_5_0()); 
            }
            // InternalSTFunctionParser.g:9497:3: ( RULE_ID )
            // InternalSTFunctionParser.g:9498:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_5_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementIDTerminalRuleCall_5_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeLibraryElementCrossReference_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_5"


    // $ANTLR start "rule__VarDeclaration__MaxLengthAssignment_6_1"
    // InternalSTFunctionParser.g:9509:1: rule__VarDeclaration__MaxLengthAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__MaxLengthAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9513:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9514:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9514:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9515:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__MaxLengthAssignment_6_1"


    // $ANTLR start "rule__VarDeclaration__DefaultValueAssignment_7_1"
    // InternalSTFunctionParser.g:9524:1: rule__VarDeclaration__DefaultValueAssignment_7_1 : ( ruleInitializerExpression ) ;
    public final void rule__VarDeclaration__DefaultValueAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9528:1: ( ( ruleInitializerExpression ) )
            // InternalSTFunctionParser.g:9529:2: ( ruleInitializerExpression )
            {
            // InternalSTFunctionParser.g:9529:2: ( ruleInitializerExpression )
            // InternalSTFunctionParser.g:9530:3: ruleInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__DefaultValueAssignment_7_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTFunctionParser.g:9539:1: rule__ArrayInitializerExpression__ValuesAssignment_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9543:1: ( ( ruleArrayInitElement ) )
            // InternalSTFunctionParser.g:9544:2: ( ruleArrayInitElement )
            {
            // InternalSTFunctionParser.g:9544:2: ( ruleArrayInitElement )
            // InternalSTFunctionParser.g:9545:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTFunctionParser.g:9554:1: rule__ArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9558:1: ( ( ruleArrayInitElement ) )
            // InternalSTFunctionParser.g:9559:2: ( ruleArrayInitElement )
            {
            // InternalSTFunctionParser.g:9559:2: ( ruleArrayInitElement )
            // InternalSTFunctionParser.g:9560:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTFunctionParser.g:9569:1: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9573:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9574:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9574:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9575:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__ArrayInitElement__InitExpressionAssignment_1_1"
    // InternalSTFunctionParser.g:9584:1: rule__ArrayInitElement__InitExpressionAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__InitExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9588:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9589:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9589:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9590:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__InitExpressionAssignment_1_1"


    // $ANTLR start "rule__STAssignmentStatement__LeftAssignment_0"
    // InternalSTFunctionParser.g:9599:1: rule__STAssignmentStatement__LeftAssignment_0 : ( ruleSTAccessExpression ) ;
    public final void rule__STAssignmentStatement__LeftAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9603:1: ( ( ruleSTAccessExpression ) )
            // InternalSTFunctionParser.g:9604:2: ( ruleSTAccessExpression )
            {
            // InternalSTFunctionParser.g:9604:2: ( ruleSTAccessExpression )
            // InternalSTFunctionParser.g:9605:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LeftAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RightAssignment_2"
    // InternalSTFunctionParser.g:9614:1: rule__STAssignmentStatement__RightAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RightAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9618:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9619:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9619:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9620:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RightAssignment_2"


    // $ANTLR start "rule__STIfStatment__ConditionAssignment_1"
    // InternalSTFunctionParser.g:9629:1: rule__STIfStatment__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatment__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9633:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9634:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9634:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9635:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatment__StatementsAssignment_3"
    // InternalSTFunctionParser.g:9644:1: rule__STIfStatment__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatment__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9648:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9649:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9649:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9650:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatment__ElseifsAssignment_4"
    // InternalSTFunctionParser.g:9659:1: rule__STIfStatment__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatment__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9663:1: ( ( ruleSTElseIfPart ) )
            // InternalSTFunctionParser.g:9664:2: ( ruleSTElseIfPart )
            {
            // InternalSTFunctionParser.g:9664:2: ( ruleSTElseIfPart )
            // InternalSTFunctionParser.g:9665:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatment__ElseAssignment_5"
    // InternalSTFunctionParser.g:9674:1: rule__STIfStatment__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatment__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9678:1: ( ( ruleSTElsePart ) )
            // InternalSTFunctionParser.g:9679:2: ( ruleSTElsePart )
            {
            // InternalSTFunctionParser.g:9679:2: ( ruleSTElsePart )
            // InternalSTFunctionParser.g:9680:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatmentAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatment__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTFunctionParser.g:9689:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9693:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9694:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9694:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9695:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTFunctionParser.g:9704:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9708:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9709:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9709:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9710:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTFunctionParser.g:9719:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9723:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9724:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9724:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9725:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTFunctionParser.g:9734:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9738:1: ( ( ruleSTCaseCases ) )
            // InternalSTFunctionParser.g:9739:2: ( ruleSTCaseCases )
            {
            // InternalSTFunctionParser.g:9739:2: ( ruleSTCaseCases )
            // InternalSTFunctionParser.g:9740:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTFunctionParser.g:9749:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9753:1: ( ( ruleSTElsePart ) )
            // InternalSTFunctionParser.g:9754:2: ( ruleSTElsePart )
            {
            // InternalSTFunctionParser.g:9754:2: ( ruleSTElsePart )
            // InternalSTFunctionParser.g:9755:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTFunctionParser.g:9764:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9768:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9769:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9769:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9770:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTFunctionParser.g:9779:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9783:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9784:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9784:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9785:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTFunctionParser.g:9794:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9798:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9799:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9799:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9800:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTFunctionParser.g:9809:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9813:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9814:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9814:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9815:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__ForAssignment_1"
    // InternalSTFunctionParser.g:9824:1: rule__STForStatement__ForAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ForAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9828:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9829:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9829:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9830:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getForSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ForAssignment_1"


    // $ANTLR start "rule__STForStatement__ToAssignment_3"
    // InternalSTFunctionParser.g:9839:1: rule__STForStatement__ToAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9843:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9844:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9844:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9845:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_3"


    // $ANTLR start "rule__STForStatement__ByAssignment_4_1"
    // InternalSTFunctionParser.g:9854:1: rule__STForStatement__ByAssignment_4_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9858:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9859:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9859:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9860:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_4_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_6"
    // InternalSTFunctionParser.g:9869:1: rule__STForStatement__StatementsAssignment_6 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9873:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9874:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9874:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9875:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_6"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTFunctionParser.g:9884:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9888:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9889:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9889:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9890:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTFunctionParser.g:9899:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9903:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9904:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9904:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9905:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTFunctionParser.g:9914:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9918:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:9919:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:9919:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:9920:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTFunctionParser.g:9929:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9933:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:9934:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:9934:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:9935:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:9944:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9948:1: ( ( ruleSubrangeOperator ) )
            // InternalSTFunctionParser.g:9949:2: ( ruleSubrangeOperator )
            {
            // InternalSTFunctionParser.g:9949:2: ( ruleSubrangeOperator )
            // InternalSTFunctionParser.g:9950:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:9959:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9963:1: ( ( ruleSTOrExpression ) )
            // InternalSTFunctionParser.g:9964:2: ( ruleSTOrExpression )
            {
            // InternalSTFunctionParser.g:9964:2: ( ruleSTOrExpression )
            // InternalSTFunctionParser.g:9965:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:9974:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9978:1: ( ( ruleOrOperator ) )
            // InternalSTFunctionParser.g:9979:2: ( ruleOrOperator )
            {
            // InternalSTFunctionParser.g:9979:2: ( ruleOrOperator )
            // InternalSTFunctionParser.g:9980:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:9989:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9993:1: ( ( ruleSTXorExpression ) )
            // InternalSTFunctionParser.g:9994:2: ( ruleSTXorExpression )
            {
            // InternalSTFunctionParser.g:9994:2: ( ruleSTXorExpression )
            // InternalSTFunctionParser.g:9995:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10004:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10008:1: ( ( ruleXorOperator ) )
            // InternalSTFunctionParser.g:10009:2: ( ruleXorOperator )
            {
            // InternalSTFunctionParser.g:10009:2: ( ruleXorOperator )
            // InternalSTFunctionParser.g:10010:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10019:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10023:1: ( ( ruleSTAndExpression ) )
            // InternalSTFunctionParser.g:10024:2: ( ruleSTAndExpression )
            {
            // InternalSTFunctionParser.g:10024:2: ( ruleSTAndExpression )
            // InternalSTFunctionParser.g:10025:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10034:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10038:1: ( ( ruleAndOperator ) )
            // InternalSTFunctionParser.g:10039:2: ( ruleAndOperator )
            {
            // InternalSTFunctionParser.g:10039:2: ( ruleAndOperator )
            // InternalSTFunctionParser.g:10040:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10049:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10053:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTFunctionParser.g:10054:2: ( ruleSTEqualityExpression )
            {
            // InternalSTFunctionParser.g:10054:2: ( ruleSTEqualityExpression )
            // InternalSTFunctionParser.g:10055:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10064:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10068:1: ( ( ruleEqualityOperator ) )
            // InternalSTFunctionParser.g:10069:2: ( ruleEqualityOperator )
            {
            // InternalSTFunctionParser.g:10069:2: ( ruleEqualityOperator )
            // InternalSTFunctionParser.g:10070:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10079:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10083:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTFunctionParser.g:10084:2: ( ruleSTComparisonExpression )
            {
            // InternalSTFunctionParser.g:10084:2: ( ruleSTComparisonExpression )
            // InternalSTFunctionParser.g:10085:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10094:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10098:1: ( ( ruleCompareOperator ) )
            // InternalSTFunctionParser.g:10099:2: ( ruleCompareOperator )
            {
            // InternalSTFunctionParser.g:10099:2: ( ruleCompareOperator )
            // InternalSTFunctionParser.g:10100:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10109:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10113:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTFunctionParser.g:10114:2: ( ruleSTAddSubExpression )
            {
            // InternalSTFunctionParser.g:10114:2: ( ruleSTAddSubExpression )
            // InternalSTFunctionParser.g:10115:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10124:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10128:1: ( ( ruleAddSubOperator ) )
            // InternalSTFunctionParser.g:10129:2: ( ruleAddSubOperator )
            {
            // InternalSTFunctionParser.g:10129:2: ( ruleAddSubOperator )
            // InternalSTFunctionParser.g:10130:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10139:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10143:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTFunctionParser.g:10144:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTFunctionParser.g:10144:2: ( ruleSTMulDivModExpression )
            // InternalSTFunctionParser.g:10145:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10154:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10158:1: ( ( ruleMulDivModOperator ) )
            // InternalSTFunctionParser.g:10159:2: ( ruleMulDivModOperator )
            {
            // InternalSTFunctionParser.g:10159:2: ( ruleMulDivModOperator )
            // InternalSTFunctionParser.g:10160:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10169:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10173:1: ( ( ruleSTPowerExpression ) )
            // InternalSTFunctionParser.g:10174:2: ( ruleSTPowerExpression )
            {
            // InternalSTFunctionParser.g:10174:2: ( ruleSTPowerExpression )
            // InternalSTFunctionParser.g:10175:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:10184:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10188:1: ( ( rulePowerOperator ) )
            // InternalSTFunctionParser.g:10189:2: ( rulePowerOperator )
            {
            // InternalSTFunctionParser.g:10189:2: ( rulePowerOperator )
            // InternalSTFunctionParser.g:10190:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:10199:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10203:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:10204:2: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:10204:2: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:10205:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__OpAssignment_1_1"
    // InternalSTFunctionParser.g:10214:1: rule__STUnaryExpression__OpAssignment_1_1 : ( ruleUnaryOperator ) ;
    public final void rule__STUnaryExpression__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10218:1: ( ( ruleUnaryOperator ) )
            // InternalSTFunctionParser.g:10219:2: ( ruleUnaryOperator )
            {
            // InternalSTFunctionParser.g:10219:2: ( ruleUnaryOperator )
            // InternalSTFunctionParser.g:10220:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__OpAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__ExpressionAssignment_1_2"
    // InternalSTFunctionParser.g:10229:1: rule__STUnaryExpression__ExpressionAssignment_1_2 : ( ruleSTUnaryExpression ) ;
    public final void rule__STUnaryExpression__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10233:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:10234:2: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:10234:2: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:10235:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__ExpressionAssignment_1_2"


    // $ANTLR start "rule__STAccessExpression__MemberAssignment_1_0_2"
    // InternalSTFunctionParser.g:10244:1: rule__STAccessExpression__MemberAssignment_1_0_2 : ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) ;
    public final void rule__STAccessExpression__MemberAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10248:1: ( ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) )
            // InternalSTFunctionParser.g:10249:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            {
            // InternalSTFunctionParser.g:10249:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            // InternalSTFunctionParser.g:10250:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }
            // InternalSTFunctionParser.g:10251:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            // InternalSTFunctionParser.g:10251:4: rule__STAccessExpression__MemberAlternatives_1_0_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAlternatives_1_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAssignment_1_0_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_2"
    // InternalSTFunctionParser.g:10259:1: rule__STAccessExpression__IndexAssignment_1_1_2 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10263:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10264:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10264:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10265:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_3_1"
    // InternalSTFunctionParser.g:10274:1: rule__STAccessExpression__IndexAssignment_1_1_3_1 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10278:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10279:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10279:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10280:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_3_1"


    // $ANTLR start "rule__STFeatureExpression__FeatureAssignment_1"
    // InternalSTFunctionParser.g:10289:1: rule__STFeatureExpression__FeatureAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10293:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10294:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10294:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10295:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }
            // InternalSTFunctionParser.g:10296:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10297:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_0"
    // InternalSTFunctionParser.g:10308:1: rule__STFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTExpression ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10312:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10313:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10313:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10314:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTExpressionParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTExpressionParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalSTFunctionParser.g:10323:1: rule__STFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTExpression ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10327:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10328:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10328:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10329:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTExpressionParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTExpressionParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STMultibitPartialExpression__SpecifierAssignment_1"
    // InternalSTFunctionParser.g:10338:1: rule__STMultibitPartialExpression__SpecifierAssignment_1 : ( ruleSTMultiBitAccessSpecifier ) ;
    public final void rule__STMultibitPartialExpression__SpecifierAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10342:1: ( ( ruleSTMultiBitAccessSpecifier ) )
            // InternalSTFunctionParser.g:10343:2: ( ruleSTMultiBitAccessSpecifier )
            {
            // InternalSTFunctionParser.g:10343:2: ( ruleSTMultiBitAccessSpecifier )
            // InternalSTFunctionParser.g:10344:3: ruleSTMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__SpecifierAssignment_1"


    // $ANTLR start "rule__STMultibitPartialExpression__IndexAssignment_2"
    // InternalSTFunctionParser.g:10353:1: rule__STMultibitPartialExpression__IndexAssignment_2 : ( RULE_INT ) ;
    public final void rule__STMultibitPartialExpression__IndexAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10357:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:10358:2: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:10358:2: ( RULE_INT )
            // InternalSTFunctionParser.g:10359:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__IndexAssignment_2"


    // $ANTLR start "rule__STNumericLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:10368:1: rule__STNumericLiteral__TypeAssignment_0 : ( ruleSTNumericLiteralType ) ;
    public final void rule__STNumericLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10372:1: ( ( ruleSTNumericLiteralType ) )
            // InternalSTFunctionParser.g:10373:2: ( ruleSTNumericLiteralType )
            {
            // InternalSTFunctionParser.g:10373:2: ( ruleSTNumericLiteralType )
            // InternalSTFunctionParser.g:10374:3: ruleSTNumericLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeSTNumericLiteralTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeSTNumericLiteralTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STNumericLiteral__ValueAssignment_1"
    // InternalSTFunctionParser.g:10383:1: rule__STNumericLiteral__ValueAssignment_1 : ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) ) ;
    public final void rule__STNumericLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10387:1: ( ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) ) )
            // InternalSTFunctionParser.g:10388:2: ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) )
            {
            // InternalSTFunctionParser.g:10388:2: ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) )
            // InternalSTFunctionParser.g:10389:3: ( rule__STNumericLiteral__ValueAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAlternatives_1_0()); 
            }
            // InternalSTFunctionParser.g:10390:3: ( rule__STNumericLiteral__ValueAlternatives_1_0 )
            // InternalSTFunctionParser.g:10390:4: rule__STNumericLiteral__ValueAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STDateLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:10398:1: rule__STDateLiteral__TypeAssignment_0 : ( ruleSTDateLiteralType ) ;
    public final void rule__STDateLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10402:1: ( ( ruleSTDateLiteralType ) )
            // InternalSTFunctionParser.g:10403:2: ( ruleSTDateLiteralType )
            {
            // InternalSTFunctionParser.g:10403:2: ( ruleSTDateLiteralType )
            // InternalSTFunctionParser.g:10404:3: ruleSTDateLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeSTDateLiteralTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeSTDateLiteralTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateLiteral__ValueAssignment_1"
    // InternalSTFunctionParser.g:10413:1: rule__STDateLiteral__ValueAssignment_1 : ( ruleDate ) ;
    public final void rule__STDateLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10417:1: ( ( ruleDate ) )
            // InternalSTFunctionParser.g:10418:2: ( ruleDate )
            {
            // InternalSTFunctionParser.g:10418:2: ( ruleDate )
            // InternalSTFunctionParser.g:10419:3: ruleDate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STTimeLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:10428:1: rule__STTimeLiteral__TypeAssignment_0 : ( ruleSTTimeLiteralType ) ;
    public final void rule__STTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10432:1: ( ( ruleSTTimeLiteralType ) )
            // InternalSTFunctionParser.g:10433:2: ( ruleSTTimeLiteralType )
            {
            // InternalSTFunctionParser.g:10433:2: ( ruleSTTimeLiteralType )
            // InternalSTFunctionParser.g:10434:3: ruleSTTimeLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeSTTimeLiteralTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeSTTimeLiteralTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeLiteral__ValueAssignment_1"
    // InternalSTFunctionParser.g:10443:1: rule__STTimeLiteral__ValueAssignment_1 : ( ruleTime ) ;
    public final void rule__STTimeLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10447:1: ( ( ruleTime ) )
            // InternalSTFunctionParser.g:10448:2: ( ruleTime )
            {
            // InternalSTFunctionParser.g:10448:2: ( ruleTime )
            // InternalSTFunctionParser.g:10449:3: ruleTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STTimeOfDayLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:10458:1: rule__STTimeOfDayLiteral__TypeAssignment_0 : ( ruleSTTimeOfDayLiteralType ) ;
    public final void rule__STTimeOfDayLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10462:1: ( ( ruleSTTimeOfDayLiteralType ) )
            // InternalSTFunctionParser.g:10463:2: ( ruleSTTimeOfDayLiteralType )
            {
            // InternalSTFunctionParser.g:10463:2: ( ruleSTTimeOfDayLiteralType )
            // InternalSTFunctionParser.g:10464:3: ruleSTTimeOfDayLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeSTTimeOfDayLiteralTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeOfDayLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeSTTimeOfDayLiteralTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeOfDayLiteral__ValueAssignment_1"
    // InternalSTFunctionParser.g:10473:1: rule__STTimeOfDayLiteral__ValueAssignment_1 : ( ruleTimeOfDay ) ;
    public final void rule__STTimeOfDayLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10477:1: ( ( ruleTimeOfDay ) )
            // InternalSTFunctionParser.g:10478:2: ( ruleTimeOfDay )
            {
            // InternalSTFunctionParser.g:10478:2: ( ruleTimeOfDay )
            // InternalSTFunctionParser.g:10479:3: ruleTimeOfDay
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STDateAndTimeLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:10488:1: rule__STDateAndTimeLiteral__TypeAssignment_0 : ( ruleSTDateAndTimeLiteralType ) ;
    public final void rule__STDateAndTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10492:1: ( ( ruleSTDateAndTimeLiteralType ) )
            // InternalSTFunctionParser.g:10493:2: ( ruleSTDateAndTimeLiteralType )
            {
            // InternalSTFunctionParser.g:10493:2: ( ruleSTDateAndTimeLiteralType )
            // InternalSTFunctionParser.g:10494:3: ruleSTDateAndTimeLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeSTDateAndTimeLiteralTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateAndTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeSTDateAndTimeLiteralTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateAndTimeLiteral__DateValueAssignment_1"
    // InternalSTFunctionParser.g:10503:1: rule__STDateAndTimeLiteral__DateValueAssignment_1 : ( ruleDate ) ;
    public final void rule__STDateAndTimeLiteral__DateValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10507:1: ( ( ruleDate ) )
            // InternalSTFunctionParser.g:10508:2: ( ruleDate )
            {
            // InternalSTFunctionParser.g:10508:2: ( ruleDate )
            // InternalSTFunctionParser.g:10509:3: ruleDate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getDateValueDateParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getDateValueDateParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__DateValueAssignment_1"


    // $ANTLR start "rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3"
    // InternalSTFunctionParser.g:10518:1: rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3 : ( ruleTimeOfDay ) ;
    public final void rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10522:1: ( ( ruleTimeOfDay ) )
            // InternalSTFunctionParser.g:10523:2: ( ruleTimeOfDay )
            {
            // InternalSTFunctionParser.g:10523:2: ( ruleTimeOfDay )
            // InternalSTFunctionParser.g:10524:3: ruleTimeOfDay
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTimeOfDayValueTimeOfDayParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTimeOfDayValueTimeOfDayParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_3"


    // $ANTLR start "rule__STStringLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:10533:1: rule__STStringLiteral__TypeAssignment_0 : ( ruleSTStringLiteralType ) ;
    public final void rule__STStringLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10537:1: ( ( ruleSTStringLiteralType ) )
            // InternalSTFunctionParser.g:10538:2: ( ruleSTStringLiteralType )
            {
            // InternalSTFunctionParser.g:10538:2: ( ruleSTStringLiteralType )
            // InternalSTFunctionParser.g:10539:3: ruleSTStringLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeSTStringLiteralTypeParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStringLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeSTStringLiteralTypeParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STStringLiteral__ValueAssignment_1"
    // InternalSTFunctionParser.g:10548:1: rule__STStringLiteral__ValueAssignment_1 : ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) ) ;
    public final void rule__STStringLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10552:1: ( ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) ) )
            // InternalSTFunctionParser.g:10553:2: ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) )
            {
            // InternalSTFunctionParser.g:10553:2: ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) )
            // InternalSTFunctionParser.g:10554:3: ( rule__STStringLiteral__ValueAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAlternatives_1_0()); 
            }
            // InternalSTFunctionParser.g:10555:3: ( rule__STStringLiteral__ValueAlternatives_1_0 )
            // InternalSTFunctionParser.g:10555:4: rule__STStringLiteral__ValueAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAssignment_1"

    // $ANTLR start synpred17_InternalSTFunctionParser
    public final void synpred17_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:1809:2: ( ( ( ruleSTAccessExpression ) ) )
        // InternalSTFunctionParser.g:1809:2: ( ( ruleSTAccessExpression ) )
        {
        // InternalSTFunctionParser.g:1809:2: ( ( ruleSTAccessExpression ) )
        // InternalSTFunctionParser.g:1810:3: ( ruleSTAccessExpression )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
        }
        // InternalSTFunctionParser.g:1811:3: ( ruleSTAccessExpression )
        // InternalSTFunctionParser.g:1811:4: ruleSTAccessExpression
        {
        pushFollow(FOLLOW_2);
        ruleSTAccessExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred17_InternalSTFunctionParser

    // $ANTLR start synpred105_InternalSTFunctionParser
    public final void synpred105_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:5219:3: ( rule__STCaseCases__StatementsAssignment_3 )
        // InternalSTFunctionParser.g:5219:3: rule__STCaseCases__StatementsAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__STCaseCases__StatementsAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred105_InternalSTFunctionParser

    // $ANTLR start synpred122_InternalSTFunctionParser
    public final void synpred122_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:7919:3: ( rule__STFeatureExpression__Group_2__0 )
        // InternalSTFunctionParser.g:7919:3: rule__STFeatureExpression__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STFeatureExpression__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred122_InternalSTFunctionParser

    // $ANTLR start synpred129_InternalSTFunctionParser
    public final void synpred129_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:8648:3: ( rule__Number__Group_2__0 )
        // InternalSTFunctionParser.g:8648:3: rule__Number__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__Number__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred129_InternalSTFunctionParser

    // $ANTLR start synpred130_InternalSTFunctionParser
    public final void synpred130_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:8999:3: ( rule__TimeOfDay__Group_5__0 )
        // InternalSTFunctionParser.g:8999:3: rule__TimeOfDay__Group_5__0
        {
        pushFollow(FOLLOW_2);
        rule__TimeOfDay__Group_5__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred130_InternalSTFunctionParser

    // Delegated rules

    public final boolean synpred130_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred130_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred122_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred122_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred129_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred129_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred17_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred17_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred105_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred105_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA56 dfa56 = new DFA56(this);
    protected DFA73 dfa73 = new DFA73(this);
    static final String dfa_1s = "\72\uffff";
    static final String dfa_2s = "\1\1\71\uffff";
    static final String dfa_3s = "\1\4\1\uffff\54\0\14\uffff";
    static final String dfa_4s = "\1\165\1\uffff\54\0\14\uffff";
    static final String dfa_5s = "\1\uffff\1\2\57\uffff\1\1\10\uffff";
    static final String dfa_6s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\14\uffff}>";
    static final String[] dfa_7s = {
            "\1\45\1\44\1\uffff\1\41\5\uffff\1\61\1\1\2\uffff\1\51\2\uffff\1\50\1\7\1\uffff\1\32\1\22\1\36\1\10\2\61\1\17\1\20\1\15\1\53\1\uffff\1\4\1\5\1\52\1\31\1\13\1\uffff\1\24\1\14\1\43\1\21\1\11\1\35\1\16\1\uffff\1\61\1\6\1\61\1\1\1\61\1\12\1\47\1\uffff\1\42\1\23\1\uffff\1\46\1\61\1\34\1\40\1\uffff\1\1\17\uffff\1\33\1\uffff\1\61\4\uffff\1\37\3\uffff\1\2\2\uffff\1\25\1\uffff\1\26\3\uffff\1\61\13\uffff\1\30\1\27\1\uffff\1\3\1\54\1\55",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final short[] dfa_2 = DFA.unpackEncodedString(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final char[] dfa_4 = DFA.unpackEncodedStringToUnsignedChars(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[] dfa_6 = DFA.unpackEncodedString(dfa_6s);
    static final short[][] dfa_7 = unpackEncodedStringArray(dfa_7s);

    class DFA56 extends DFA {

        public DFA56(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 56;
            this.eot = dfa_1;
            this.eof = dfa_2;
            this.min = dfa_3;
            this.max = dfa_4;
            this.accept = dfa_5;
            this.special = dfa_6;
            this.transition = dfa_7;
        }
        public String getDescription() {
            return "()* loopback of 5219:2: ( rule__STCaseCases__StatementsAssignment_3 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA56_2 = input.LA(1);

                         
                        int index56_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA56_3 = input.LA(1);

                         
                        int index56_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA56_4 = input.LA(1);

                         
                        int index56_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA56_5 = input.LA(1);

                         
                        int index56_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA56_6 = input.LA(1);

                         
                        int index56_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA56_7 = input.LA(1);

                         
                        int index56_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA56_8 = input.LA(1);

                         
                        int index56_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA56_9 = input.LA(1);

                         
                        int index56_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA56_10 = input.LA(1);

                         
                        int index56_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA56_11 = input.LA(1);

                         
                        int index56_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA56_12 = input.LA(1);

                         
                        int index56_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA56_13 = input.LA(1);

                         
                        int index56_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA56_14 = input.LA(1);

                         
                        int index56_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA56_15 = input.LA(1);

                         
                        int index56_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA56_16 = input.LA(1);

                         
                        int index56_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA56_17 = input.LA(1);

                         
                        int index56_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA56_18 = input.LA(1);

                         
                        int index56_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA56_19 = input.LA(1);

                         
                        int index56_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA56_20 = input.LA(1);

                         
                        int index56_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA56_21 = input.LA(1);

                         
                        int index56_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA56_22 = input.LA(1);

                         
                        int index56_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA56_23 = input.LA(1);

                         
                        int index56_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA56_24 = input.LA(1);

                         
                        int index56_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA56_25 = input.LA(1);

                         
                        int index56_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA56_26 = input.LA(1);

                         
                        int index56_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA56_27 = input.LA(1);

                         
                        int index56_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA56_28 = input.LA(1);

                         
                        int index56_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA56_29 = input.LA(1);

                         
                        int index56_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA56_30 = input.LA(1);

                         
                        int index56_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA56_31 = input.LA(1);

                         
                        int index56_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA56_32 = input.LA(1);

                         
                        int index56_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA56_33 = input.LA(1);

                         
                        int index56_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA56_34 = input.LA(1);

                         
                        int index56_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA56_35 = input.LA(1);

                         
                        int index56_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA56_36 = input.LA(1);

                         
                        int index56_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA56_37 = input.LA(1);

                         
                        int index56_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA56_38 = input.LA(1);

                         
                        int index56_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA56_39 = input.LA(1);

                         
                        int index56_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA56_40 = input.LA(1);

                         
                        int index56_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA56_41 = input.LA(1);

                         
                        int index56_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA56_42 = input.LA(1);

                         
                        int index56_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA56_43 = input.LA(1);

                         
                        int index56_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA56_44 = input.LA(1);

                         
                        int index56_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA56_45 = input.LA(1);

                         
                        int index56_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred105_InternalSTFunctionParser()) ) {s = 49;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index56_45);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 56, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_8s = "\43\uffff";
    static final String dfa_9s = "\1\2\42\uffff";
    static final String dfa_10s = "\1\10\1\0\41\uffff";
    static final String dfa_11s = "\1\155\1\0\41\uffff";
    static final String dfa_12s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_13s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_14s = {
            "\1\2\56\uffff\1\2\2\uffff\1\2\4\uffff\1\2\2\uffff\1\2\5\uffff\6\2\1\uffff\1\2\1\uffff\1\2\3\uffff\2\2\1\uffff\1\2\1\uffff\1\2\1\1\14\2\4\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final short[] dfa_9 = DFA.unpackEncodedString(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final char[] dfa_11 = DFA.unpackEncodedStringToUnsignedChars(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[] dfa_13 = DFA.unpackEncodedString(dfa_13s);
    static final short[][] dfa_14 = unpackEncodedStringArray(dfa_14s);

    class DFA73 extends DFA {

        public DFA73(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 73;
            this.eot = dfa_8;
            this.eof = dfa_9;
            this.min = dfa_10;
            this.max = dfa_11;
            this.accept = dfa_12;
            this.special = dfa_13;
            this.transition = dfa_14;
        }
        public String getDescription() {
            return "7919:2: ( rule__STFeatureExpression__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA73_1 = input.LA(1);

                         
                        int index73_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred122_InternalSTFunctionParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index73_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 73, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000008002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000002L,0x0002000140000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x7B777F7DFFB32AF0L,0x003B001948850000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0x0000000000010A02L,0x0008000000000000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x7B777F7DFFB220B2L,0x003B001148850000L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x0000000000081000L,0x0008000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000000002L,0x0008000000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000800L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000010A00L,0x0008000000000000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000000000L,0x0000000800004000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x0000000200000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000101000000400L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x0000000000000000L,0x0000100000000000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000000000200000L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x6B627F7DE7B200B0L,0x003B000148810001L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000200080000000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x0000000000000002L,0x0000000080000000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000000L,0x0000200000000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x6B627F7DE7B200B0L,0x003B100148810001L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000010000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000002000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x7B777F7DFFB220B0L,0x003B000148850000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x7B777F7DFFB220B0L,0x003B001148850000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000400L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x0080000000000000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x7B7F7FFDFFF220B0L,0x003B001148850000L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000008000000002L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0008000000004000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x6B627F7DE7B200B2L,0x003B000148810001L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000000000000L,0x0000000880000000L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000000000028000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x7B777F7DFFB620B0L,0x003B001148850000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000000020000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x7B777F7DFFB224B0L,0x003B001148850000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x7B77FF7DFFB220B0L,0x003B001148850000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000100L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000200L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000200L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000002L,0x0000000000400000L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000004L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000004L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0400000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0400000000000002L,0x0000000004000000L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000000L,0x0000004000001000L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0000000000000002L,0x0000004000001000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0000000000000000L,0x000000A000002800L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000002L,0x000000A000002800L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000000L,0x0000000140000000L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000002L,0x0000000140000000L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x8000000000000000L,0x0000000420000000L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x8000000000000002L,0x0000000420000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000100L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x0000000000000000L,0x0000100200000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000002L,0x0000100200000000L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x000A0000000000F8L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x6B627F7DE7B200B0L,0x003B000158810001L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000080000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x02225B4CE5200000L,0x0003000140000000L});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x0000000000000000L,0x0002000000000000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0002000140000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x6B627F7DE7B200B0L,0x003B000148810000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0006000000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0000000800000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x00000F0002180000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});

}