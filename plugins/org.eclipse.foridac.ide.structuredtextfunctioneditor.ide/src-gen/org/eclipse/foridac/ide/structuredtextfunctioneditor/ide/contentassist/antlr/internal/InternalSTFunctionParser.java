package org.eclipse.foridac.ide.structuredtextfunctioneditor.ide.contentassist.antlr.internal;
import java.util.Map;
import java.util.HashMap;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.eclipse.foridac.ide.structuredtextfunctioneditor.services.STFunctionGrammarAccess;



import org.antlr.runtime.*;
import java.util.Stack;
import java.util.List;
import java.util.ArrayList;
import java.util.Map;
import java.util.HashMap;
@SuppressWarnings("all")
public class InternalSTFunctionParser extends AbstractInternalContentAssistParser {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "LDATE_AND_TIME", "DATE_AND_TIME", "END_FUNCTION", "LTIME_OF_DAY", "TIME_OF_DAY", "END_REPEAT", "VAR_OUTPUT", "END_WHILE", "VAR_INPUT", "CONSTANT", "CONTINUE", "END_CASE", "FUNCTION", "VAR_TEMP", "END_FOR", "END_VAR", "WSTRING", "END_IF", "REPEAT", "RETURN", "STRING", "ARRAY", "DWORD", "ELSIF", "FALSE", "LDATE", "LREAL", "LTIME", "LWORD", "UDINT", "ULINT", "UNTIL", "USINT", "WCHAR", "WHILE", "BOOL", "BYTE", "CASE", "CHAR", "DATE", "DINT", "ELSE", "EXIT", "LINT", "LTOD", "REAL", "SINT", "THEN", "TIME", "TRUE", "UINT", "WORD", "AND", "FOR", "INT", "LDT", "MOD", "NOT", "TOD", "VAR", "XOR", "B", "D_1", "L", "W", "X", "AsteriskAsterisk", "FullStopFullStop", "ColonEqualsSign", "LessThanSignEqualsSign", "LessThanSignGreaterThanSign", "EqualsSignGreaterThanSign", "GreaterThanSignEqualsSign", "AT", "BY", "DO", "DT", "IF", "LD", "LT", "MS", "NS", "OF", "OR", "TO", "US", "NumberSign", "Ampersand", "LeftParenthesis", "RightParenthesis", "Asterisk", "PlusSign", "Comma", "HyphenMinus", "FullStop", "Solidus", "Colon", "Semicolon", "LessThanSign", "EqualsSign", "GreaterThanSign", "D", "H", "M", "S", "T", "LeftSquareBracket", "RightSquareBracket", "KW__", "RULE_HEX_DIGIT", "RULE_NON_DECIMAL", "RULE_INT", "RULE_EXT_INT", "RULE_ID", "RULE_STRING", "RULE_WSTRING", "RULE_ML_COMMENT", "RULE_SL_COMMENT", "RULE_WS", "RULE_ANY_OTHER"
    };
    public static final int LWORD=32;
    public static final int LessThanSignGreaterThanSign=74;
    public static final int EqualsSignGreaterThanSign=75;
    public static final int VAR=63;
    public static final int END_IF=21;
    public static final int ULINT=34;
    public static final int END_CASE=15;
    public static final int LessThanSign=102;
    public static final int LeftParenthesis=92;
    public static final int BYTE=40;
    public static final int ELSE=45;
    public static final int IF=81;
    public static final int LINT=47;
    public static final int GreaterThanSign=104;
    public static final int WORD=55;
    public static final int DATE_AND_TIME=5;
    public static final int RULE_ID=117;
    public static final int TOD=62;
    public static final int DINT=44;
    public static final int FUNCTION=16;
    public static final int UDINT=33;
    public static final int CASE=41;
    public static final int GreaterThanSignEqualsSign=76;
    public static final int AT=77;
    public static final int PlusSign=95;
    public static final int RULE_INT=115;
    public static final int END_FOR=18;
    public static final int RULE_ML_COMMENT=120;
    public static final int THEN=51;
    public static final int XOR=64;
    public static final int LeftSquareBracket=110;
    public static final int EXIT=46;
    public static final int TIME_OF_DAY=8;
    public static final int B=65;
    public static final int LDATE_AND_TIME=4;
    public static final int REPEAT=22;
    public static final int D=105;
    public static final int H=106;
    public static final int CHAR=42;
    public static final int L=67;
    public static final int M=107;
    public static final int LTIME=31;
    public static final int Comma=96;
    public static final int HyphenMinus=97;
    public static final int S=108;
    public static final int T=109;
    public static final int W=68;
    public static final int BY=78;
    public static final int X=69;
    public static final int ELSIF=27;
    public static final int END_REPEAT=9;
    public static final int LessThanSignEqualsSign=73;
    public static final int Solidus=99;
    public static final int VAR_INPUT=12;
    public static final int FullStop=98;
    public static final int VAR_TEMP=17;
    public static final int CONSTANT=13;
    public static final int KW__=112;
    public static final int CONTINUE=14;
    public static final int Semicolon=101;
    public static final int LD=82;
    public static final int VAR_OUTPUT=10;
    public static final int STRING=24;
    public static final int RULE_HEX_DIGIT=113;
    public static final int TO=88;
    public static final int UINT=54;
    public static final int LTOD=48;
    public static final int ARRAY=25;
    public static final int LT=83;
    public static final int DO=79;
    public static final int WSTRING=20;
    public static final int DT=80;
    public static final int END_VAR=19;
    public static final int FullStopFullStop=71;
    public static final int Ampersand=91;
    public static final int US=89;
    public static final int RightSquareBracket=111;
    public static final int USINT=36;
    public static final int MS=84;
    public static final int DWORD=26;
    public static final int FOR=57;
    public static final int RightParenthesis=93;
    public static final int TRUE=53;
    public static final int ColonEqualsSign=72;
    public static final int RULE_WSTRING=119;
    public static final int END_FUNCTION=6;
    public static final int END_WHILE=11;
    public static final int DATE=43;
    public static final int NOT=61;
    public static final int LDATE=29;
    public static final int AND=56;
    public static final int NumberSign=90;
    public static final int REAL=49;
    public static final int AsteriskAsterisk=70;
    public static final int SINT=50;
    public static final int LTIME_OF_DAY=7;
    public static final int LREAL=30;
    public static final int WCHAR=37;
    public static final int NS=85;
    public static final int RULE_STRING=118;
    public static final int INT=58;
    public static final int RULE_SL_COMMENT=121;
    public static final int RETURN=23;
    public static final int EqualsSign=103;
    public static final int OF=86;
    public static final int Colon=100;
    public static final int EOF=-1;
    public static final int LDT=59;
    public static final int Asterisk=94;
    public static final int MOD=60;
    public static final int OR=87;
    public static final int RULE_WS=122;
    public static final int RULE_EXT_INT=116;
    public static final int TIME=52;
    public static final int RULE_ANY_OTHER=123;
    public static final int UNTIL=35;
    public static final int BOOL=39;
    public static final int D_1=66;
    public static final int FALSE=28;
    public static final int WHILE=38;
    public static final int RULE_NON_DECIMAL=114;

    // delegates
    // delegators


        public InternalSTFunctionParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public InternalSTFunctionParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
             
        }
        

    public String[] getTokenNames() { return InternalSTFunctionParser.tokenNames; }
    public String getGrammarFileName() { return "InternalSTFunctionParser.g"; }


    	private STFunctionGrammarAccess grammarAccess;
    	private final Map<String, String> tokenNameToValue = new HashMap<String, String>();
    	
    	{
    		tokenNameToValue.put("NumberSign", "'#'");
    		tokenNameToValue.put("Ampersand", "'&'");
    		tokenNameToValue.put("LeftParenthesis", "'('");
    		tokenNameToValue.put("RightParenthesis", "')'");
    		tokenNameToValue.put("Asterisk", "'*'");
    		tokenNameToValue.put("PlusSign", "'+'");
    		tokenNameToValue.put("Comma", "','");
    		tokenNameToValue.put("HyphenMinus", "'-'");
    		tokenNameToValue.put("FullStop", "'.'");
    		tokenNameToValue.put("Solidus", "'/'");
    		tokenNameToValue.put("Colon", "':'");
    		tokenNameToValue.put("Semicolon", "';'");
    		tokenNameToValue.put("LessThanSign", "'<'");
    		tokenNameToValue.put("EqualsSign", "'='");
    		tokenNameToValue.put("GreaterThanSign", "'>'");
    		tokenNameToValue.put("D", "'D'");
    		tokenNameToValue.put("H", "'H'");
    		tokenNameToValue.put("M", "'M'");
    		tokenNameToValue.put("S", "'S'");
    		tokenNameToValue.put("T", "'T'");
    		tokenNameToValue.put("LeftSquareBracket", "'['");
    		tokenNameToValue.put("RightSquareBracket", "']'");
    		tokenNameToValue.put("KW__", "'_'");
    		tokenNameToValue.put("B", "'%B'");
    		tokenNameToValue.put("D_1", "'%D'");
    		tokenNameToValue.put("L", "'%L'");
    		tokenNameToValue.put("W", "'%W'");
    		tokenNameToValue.put("X", "'%X'");
    		tokenNameToValue.put("AsteriskAsterisk", "'**'");
    		tokenNameToValue.put("FullStopFullStop", "'..'");
    		tokenNameToValue.put("ColonEqualsSign", "':='");
    		tokenNameToValue.put("LessThanSignEqualsSign", "'<='");
    		tokenNameToValue.put("LessThanSignGreaterThanSign", "'<>'");
    		tokenNameToValue.put("EqualsSignGreaterThanSign", "'=>'");
    		tokenNameToValue.put("GreaterThanSignEqualsSign", "'>='");
    		tokenNameToValue.put("AT", "'AT'");
    		tokenNameToValue.put("BY", "'BY'");
    		tokenNameToValue.put("DO", "'DO'");
    		tokenNameToValue.put("DT", "'DT'");
    		tokenNameToValue.put("IF", "'IF'");
    		tokenNameToValue.put("LD", "'LD'");
    		tokenNameToValue.put("LT", "'LT'");
    		tokenNameToValue.put("MS", "'MS'");
    		tokenNameToValue.put("NS", "'NS'");
    		tokenNameToValue.put("OF", "'OF'");
    		tokenNameToValue.put("OR", "'OR'");
    		tokenNameToValue.put("TO", "'TO'");
    		tokenNameToValue.put("US", "'US'");
    		tokenNameToValue.put("AND", "'AND'");
    		tokenNameToValue.put("FOR", "'FOR'");
    		tokenNameToValue.put("INT", "'INT'");
    		tokenNameToValue.put("LDT", "'LDT'");
    		tokenNameToValue.put("MOD", "'MOD'");
    		tokenNameToValue.put("NOT", "'NOT'");
    		tokenNameToValue.put("TOD", "'TOD'");
    		tokenNameToValue.put("VAR", "'VAR'");
    		tokenNameToValue.put("XOR", "'XOR'");
    		tokenNameToValue.put("BOOL", "'BOOL'");
    		tokenNameToValue.put("BYTE", "'BYTE'");
    		tokenNameToValue.put("CASE", "'CASE'");
    		tokenNameToValue.put("CHAR", "'CHAR'");
    		tokenNameToValue.put("DATE", "'DATE'");
    		tokenNameToValue.put("DINT", "'DINT'");
    		tokenNameToValue.put("ELSE", "'ELSE'");
    		tokenNameToValue.put("EXIT", "'EXIT'");
    		tokenNameToValue.put("LINT", "'LINT'");
    		tokenNameToValue.put("LTOD", "'LTOD'");
    		tokenNameToValue.put("REAL", "'REAL'");
    		tokenNameToValue.put("SINT", "'SINT'");
    		tokenNameToValue.put("THEN", "'THEN'");
    		tokenNameToValue.put("TIME", "'TIME'");
    		tokenNameToValue.put("TRUE", "'TRUE'");
    		tokenNameToValue.put("UINT", "'UINT'");
    		tokenNameToValue.put("WORD", "'WORD'");
    		tokenNameToValue.put("ARRAY", "'ARRAY'");
    		tokenNameToValue.put("DWORD", "'DWORD'");
    		tokenNameToValue.put("ELSIF", "'ELSIF'");
    		tokenNameToValue.put("FALSE", "'FALSE'");
    		tokenNameToValue.put("LDATE", "'LDATE'");
    		tokenNameToValue.put("LREAL", "'LREAL'");
    		tokenNameToValue.put("LTIME", "'LTIME'");
    		tokenNameToValue.put("LWORD", "'LWORD'");
    		tokenNameToValue.put("UDINT", "'UDINT'");
    		tokenNameToValue.put("ULINT", "'ULINT'");
    		tokenNameToValue.put("UNTIL", "'UNTIL'");
    		tokenNameToValue.put("USINT", "'USINT'");
    		tokenNameToValue.put("WCHAR", "'WCHAR'");
    		tokenNameToValue.put("WHILE", "'WHILE'");
    		tokenNameToValue.put("END_IF", "'END_IF'");
    		tokenNameToValue.put("REPEAT", "'REPEAT'");
    		tokenNameToValue.put("RETURN", "'RETURN'");
    		tokenNameToValue.put("STRING", "'STRING'");
    		tokenNameToValue.put("END_FOR", "'END_FOR'");
    		tokenNameToValue.put("END_VAR", "'END_VAR'");
    		tokenNameToValue.put("WSTRING", "'WSTRING'");
    		tokenNameToValue.put("CONSTANT", "'CONSTANT'");
    		tokenNameToValue.put("CONTINUE", "'CONTINUE'");
    		tokenNameToValue.put("END_CASE", "'END_CASE'");
    		tokenNameToValue.put("FUNCTION", "'FUNCTION'");
    		tokenNameToValue.put("VAR_TEMP", "'VAR_TEMP'");
    		tokenNameToValue.put("END_WHILE", "'END_WHILE'");
    		tokenNameToValue.put("VAR_INPUT", "'VAR_INPUT'");
    		tokenNameToValue.put("END_REPEAT", "'END_REPEAT'");
    		tokenNameToValue.put("VAR_OUTPUT", "'VAR_OUTPUT'");
    		tokenNameToValue.put("TIME_OF_DAY", "'TIME_OF_DAY'");
    		tokenNameToValue.put("END_FUNCTION", "'END_FUNCTION'");
    		tokenNameToValue.put("LTIME_OF_DAY", "'LTIME_OF_DAY'");
    		tokenNameToValue.put("DATE_AND_TIME", "'DATE_AND_TIME'");
    		tokenNameToValue.put("LDATE_AND_TIME", "'LDATE_AND_TIME'");
    	}

    	public void setGrammarAccess(STFunctionGrammarAccess grammarAccess) {
    		this.grammarAccess = grammarAccess;
    	}

    	@Override
    	protected Grammar getGrammar() {
    		return grammarAccess.getGrammar();
    	}

    	@Override
    	protected String getValueForTokenName(String tokenName) {
    		String result = tokenNameToValue.get(tokenName);
    		if (result == null)
    			result = tokenName;
    		return result;
    	}



    // $ANTLR start "entryRuleSTFunction"
    // InternalSTFunctionParser.g:165:1: entryRuleSTFunction : ruleSTFunction EOF ;
    public final void entryRuleSTFunction() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:166:1: ( ruleSTFunction EOF )
            // InternalSTFunctionParser.g:167:1: ruleSTFunction EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFunction();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFunction"


    // $ANTLR start "ruleSTFunction"
    // InternalSTFunctionParser.g:174:1: ruleSTFunction : ( ( rule__STFunction__FunctionsAssignment )* ) ;
    public final void ruleSTFunction() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:178:2: ( ( ( rule__STFunction__FunctionsAssignment )* ) )
            // InternalSTFunctionParser.g:179:2: ( ( rule__STFunction__FunctionsAssignment )* )
            {
            // InternalSTFunctionParser.g:179:2: ( ( rule__STFunction__FunctionsAssignment )* )
            // InternalSTFunctionParser.g:180:3: ( rule__STFunction__FunctionsAssignment )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getFunctionsAssignment()); 
            }
            // InternalSTFunctionParser.g:181:3: ( rule__STFunction__FunctionsAssignment )*
            loop1:
            do {
                int alt1=2;
                int LA1_0 = input.LA(1);

                if ( (LA1_0==FUNCTION) ) {
                    alt1=1;
                }


                switch (alt1) {
            	case 1 :
            	    // InternalSTFunctionParser.g:181:4: rule__STFunction__FunctionsAssignment
            	    {
            	    pushFollow(FOLLOW_3);
            	    rule__STFunction__FunctionsAssignment();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop1;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getFunctionsAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFunction"


    // $ANTLR start "entryRuleFunctionDefinition"
    // InternalSTFunctionParser.g:190:1: entryRuleFunctionDefinition : ruleFunctionDefinition EOF ;
    public final void entryRuleFunctionDefinition() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:191:1: ( ruleFunctionDefinition EOF )
            // InternalSTFunctionParser.g:192:1: ruleFunctionDefinition EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleFunctionDefinition"


    // $ANTLR start "ruleFunctionDefinition"
    // InternalSTFunctionParser.g:199:1: ruleFunctionDefinition : ( ( rule__FunctionDefinition__Group__0 ) ) ;
    public final void ruleFunctionDefinition() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:203:2: ( ( ( rule__FunctionDefinition__Group__0 ) ) )
            // InternalSTFunctionParser.g:204:2: ( ( rule__FunctionDefinition__Group__0 ) )
            {
            // InternalSTFunctionParser.g:204:2: ( ( rule__FunctionDefinition__Group__0 ) )
            // InternalSTFunctionParser.g:205:3: ( rule__FunctionDefinition__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:206:3: ( rule__FunctionDefinition__Group__0 )
            // InternalSTFunctionParser.g:206:4: rule__FunctionDefinition__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleFunctionDefinition"


    // $ANTLR start "entryRuleVarDeclarationBlock"
    // InternalSTFunctionParser.g:215:1: entryRuleVarDeclarationBlock : ruleVarDeclarationBlock EOF ;
    public final void entryRuleVarDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:216:1: ( ruleVarDeclarationBlock EOF )
            // InternalSTFunctionParser.g:217:1: ruleVarDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclarationBlock"


    // $ANTLR start "ruleVarDeclarationBlock"
    // InternalSTFunctionParser.g:224:1: ruleVarDeclarationBlock : ( ( rule__VarDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:228:2: ( ( ( rule__VarDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:229:2: ( ( rule__VarDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:229:2: ( ( rule__VarDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:230:3: ( rule__VarDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:231:3: ( rule__VarDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:231:4: rule__VarDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclarationBlock"


    // $ANTLR start "entryRuleVarTempDeclarationBlock"
    // InternalSTFunctionParser.g:240:1: entryRuleVarTempDeclarationBlock : ruleVarTempDeclarationBlock EOF ;
    public final void entryRuleVarTempDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:241:1: ( ruleVarTempDeclarationBlock EOF )
            // InternalSTFunctionParser.g:242:1: ruleVarTempDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarTempDeclarationBlock"


    // $ANTLR start "ruleVarTempDeclarationBlock"
    // InternalSTFunctionParser.g:249:1: ruleVarTempDeclarationBlock : ( ( rule__VarTempDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarTempDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:253:2: ( ( ( rule__VarTempDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:254:2: ( ( rule__VarTempDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:254:2: ( ( rule__VarTempDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:255:3: ( rule__VarTempDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:256:3: ( rule__VarTempDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:256:4: rule__VarTempDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarTempDeclarationBlock"


    // $ANTLR start "entryRuleVarInputDeclarationBlock"
    // InternalSTFunctionParser.g:265:1: entryRuleVarInputDeclarationBlock : ruleVarInputDeclarationBlock EOF ;
    public final void entryRuleVarInputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:266:1: ( ruleVarInputDeclarationBlock EOF )
            // InternalSTFunctionParser.g:267:1: ruleVarInputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarInputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarInputDeclarationBlock"


    // $ANTLR start "ruleVarInputDeclarationBlock"
    // InternalSTFunctionParser.g:274:1: ruleVarInputDeclarationBlock : ( ( rule__VarInputDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarInputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:278:2: ( ( ( rule__VarInputDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:279:2: ( ( rule__VarInputDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:279:2: ( ( rule__VarInputDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:280:3: ( rule__VarInputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:281:3: ( rule__VarInputDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:281:4: rule__VarInputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarInputDeclarationBlock"


    // $ANTLR start "entryRuleVarOutputDeclarationBlock"
    // InternalSTFunctionParser.g:290:1: entryRuleVarOutputDeclarationBlock : ruleVarOutputDeclarationBlock EOF ;
    public final void entryRuleVarOutputDeclarationBlock() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:291:1: ( ruleVarOutputDeclarationBlock EOF )
            // InternalSTFunctionParser.g:292:1: ruleVarOutputDeclarationBlock EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarOutputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarOutputDeclarationBlock"


    // $ANTLR start "ruleVarOutputDeclarationBlock"
    // InternalSTFunctionParser.g:299:1: ruleVarOutputDeclarationBlock : ( ( rule__VarOutputDeclarationBlock__Group__0 ) ) ;
    public final void ruleVarOutputDeclarationBlock() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:303:2: ( ( ( rule__VarOutputDeclarationBlock__Group__0 ) ) )
            // InternalSTFunctionParser.g:304:2: ( ( rule__VarOutputDeclarationBlock__Group__0 ) )
            {
            // InternalSTFunctionParser.g:304:2: ( ( rule__VarOutputDeclarationBlock__Group__0 ) )
            // InternalSTFunctionParser.g:305:3: ( rule__VarOutputDeclarationBlock__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:306:3: ( rule__VarOutputDeclarationBlock__Group__0 )
            // InternalSTFunctionParser.g:306:4: rule__VarOutputDeclarationBlock__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarOutputDeclarationBlock"


    // $ANTLR start "entryRuleVarDeclaration"
    // InternalSTFunctionParser.g:315:1: entryRuleVarDeclaration : ruleVarDeclaration EOF ;
    public final void entryRuleVarDeclaration() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:316:1: ( ruleVarDeclaration EOF )
            // InternalSTFunctionParser.g:317:1: ruleVarDeclaration EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleVarDeclaration"


    // $ANTLR start "ruleVarDeclaration"
    // InternalSTFunctionParser.g:324:1: ruleVarDeclaration : ( ( rule__VarDeclaration__Group__0 ) ) ;
    public final void ruleVarDeclaration() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:328:2: ( ( ( rule__VarDeclaration__Group__0 ) ) )
            // InternalSTFunctionParser.g:329:2: ( ( rule__VarDeclaration__Group__0 ) )
            {
            // InternalSTFunctionParser.g:329:2: ( ( rule__VarDeclaration__Group__0 ) )
            // InternalSTFunctionParser.g:330:3: ( rule__VarDeclaration__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:331:3: ( rule__VarDeclaration__Group__0 )
            // InternalSTFunctionParser.g:331:4: rule__VarDeclaration__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleVarDeclaration"


    // $ANTLR start "entryRuleInitializerExpression"
    // InternalSTFunctionParser.g:340:1: entryRuleInitializerExpression : ruleInitializerExpression EOF ;
    public final void entryRuleInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:341:1: ( ruleInitializerExpression EOF )
            // InternalSTFunctionParser.g:342:1: ruleInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleInitializerExpression"


    // $ANTLR start "ruleInitializerExpression"
    // InternalSTFunctionParser.g:349:1: ruleInitializerExpression : ( ( rule__InitializerExpression__Alternatives ) ) ;
    public final void ruleInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:353:2: ( ( ( rule__InitializerExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:354:2: ( ( rule__InitializerExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:354:2: ( ( rule__InitializerExpression__Alternatives ) )
            // InternalSTFunctionParser.g:355:3: ( rule__InitializerExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:356:3: ( rule__InitializerExpression__Alternatives )
            // InternalSTFunctionParser.g:356:4: rule__InitializerExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__InitializerExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getInitializerExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleInitializerExpression"


    // $ANTLR start "entryRuleArrayInitializerExpression"
    // InternalSTFunctionParser.g:365:1: entryRuleArrayInitializerExpression : ruleArrayInitializerExpression EOF ;
    public final void entryRuleArrayInitializerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:366:1: ( ruleArrayInitializerExpression EOF )
            // InternalSTFunctionParser.g:367:1: ruleArrayInitializerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitializerExpression"


    // $ANTLR start "ruleArrayInitializerExpression"
    // InternalSTFunctionParser.g:374:1: ruleArrayInitializerExpression : ( ( rule__ArrayInitializerExpression__Group__0 ) ) ;
    public final void ruleArrayInitializerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:378:2: ( ( ( rule__ArrayInitializerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:379:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:379:2: ( ( rule__ArrayInitializerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:380:3: ( rule__ArrayInitializerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:381:3: ( rule__ArrayInitializerExpression__Group__0 )
            // InternalSTFunctionParser.g:381:4: rule__ArrayInitializerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitializerExpression"


    // $ANTLR start "entryRuleArrayInitElement"
    // InternalSTFunctionParser.g:390:1: entryRuleArrayInitElement : ruleArrayInitElement EOF ;
    public final void entryRuleArrayInitElement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:391:1: ( ruleArrayInitElement EOF )
            // InternalSTFunctionParser.g:392:1: ruleArrayInitElement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleArrayInitElement"


    // $ANTLR start "ruleArrayInitElement"
    // InternalSTFunctionParser.g:399:1: ruleArrayInitElement : ( ( rule__ArrayInitElement__Group__0 ) ) ;
    public final void ruleArrayInitElement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:403:2: ( ( ( rule__ArrayInitElement__Group__0 ) ) )
            // InternalSTFunctionParser.g:404:2: ( ( rule__ArrayInitElement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:404:2: ( ( rule__ArrayInitElement__Group__0 ) )
            // InternalSTFunctionParser.g:405:3: ( rule__ArrayInitElement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:406:3: ( rule__ArrayInitElement__Group__0 )
            // InternalSTFunctionParser.g:406:4: rule__ArrayInitElement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleArrayInitElement"


    // $ANTLR start "entryRuleSTStatement"
    // InternalSTFunctionParser.g:415:1: entryRuleSTStatement : ruleSTStatement EOF ;
    public final void entryRuleSTStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:416:1: ( ruleSTStatement EOF )
            // InternalSTFunctionParser.g:417:1: ruleSTStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStatement"


    // $ANTLR start "ruleSTStatement"
    // InternalSTFunctionParser.g:424:1: ruleSTStatement : ( ( rule__STStatement__Alternatives ) ) ;
    public final void ruleSTStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:428:2: ( ( ( rule__STStatement__Alternatives ) ) )
            // InternalSTFunctionParser.g:429:2: ( ( rule__STStatement__Alternatives ) )
            {
            // InternalSTFunctionParser.g:429:2: ( ( rule__STStatement__Alternatives ) )
            // InternalSTFunctionParser.g:430:3: ( rule__STStatement__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:431:3: ( rule__STStatement__Alternatives )
            // InternalSTFunctionParser.g:431:4: rule__STStatement__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStatement"


    // $ANTLR start "entryRuleSTAssignmentStatement"
    // InternalSTFunctionParser.g:440:1: entryRuleSTAssignmentStatement : ruleSTAssignmentStatement EOF ;
    public final void entryRuleSTAssignmentStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:441:1: ( ruleSTAssignmentStatement EOF )
            // InternalSTFunctionParser.g:442:1: ruleSTAssignmentStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAssignmentStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAssignmentStatement"


    // $ANTLR start "ruleSTAssignmentStatement"
    // InternalSTFunctionParser.g:449:1: ruleSTAssignmentStatement : ( ( rule__STAssignmentStatement__Group__0 ) ) ;
    public final void ruleSTAssignmentStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:453:2: ( ( ( rule__STAssignmentStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:454:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:454:2: ( ( rule__STAssignmentStatement__Group__0 ) )
            // InternalSTFunctionParser.g:455:3: ( rule__STAssignmentStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:456:3: ( rule__STAssignmentStatement__Group__0 )
            // InternalSTFunctionParser.g:456:4: rule__STAssignmentStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAssignmentStatement"


    // $ANTLR start "entryRuleSTCallStatement"
    // InternalSTFunctionParser.g:465:1: entryRuleSTCallStatement : ruleSTCallStatement EOF ;
    public final void entryRuleSTCallStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:466:1: ( ruleSTCallStatement EOF )
            // InternalSTFunctionParser.g:467:1: ruleSTCallStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallStatement"


    // $ANTLR start "ruleSTCallStatement"
    // InternalSTFunctionParser.g:474:1: ruleSTCallStatement : ( ( rule__STCallStatement__CallAssignment ) ) ;
    public final void ruleSTCallStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:478:2: ( ( ( rule__STCallStatement__CallAssignment ) ) )
            // InternalSTFunctionParser.g:479:2: ( ( rule__STCallStatement__CallAssignment ) )
            {
            // InternalSTFunctionParser.g:479:2: ( ( rule__STCallStatement__CallAssignment ) )
            // InternalSTFunctionParser.g:480:3: ( rule__STCallStatement__CallAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementAccess().getCallAssignment()); 
            }
            // InternalSTFunctionParser.g:481:3: ( rule__STCallStatement__CallAssignment )
            // InternalSTFunctionParser.g:481:4: rule__STCallStatement__CallAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallStatement__CallAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementAccess().getCallAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallStatement"


    // $ANTLR start "entryRuleSTCallArgument"
    // InternalSTFunctionParser.g:490:1: entryRuleSTCallArgument : ruleSTCallArgument EOF ;
    public final void entryRuleSTCallArgument() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:491:1: ( ruleSTCallArgument EOF )
            // InternalSTFunctionParser.g:492:1: ruleSTCallArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallArgument"


    // $ANTLR start "ruleSTCallArgument"
    // InternalSTFunctionParser.g:499:1: ruleSTCallArgument : ( ( rule__STCallArgument__Alternatives ) ) ;
    public final void ruleSTCallArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:503:2: ( ( ( rule__STCallArgument__Alternatives ) ) )
            // InternalSTFunctionParser.g:504:2: ( ( rule__STCallArgument__Alternatives ) )
            {
            // InternalSTFunctionParser.g:504:2: ( ( rule__STCallArgument__Alternatives ) )
            // InternalSTFunctionParser.g:505:3: ( rule__STCallArgument__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:506:3: ( rule__STCallArgument__Alternatives )
            // InternalSTFunctionParser.g:506:4: rule__STCallArgument__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STCallArgument__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallArgumentAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallArgument"


    // $ANTLR start "entryRuleSTCallUnnamedArgument"
    // InternalSTFunctionParser.g:515:1: entryRuleSTCallUnnamedArgument : ruleSTCallUnnamedArgument EOF ;
    public final void entryRuleSTCallUnnamedArgument() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:516:1: ( ruleSTCallUnnamedArgument EOF )
            // InternalSTFunctionParser.g:517:1: ruleSTCallUnnamedArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallUnnamedArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallUnnamedArgument"


    // $ANTLR start "ruleSTCallUnnamedArgument"
    // InternalSTFunctionParser.g:524:1: ruleSTCallUnnamedArgument : ( ( rule__STCallUnnamedArgument__ArgAssignment ) ) ;
    public final void ruleSTCallUnnamedArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:528:2: ( ( ( rule__STCallUnnamedArgument__ArgAssignment ) ) )
            // InternalSTFunctionParser.g:529:2: ( ( rule__STCallUnnamedArgument__ArgAssignment ) )
            {
            // InternalSTFunctionParser.g:529:2: ( ( rule__STCallUnnamedArgument__ArgAssignment ) )
            // InternalSTFunctionParser.g:530:3: ( rule__STCallUnnamedArgument__ArgAssignment )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgAssignment()); 
            }
            // InternalSTFunctionParser.g:531:3: ( rule__STCallUnnamedArgument__ArgAssignment )
            // InternalSTFunctionParser.g:531:4: rule__STCallUnnamedArgument__ArgAssignment
            {
            pushFollow(FOLLOW_2);
            rule__STCallUnnamedArgument__ArgAssignment();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgAssignment()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallUnnamedArgument"


    // $ANTLR start "entryRuleSTCallNamedInputArgument"
    // InternalSTFunctionParser.g:540:1: entryRuleSTCallNamedInputArgument : ruleSTCallNamedInputArgument EOF ;
    public final void entryRuleSTCallNamedInputArgument() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:541:1: ( ruleSTCallNamedInputArgument EOF )
            // InternalSTFunctionParser.g:542:1: ruleSTCallNamedInputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedInputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedInputArgument"


    // $ANTLR start "ruleSTCallNamedInputArgument"
    // InternalSTFunctionParser.g:549:1: ruleSTCallNamedInputArgument : ( ( rule__STCallNamedInputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedInputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:553:2: ( ( ( rule__STCallNamedInputArgument__Group__0 ) ) )
            // InternalSTFunctionParser.g:554:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            {
            // InternalSTFunctionParser.g:554:2: ( ( rule__STCallNamedInputArgument__Group__0 ) )
            // InternalSTFunctionParser.g:555:3: ( rule__STCallNamedInputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:556:3: ( rule__STCallNamedInputArgument__Group__0 )
            // InternalSTFunctionParser.g:556:4: rule__STCallNamedInputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedInputArgument"


    // $ANTLR start "entryRuleSTCallNamedOutputArgument"
    // InternalSTFunctionParser.g:565:1: entryRuleSTCallNamedOutputArgument : ruleSTCallNamedOutputArgument EOF ;
    public final void entryRuleSTCallNamedOutputArgument() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:566:1: ( ruleSTCallNamedOutputArgument EOF )
            // InternalSTFunctionParser.g:567:1: ruleSTCallNamedOutputArgument EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCallNamedOutputArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCallNamedOutputArgument"


    // $ANTLR start "ruleSTCallNamedOutputArgument"
    // InternalSTFunctionParser.g:574:1: ruleSTCallNamedOutputArgument : ( ( rule__STCallNamedOutputArgument__Group__0 ) ) ;
    public final void ruleSTCallNamedOutputArgument() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:578:2: ( ( ( rule__STCallNamedOutputArgument__Group__0 ) ) )
            // InternalSTFunctionParser.g:579:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            {
            // InternalSTFunctionParser.g:579:2: ( ( rule__STCallNamedOutputArgument__Group__0 ) )
            // InternalSTFunctionParser.g:580:3: ( rule__STCallNamedOutputArgument__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:581:3: ( rule__STCallNamedOutputArgument__Group__0 )
            // InternalSTFunctionParser.g:581:4: rule__STCallNamedOutputArgument__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCallNamedOutputArgument"


    // $ANTLR start "entryRuleSTIfStatement"
    // InternalSTFunctionParser.g:590:1: entryRuleSTIfStatement : ruleSTIfStatement EOF ;
    public final void entryRuleSTIfStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:591:1: ( ruleSTIfStatement EOF )
            // InternalSTFunctionParser.g:592:1: ruleSTIfStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTIfStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTIfStatement"


    // $ANTLR start "ruleSTIfStatement"
    // InternalSTFunctionParser.g:599:1: ruleSTIfStatement : ( ( rule__STIfStatement__Group__0 ) ) ;
    public final void ruleSTIfStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:603:2: ( ( ( rule__STIfStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:604:2: ( ( rule__STIfStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:604:2: ( ( rule__STIfStatement__Group__0 ) )
            // InternalSTFunctionParser.g:605:3: ( rule__STIfStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:606:3: ( rule__STIfStatement__Group__0 )
            // InternalSTFunctionParser.g:606:4: rule__STIfStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTIfStatement"


    // $ANTLR start "entryRuleSTElseIfPart"
    // InternalSTFunctionParser.g:615:1: entryRuleSTElseIfPart : ruleSTElseIfPart EOF ;
    public final void entryRuleSTElseIfPart() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:616:1: ( ruleSTElseIfPart EOF )
            // InternalSTFunctionParser.g:617:1: ruleSTElseIfPart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElseIfPart"


    // $ANTLR start "ruleSTElseIfPart"
    // InternalSTFunctionParser.g:624:1: ruleSTElseIfPart : ( ( rule__STElseIfPart__Group__0 ) ) ;
    public final void ruleSTElseIfPart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:628:2: ( ( ( rule__STElseIfPart__Group__0 ) ) )
            // InternalSTFunctionParser.g:629:2: ( ( rule__STElseIfPart__Group__0 ) )
            {
            // InternalSTFunctionParser.g:629:2: ( ( rule__STElseIfPart__Group__0 ) )
            // InternalSTFunctionParser.g:630:3: ( rule__STElseIfPart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:631:3: ( rule__STElseIfPart__Group__0 )
            // InternalSTFunctionParser.g:631:4: rule__STElseIfPart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElseIfPart"


    // $ANTLR start "entryRuleSTCaseStatement"
    // InternalSTFunctionParser.g:640:1: entryRuleSTCaseStatement : ruleSTCaseStatement EOF ;
    public final void entryRuleSTCaseStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:641:1: ( ruleSTCaseStatement EOF )
            // InternalSTFunctionParser.g:642:1: ruleSTCaseStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseStatement"


    // $ANTLR start "ruleSTCaseStatement"
    // InternalSTFunctionParser.g:649:1: ruleSTCaseStatement : ( ( rule__STCaseStatement__Group__0 ) ) ;
    public final void ruleSTCaseStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:653:2: ( ( ( rule__STCaseStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:654:2: ( ( rule__STCaseStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:654:2: ( ( rule__STCaseStatement__Group__0 ) )
            // InternalSTFunctionParser.g:655:3: ( rule__STCaseStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:656:3: ( rule__STCaseStatement__Group__0 )
            // InternalSTFunctionParser.g:656:4: rule__STCaseStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseStatement"


    // $ANTLR start "entryRuleSTCaseCases"
    // InternalSTFunctionParser.g:665:1: entryRuleSTCaseCases : ruleSTCaseCases EOF ;
    public final void entryRuleSTCaseCases() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:666:1: ( ruleSTCaseCases EOF )
            // InternalSTFunctionParser.g:667:1: ruleSTCaseCases EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTCaseCases"


    // $ANTLR start "ruleSTCaseCases"
    // InternalSTFunctionParser.g:674:1: ruleSTCaseCases : ( ( rule__STCaseCases__Group__0 ) ) ;
    public final void ruleSTCaseCases() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:678:2: ( ( ( rule__STCaseCases__Group__0 ) ) )
            // InternalSTFunctionParser.g:679:2: ( ( rule__STCaseCases__Group__0 ) )
            {
            // InternalSTFunctionParser.g:679:2: ( ( rule__STCaseCases__Group__0 ) )
            // InternalSTFunctionParser.g:680:3: ( rule__STCaseCases__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:681:3: ( rule__STCaseCases__Group__0 )
            // InternalSTFunctionParser.g:681:4: rule__STCaseCases__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTCaseCases"


    // $ANTLR start "entryRuleSTElsePart"
    // InternalSTFunctionParser.g:690:1: entryRuleSTElsePart : ruleSTElsePart EOF ;
    public final void entryRuleSTElsePart() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:691:1: ( ruleSTElsePart EOF )
            // InternalSTFunctionParser.g:692:1: ruleSTElsePart EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTElsePart"


    // $ANTLR start "ruleSTElsePart"
    // InternalSTFunctionParser.g:699:1: ruleSTElsePart : ( ( rule__STElsePart__Group__0 ) ) ;
    public final void ruleSTElsePart() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:703:2: ( ( ( rule__STElsePart__Group__0 ) ) )
            // InternalSTFunctionParser.g:704:2: ( ( rule__STElsePart__Group__0 ) )
            {
            // InternalSTFunctionParser.g:704:2: ( ( rule__STElsePart__Group__0 ) )
            // InternalSTFunctionParser.g:705:3: ( rule__STElsePart__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:706:3: ( rule__STElsePart__Group__0 )
            // InternalSTFunctionParser.g:706:4: rule__STElsePart__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTElsePart"


    // $ANTLR start "entryRuleSTForStatement"
    // InternalSTFunctionParser.g:715:1: entryRuleSTForStatement : ruleSTForStatement EOF ;
    public final void entryRuleSTForStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:716:1: ( ruleSTForStatement EOF )
            // InternalSTFunctionParser.g:717:1: ruleSTForStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTForStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTForStatement"


    // $ANTLR start "ruleSTForStatement"
    // InternalSTFunctionParser.g:724:1: ruleSTForStatement : ( ( rule__STForStatement__Group__0 ) ) ;
    public final void ruleSTForStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:728:2: ( ( ( rule__STForStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:729:2: ( ( rule__STForStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:729:2: ( ( rule__STForStatement__Group__0 ) )
            // InternalSTFunctionParser.g:730:3: ( rule__STForStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:731:3: ( rule__STForStatement__Group__0 )
            // InternalSTFunctionParser.g:731:4: rule__STForStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTForStatement"


    // $ANTLR start "entryRuleSTWhileStatement"
    // InternalSTFunctionParser.g:740:1: entryRuleSTWhileStatement : ruleSTWhileStatement EOF ;
    public final void entryRuleSTWhileStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:741:1: ( ruleSTWhileStatement EOF )
            // InternalSTFunctionParser.g:742:1: ruleSTWhileStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTWhileStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTWhileStatement"


    // $ANTLR start "ruleSTWhileStatement"
    // InternalSTFunctionParser.g:749:1: ruleSTWhileStatement : ( ( rule__STWhileStatement__Group__0 ) ) ;
    public final void ruleSTWhileStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:753:2: ( ( ( rule__STWhileStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:754:2: ( ( rule__STWhileStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:754:2: ( ( rule__STWhileStatement__Group__0 ) )
            // InternalSTFunctionParser.g:755:3: ( rule__STWhileStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:756:3: ( rule__STWhileStatement__Group__0 )
            // InternalSTFunctionParser.g:756:4: rule__STWhileStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTWhileStatement"


    // $ANTLR start "entryRuleSTRepeatStatement"
    // InternalSTFunctionParser.g:765:1: entryRuleSTRepeatStatement : ruleSTRepeatStatement EOF ;
    public final void entryRuleSTRepeatStatement() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:766:1: ( ruleSTRepeatStatement EOF )
            // InternalSTFunctionParser.g:767:1: ruleSTRepeatStatement EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTRepeatStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTRepeatStatement"


    // $ANTLR start "ruleSTRepeatStatement"
    // InternalSTFunctionParser.g:774:1: ruleSTRepeatStatement : ( ( rule__STRepeatStatement__Group__0 ) ) ;
    public final void ruleSTRepeatStatement() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:778:2: ( ( ( rule__STRepeatStatement__Group__0 ) ) )
            // InternalSTFunctionParser.g:779:2: ( ( rule__STRepeatStatement__Group__0 ) )
            {
            // InternalSTFunctionParser.g:779:2: ( ( rule__STRepeatStatement__Group__0 ) )
            // InternalSTFunctionParser.g:780:3: ( rule__STRepeatStatement__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:781:3: ( rule__STRepeatStatement__Group__0 )
            // InternalSTFunctionParser.g:781:4: rule__STRepeatStatement__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTRepeatStatement"


    // $ANTLR start "entryRuleSTExpression"
    // InternalSTFunctionParser.g:790:1: entryRuleSTExpression : ruleSTExpression EOF ;
    public final void entryRuleSTExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:791:1: ( ruleSTExpression EOF )
            // InternalSTFunctionParser.g:792:1: ruleSTExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTExpression"


    // $ANTLR start "ruleSTExpression"
    // InternalSTFunctionParser.g:799:1: ruleSTExpression : ( ruleSTSubrangeExpression ) ;
    public final void ruleSTExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:803:2: ( ( ruleSTSubrangeExpression ) )
            // InternalSTFunctionParser.g:804:2: ( ruleSTSubrangeExpression )
            {
            // InternalSTFunctionParser.g:804:2: ( ruleSTSubrangeExpression )
            // InternalSTFunctionParser.g:805:3: ruleSTSubrangeExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTExpressionAccess().getSTSubrangeExpressionParserRuleCall()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTExpression"


    // $ANTLR start "entryRuleSTSubrangeExpression"
    // InternalSTFunctionParser.g:815:1: entryRuleSTSubrangeExpression : ruleSTSubrangeExpression EOF ;
    public final void entryRuleSTSubrangeExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:816:1: ( ruleSTSubrangeExpression EOF )
            // InternalSTFunctionParser.g:817:1: ruleSTSubrangeExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTSubrangeExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTSubrangeExpression"


    // $ANTLR start "ruleSTSubrangeExpression"
    // InternalSTFunctionParser.g:824:1: ruleSTSubrangeExpression : ( ( rule__STSubrangeExpression__Group__0 ) ) ;
    public final void ruleSTSubrangeExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:828:2: ( ( ( rule__STSubrangeExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:829:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:829:2: ( ( rule__STSubrangeExpression__Group__0 ) )
            // InternalSTFunctionParser.g:830:3: ( rule__STSubrangeExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:831:3: ( rule__STSubrangeExpression__Group__0 )
            // InternalSTFunctionParser.g:831:4: rule__STSubrangeExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTSubrangeExpression"


    // $ANTLR start "entryRuleSTOrExpression"
    // InternalSTFunctionParser.g:840:1: entryRuleSTOrExpression : ruleSTOrExpression EOF ;
    public final void entryRuleSTOrExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:841:1: ( ruleSTOrExpression EOF )
            // InternalSTFunctionParser.g:842:1: ruleSTOrExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTOrExpression"


    // $ANTLR start "ruleSTOrExpression"
    // InternalSTFunctionParser.g:849:1: ruleSTOrExpression : ( ( rule__STOrExpression__Group__0 ) ) ;
    public final void ruleSTOrExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:853:2: ( ( ( rule__STOrExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:854:2: ( ( rule__STOrExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:854:2: ( ( rule__STOrExpression__Group__0 ) )
            // InternalSTFunctionParser.g:855:3: ( rule__STOrExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:856:3: ( rule__STOrExpression__Group__0 )
            // InternalSTFunctionParser.g:856:4: rule__STOrExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTOrExpression"


    // $ANTLR start "entryRuleSTXorExpression"
    // InternalSTFunctionParser.g:865:1: entryRuleSTXorExpression : ruleSTXorExpression EOF ;
    public final void entryRuleSTXorExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:866:1: ( ruleSTXorExpression EOF )
            // InternalSTFunctionParser.g:867:1: ruleSTXorExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTXorExpression"


    // $ANTLR start "ruleSTXorExpression"
    // InternalSTFunctionParser.g:874:1: ruleSTXorExpression : ( ( rule__STXorExpression__Group__0 ) ) ;
    public final void ruleSTXorExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:878:2: ( ( ( rule__STXorExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:879:2: ( ( rule__STXorExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:879:2: ( ( rule__STXorExpression__Group__0 ) )
            // InternalSTFunctionParser.g:880:3: ( rule__STXorExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:881:3: ( rule__STXorExpression__Group__0 )
            // InternalSTFunctionParser.g:881:4: rule__STXorExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTXorExpression"


    // $ANTLR start "entryRuleSTAndExpression"
    // InternalSTFunctionParser.g:890:1: entryRuleSTAndExpression : ruleSTAndExpression EOF ;
    public final void entryRuleSTAndExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:891:1: ( ruleSTAndExpression EOF )
            // InternalSTFunctionParser.g:892:1: ruleSTAndExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAndExpression"


    // $ANTLR start "ruleSTAndExpression"
    // InternalSTFunctionParser.g:899:1: ruleSTAndExpression : ( ( rule__STAndExpression__Group__0 ) ) ;
    public final void ruleSTAndExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:903:2: ( ( ( rule__STAndExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:904:2: ( ( rule__STAndExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:904:2: ( ( rule__STAndExpression__Group__0 ) )
            // InternalSTFunctionParser.g:905:3: ( rule__STAndExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:906:3: ( rule__STAndExpression__Group__0 )
            // InternalSTFunctionParser.g:906:4: rule__STAndExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAndExpression"


    // $ANTLR start "entryRuleSTEqualityExpression"
    // InternalSTFunctionParser.g:915:1: entryRuleSTEqualityExpression : ruleSTEqualityExpression EOF ;
    public final void entryRuleSTEqualityExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:916:1: ( ruleSTEqualityExpression EOF )
            // InternalSTFunctionParser.g:917:1: ruleSTEqualityExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTEqualityExpression"


    // $ANTLR start "ruleSTEqualityExpression"
    // InternalSTFunctionParser.g:924:1: ruleSTEqualityExpression : ( ( rule__STEqualityExpression__Group__0 ) ) ;
    public final void ruleSTEqualityExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:928:2: ( ( ( rule__STEqualityExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:929:2: ( ( rule__STEqualityExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:929:2: ( ( rule__STEqualityExpression__Group__0 ) )
            // InternalSTFunctionParser.g:930:3: ( rule__STEqualityExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:931:3: ( rule__STEqualityExpression__Group__0 )
            // InternalSTFunctionParser.g:931:4: rule__STEqualityExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTEqualityExpression"


    // $ANTLR start "entryRuleSTComparisonExpression"
    // InternalSTFunctionParser.g:940:1: entryRuleSTComparisonExpression : ruleSTComparisonExpression EOF ;
    public final void entryRuleSTComparisonExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:941:1: ( ruleSTComparisonExpression EOF )
            // InternalSTFunctionParser.g:942:1: ruleSTComparisonExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTComparisonExpression"


    // $ANTLR start "ruleSTComparisonExpression"
    // InternalSTFunctionParser.g:949:1: ruleSTComparisonExpression : ( ( rule__STComparisonExpression__Group__0 ) ) ;
    public final void ruleSTComparisonExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:953:2: ( ( ( rule__STComparisonExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:954:2: ( ( rule__STComparisonExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:954:2: ( ( rule__STComparisonExpression__Group__0 ) )
            // InternalSTFunctionParser.g:955:3: ( rule__STComparisonExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:956:3: ( rule__STComparisonExpression__Group__0 )
            // InternalSTFunctionParser.g:956:4: rule__STComparisonExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTComparisonExpression"


    // $ANTLR start "entryRuleSTAddSubExpression"
    // InternalSTFunctionParser.g:965:1: entryRuleSTAddSubExpression : ruleSTAddSubExpression EOF ;
    public final void entryRuleSTAddSubExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:966:1: ( ruleSTAddSubExpression EOF )
            // InternalSTFunctionParser.g:967:1: ruleSTAddSubExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAddSubExpression"


    // $ANTLR start "ruleSTAddSubExpression"
    // InternalSTFunctionParser.g:974:1: ruleSTAddSubExpression : ( ( rule__STAddSubExpression__Group__0 ) ) ;
    public final void ruleSTAddSubExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:978:2: ( ( ( rule__STAddSubExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:979:2: ( ( rule__STAddSubExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:979:2: ( ( rule__STAddSubExpression__Group__0 ) )
            // InternalSTFunctionParser.g:980:3: ( rule__STAddSubExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:981:3: ( rule__STAddSubExpression__Group__0 )
            // InternalSTFunctionParser.g:981:4: rule__STAddSubExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAddSubExpression"


    // $ANTLR start "entryRuleSTMulDivModExpression"
    // InternalSTFunctionParser.g:990:1: entryRuleSTMulDivModExpression : ruleSTMulDivModExpression EOF ;
    public final void entryRuleSTMulDivModExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:991:1: ( ruleSTMulDivModExpression EOF )
            // InternalSTFunctionParser.g:992:1: ruleSTMulDivModExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMulDivModExpression"


    // $ANTLR start "ruleSTMulDivModExpression"
    // InternalSTFunctionParser.g:999:1: ruleSTMulDivModExpression : ( ( rule__STMulDivModExpression__Group__0 ) ) ;
    public final void ruleSTMulDivModExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1003:2: ( ( ( rule__STMulDivModExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1004:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1004:2: ( ( rule__STMulDivModExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1005:3: ( rule__STMulDivModExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1006:3: ( rule__STMulDivModExpression__Group__0 )
            // InternalSTFunctionParser.g:1006:4: rule__STMulDivModExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMulDivModExpression"


    // $ANTLR start "entryRuleSTPowerExpression"
    // InternalSTFunctionParser.g:1015:1: entryRuleSTPowerExpression : ruleSTPowerExpression EOF ;
    public final void entryRuleSTPowerExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1016:1: ( ruleSTPowerExpression EOF )
            // InternalSTFunctionParser.g:1017:1: ruleSTPowerExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPowerExpression"


    // $ANTLR start "ruleSTPowerExpression"
    // InternalSTFunctionParser.g:1024:1: ruleSTPowerExpression : ( ( rule__STPowerExpression__Group__0 ) ) ;
    public final void ruleSTPowerExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1028:2: ( ( ( rule__STPowerExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1029:2: ( ( rule__STPowerExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1029:2: ( ( rule__STPowerExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1030:3: ( rule__STPowerExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1031:3: ( rule__STPowerExpression__Group__0 )
            // InternalSTFunctionParser.g:1031:4: rule__STPowerExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPowerExpression"


    // $ANTLR start "entryRuleSTUnaryExpression"
    // InternalSTFunctionParser.g:1040:1: entryRuleSTUnaryExpression : ruleSTUnaryExpression EOF ;
    public final void entryRuleSTUnaryExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1041:1: ( ruleSTUnaryExpression EOF )
            // InternalSTFunctionParser.g:1042:1: ruleSTUnaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTUnaryExpression"


    // $ANTLR start "ruleSTUnaryExpression"
    // InternalSTFunctionParser.g:1049:1: ruleSTUnaryExpression : ( ( rule__STUnaryExpression__Alternatives ) ) ;
    public final void ruleSTUnaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1053:2: ( ( ( rule__STUnaryExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:1054:2: ( ( rule__STUnaryExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1054:2: ( ( rule__STUnaryExpression__Alternatives ) )
            // InternalSTFunctionParser.g:1055:3: ( rule__STUnaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1056:3: ( rule__STUnaryExpression__Alternatives )
            // InternalSTFunctionParser.g:1056:4: rule__STUnaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTUnaryExpression"


    // $ANTLR start "entryRuleSTAccessExpression"
    // InternalSTFunctionParser.g:1065:1: entryRuleSTAccessExpression : ruleSTAccessExpression EOF ;
    public final void entryRuleSTAccessExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1066:1: ( ruleSTAccessExpression EOF )
            // InternalSTFunctionParser.g:1067:1: ruleSTAccessExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAccessExpression"


    // $ANTLR start "ruleSTAccessExpression"
    // InternalSTFunctionParser.g:1074:1: ruleSTAccessExpression : ( ( rule__STAccessExpression__Group__0 ) ) ;
    public final void ruleSTAccessExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1078:2: ( ( ( rule__STAccessExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1079:2: ( ( rule__STAccessExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1079:2: ( ( rule__STAccessExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1080:3: ( rule__STAccessExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1081:3: ( rule__STAccessExpression__Group__0 )
            // InternalSTFunctionParser.g:1081:4: rule__STAccessExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAccessExpression"


    // $ANTLR start "entryRuleSTPrimaryExpression"
    // InternalSTFunctionParser.g:1090:1: entryRuleSTPrimaryExpression : ruleSTPrimaryExpression EOF ;
    public final void entryRuleSTPrimaryExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1091:1: ( ruleSTPrimaryExpression EOF )
            // InternalSTFunctionParser.g:1092:1: ruleSTPrimaryExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTPrimaryExpression"


    // $ANTLR start "ruleSTPrimaryExpression"
    // InternalSTFunctionParser.g:1099:1: ruleSTPrimaryExpression : ( ( rule__STPrimaryExpression__Alternatives ) ) ;
    public final void ruleSTPrimaryExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1103:2: ( ( ( rule__STPrimaryExpression__Alternatives ) ) )
            // InternalSTFunctionParser.g:1104:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1104:2: ( ( rule__STPrimaryExpression__Alternatives ) )
            // InternalSTFunctionParser.g:1105:3: ( rule__STPrimaryExpression__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1106:3: ( rule__STPrimaryExpression__Alternatives )
            // InternalSTFunctionParser.g:1106:4: rule__STPrimaryExpression__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTPrimaryExpression"


    // $ANTLR start "entryRuleSTFeatureExpression"
    // InternalSTFunctionParser.g:1115:1: entryRuleSTFeatureExpression : ruleSTFeatureExpression EOF ;
    public final void entryRuleSTFeatureExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1116:1: ( ruleSTFeatureExpression EOF )
            // InternalSTFunctionParser.g:1117:1: ruleSTFeatureExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTFeatureExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTFeatureExpression"


    // $ANTLR start "ruleSTFeatureExpression"
    // InternalSTFunctionParser.g:1124:1: ruleSTFeatureExpression : ( ( rule__STFeatureExpression__Group__0 ) ) ;
    public final void ruleSTFeatureExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1128:2: ( ( ( rule__STFeatureExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1129:2: ( ( rule__STFeatureExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1129:2: ( ( rule__STFeatureExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1130:3: ( rule__STFeatureExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1131:3: ( rule__STFeatureExpression__Group__0 )
            // InternalSTFunctionParser.g:1131:4: rule__STFeatureExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTFeatureExpression"


    // $ANTLR start "entryRuleSTMultibitPartialExpression"
    // InternalSTFunctionParser.g:1140:1: entryRuleSTMultibitPartialExpression : ruleSTMultibitPartialExpression EOF ;
    public final void entryRuleSTMultibitPartialExpression() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1141:1: ( ruleSTMultibitPartialExpression EOF )
            // InternalSTFunctionParser.g:1142:1: ruleSTMultibitPartialExpression EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTMultibitPartialExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTMultibitPartialExpression"


    // $ANTLR start "ruleSTMultibitPartialExpression"
    // InternalSTFunctionParser.g:1149:1: ruleSTMultibitPartialExpression : ( ( rule__STMultibitPartialExpression__Group__0 ) ) ;
    public final void ruleSTMultibitPartialExpression() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1153:2: ( ( ( rule__STMultibitPartialExpression__Group__0 ) ) )
            // InternalSTFunctionParser.g:1154:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1154:2: ( ( rule__STMultibitPartialExpression__Group__0 ) )
            // InternalSTFunctionParser.g:1155:3: ( rule__STMultibitPartialExpression__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1156:3: ( rule__STMultibitPartialExpression__Group__0 )
            // InternalSTFunctionParser.g:1156:4: rule__STMultibitPartialExpression__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultibitPartialExpression"


    // $ANTLR start "entryRuleSTLiteralExpressions"
    // InternalSTFunctionParser.g:1165:1: entryRuleSTLiteralExpressions : ruleSTLiteralExpressions EOF ;
    public final void entryRuleSTLiteralExpressions() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1166:1: ( ruleSTLiteralExpressions EOF )
            // InternalSTFunctionParser.g:1167:1: ruleSTLiteralExpressions EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTLiteralExpressions();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTLiteralExpressions"


    // $ANTLR start "ruleSTLiteralExpressions"
    // InternalSTFunctionParser.g:1174:1: ruleSTLiteralExpressions : ( ( rule__STLiteralExpressions__Alternatives ) ) ;
    public final void ruleSTLiteralExpressions() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1178:2: ( ( ( rule__STLiteralExpressions__Alternatives ) ) )
            // InternalSTFunctionParser.g:1179:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1179:2: ( ( rule__STLiteralExpressions__Alternatives ) )
            // InternalSTFunctionParser.g:1180:3: ( rule__STLiteralExpressions__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1181:3: ( rule__STLiteralExpressions__Alternatives )
            // InternalSTFunctionParser.g:1181:4: rule__STLiteralExpressions__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STLiteralExpressions__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTLiteralExpressionsAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTLiteralExpressions"


    // $ANTLR start "entryRuleSTNumericLiteralType"
    // InternalSTFunctionParser.g:1190:1: entryRuleSTNumericLiteralType : ruleSTNumericLiteralType EOF ;
    public final void entryRuleSTNumericLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1191:1: ( ruleSTNumericLiteralType EOF )
            // InternalSTFunctionParser.g:1192:1: ruleSTNumericLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteralType"


    // $ANTLR start "ruleSTNumericLiteralType"
    // InternalSTFunctionParser.g:1199:1: ruleSTNumericLiteralType : ( ( rule__STNumericLiteralType__Alternatives ) ) ;
    public final void ruleSTNumericLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1203:2: ( ( ( rule__STNumericLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1204:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1204:2: ( ( rule__STNumericLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1205:3: ( rule__STNumericLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1206:3: ( rule__STNumericLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1206:4: rule__STNumericLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteralType"


    // $ANTLR start "entryRuleSTNumericLiteral"
    // InternalSTFunctionParser.g:1215:1: entryRuleSTNumericLiteral : ruleSTNumericLiteral EOF ;
    public final void entryRuleSTNumericLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1216:1: ( ruleSTNumericLiteral EOF )
            // InternalSTFunctionParser.g:1217:1: ruleSTNumericLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTNumericLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTNumericLiteral"


    // $ANTLR start "ruleSTNumericLiteral"
    // InternalSTFunctionParser.g:1224:1: ruleSTNumericLiteral : ( ( rule__STNumericLiteral__Group__0 ) ) ;
    public final void ruleSTNumericLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1228:2: ( ( ( rule__STNumericLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1229:2: ( ( rule__STNumericLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1229:2: ( ( rule__STNumericLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1230:3: ( rule__STNumericLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1231:3: ( rule__STNumericLiteral__Group__0 )
            // InternalSTFunctionParser.g:1231:4: rule__STNumericLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTNumericLiteral"


    // $ANTLR start "entryRuleSTDateLiteralType"
    // InternalSTFunctionParser.g:1240:1: entryRuleSTDateLiteralType : ruleSTDateLiteralType EOF ;
    public final void entryRuleSTDateLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1241:1: ( ruleSTDateLiteralType EOF )
            // InternalSTFunctionParser.g:1242:1: ruleSTDateLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteralType"


    // $ANTLR start "ruleSTDateLiteralType"
    // InternalSTFunctionParser.g:1249:1: ruleSTDateLiteralType : ( ( rule__STDateLiteralType__Alternatives ) ) ;
    public final void ruleSTDateLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1253:2: ( ( ( rule__STDateLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1254:2: ( ( rule__STDateLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1254:2: ( ( rule__STDateLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1255:3: ( rule__STDateLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1256:3: ( rule__STDateLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1256:4: rule__STDateLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteralType"


    // $ANTLR start "entryRuleSTDateLiteral"
    // InternalSTFunctionParser.g:1265:1: entryRuleSTDateLiteral : ruleSTDateLiteral EOF ;
    public final void entryRuleSTDateLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1266:1: ( ruleSTDateLiteral EOF )
            // InternalSTFunctionParser.g:1267:1: ruleSTDateLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateLiteral"


    // $ANTLR start "ruleSTDateLiteral"
    // InternalSTFunctionParser.g:1274:1: ruleSTDateLiteral : ( ( rule__STDateLiteral__Group__0 ) ) ;
    public final void ruleSTDateLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1278:2: ( ( ( rule__STDateLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1279:2: ( ( rule__STDateLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1279:2: ( ( rule__STDateLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1280:3: ( rule__STDateLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1281:3: ( rule__STDateLiteral__Group__0 )
            // InternalSTFunctionParser.g:1281:4: rule__STDateLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateLiteral"


    // $ANTLR start "entryRuleSTTimeLiteralType"
    // InternalSTFunctionParser.g:1290:1: entryRuleSTTimeLiteralType : ruleSTTimeLiteralType EOF ;
    public final void entryRuleSTTimeLiteralType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1291:1: ( ruleSTTimeLiteralType EOF )
            // InternalSTFunctionParser.g:1292:1: ruleSTTimeLiteralType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteralType"


    // $ANTLR start "ruleSTTimeLiteralType"
    // InternalSTFunctionParser.g:1299:1: ruleSTTimeLiteralType : ( ( rule__STTimeLiteralType__Alternatives ) ) ;
    public final void ruleSTTimeLiteralType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1303:2: ( ( ( rule__STTimeLiteralType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1304:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1304:2: ( ( rule__STTimeLiteralType__Alternatives ) )
            // InternalSTFunctionParser.g:1305:3: ( rule__STTimeLiteralType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1306:3: ( rule__STTimeLiteralType__Alternatives )
            // InternalSTFunctionParser.g:1306:4: rule__STTimeLiteralType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteralType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteralType"


    // $ANTLR start "entryRuleSTTimeLiteral"
    // InternalSTFunctionParser.g:1315:1: entryRuleSTTimeLiteral : ruleSTTimeLiteral EOF ;
    public final void entryRuleSTTimeLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1316:1: ( ruleSTTimeLiteral EOF )
            // InternalSTFunctionParser.g:1317:1: ruleSTTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeLiteral"


    // $ANTLR start "ruleSTTimeLiteral"
    // InternalSTFunctionParser.g:1324:1: ruleSTTimeLiteral : ( ( rule__STTimeLiteral__Group__0 ) ) ;
    public final void ruleSTTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1328:2: ( ( ( rule__STTimeLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1329:2: ( ( rule__STTimeLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1329:2: ( ( rule__STTimeLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1330:3: ( rule__STTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1331:3: ( rule__STTimeLiteral__Group__0 )
            // InternalSTFunctionParser.g:1331:4: rule__STTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeLiteral"


    // $ANTLR start "entryRuleSTTimeOfDayLiteral"
    // InternalSTFunctionParser.g:1340:1: entryRuleSTTimeOfDayLiteral : ruleSTTimeOfDayLiteral EOF ;
    public final void entryRuleSTTimeOfDayLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1341:1: ( ruleSTTimeOfDayLiteral EOF )
            // InternalSTFunctionParser.g:1342:1: ruleSTTimeOfDayLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayLiteral"


    // $ANTLR start "ruleSTTimeOfDayLiteral"
    // InternalSTFunctionParser.g:1349:1: ruleSTTimeOfDayLiteral : ( ( rule__STTimeOfDayLiteral__Group__0 ) ) ;
    public final void ruleSTTimeOfDayLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1353:2: ( ( ( rule__STTimeOfDayLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1354:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1354:2: ( ( rule__STTimeOfDayLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1355:3: ( rule__STTimeOfDayLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1356:3: ( rule__STTimeOfDayLiteral__Group__0 )
            // InternalSTFunctionParser.g:1356:4: rule__STTimeOfDayLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayLiteral"


    // $ANTLR start "entryRuleSTDateAndTimeLiteral"
    // InternalSTFunctionParser.g:1365:1: entryRuleSTDateAndTimeLiteral : ruleSTDateAndTimeLiteral EOF ;
    public final void entryRuleSTDateAndTimeLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1366:1: ( ruleSTDateAndTimeLiteral EOF )
            // InternalSTFunctionParser.g:1367:1: ruleSTDateAndTimeLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeLiteral"


    // $ANTLR start "ruleSTDateAndTimeLiteral"
    // InternalSTFunctionParser.g:1374:1: ruleSTDateAndTimeLiteral : ( ( rule__STDateAndTimeLiteral__Group__0 ) ) ;
    public final void ruleSTDateAndTimeLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1378:2: ( ( ( rule__STDateAndTimeLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1379:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1379:2: ( ( rule__STDateAndTimeLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1380:3: ( rule__STDateAndTimeLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1381:3: ( rule__STDateAndTimeLiteral__Group__0 )
            // InternalSTFunctionParser.g:1381:4: rule__STDateAndTimeLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeLiteral"


    // $ANTLR start "entryRuleSTStringLiteral"
    // InternalSTFunctionParser.g:1390:1: entryRuleSTStringLiteral : ruleSTStringLiteral EOF ;
    public final void entryRuleSTStringLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1391:1: ( ruleSTStringLiteral EOF )
            // InternalSTFunctionParser.g:1392:1: ruleSTStringLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTStringLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTStringLiteral"


    // $ANTLR start "ruleSTStringLiteral"
    // InternalSTFunctionParser.g:1399:1: ruleSTStringLiteral : ( ( rule__STStringLiteral__Group__0 ) ) ;
    public final void ruleSTStringLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1403:2: ( ( ( rule__STStringLiteral__Group__0 ) ) )
            // InternalSTFunctionParser.g:1404:2: ( ( rule__STStringLiteral__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1404:2: ( ( rule__STStringLiteral__Group__0 ) )
            // InternalSTFunctionParser.g:1405:3: ( rule__STStringLiteral__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1406:3: ( rule__STStringLiteral__Group__0 )
            // InternalSTFunctionParser.g:1406:4: rule__STStringLiteral__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTStringLiteral"


    // $ANTLR start "entryRuleSTAnyType"
    // InternalSTFunctionParser.g:1415:1: entryRuleSTAnyType : ruleSTAnyType EOF ;
    public final void entryRuleSTAnyType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1416:1: ( ruleSTAnyType EOF )
            // InternalSTFunctionParser.g:1417:1: ruleSTAnyType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyType"


    // $ANTLR start "ruleSTAnyType"
    // InternalSTFunctionParser.g:1424:1: ruleSTAnyType : ( ( rule__STAnyType__Alternatives ) ) ;
    public final void ruleSTAnyType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1428:2: ( ( ( rule__STAnyType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1429:2: ( ( rule__STAnyType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1429:2: ( ( rule__STAnyType__Alternatives ) )
            // InternalSTFunctionParser.g:1430:3: ( rule__STAnyType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1431:3: ( rule__STAnyType__Alternatives )
            // InternalSTFunctionParser.g:1431:4: rule__STAnyType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyType"


    // $ANTLR start "entryRuleSTAnyBuiltinType"
    // InternalSTFunctionParser.g:1440:1: entryRuleSTAnyBuiltinType : ruleSTAnyBuiltinType EOF ;
    public final void entryRuleSTAnyBuiltinType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1441:1: ( ruleSTAnyBuiltinType EOF )
            // InternalSTFunctionParser.g:1442:1: ruleSTAnyBuiltinType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBuiltinType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBuiltinType"


    // $ANTLR start "ruleSTAnyBuiltinType"
    // InternalSTFunctionParser.g:1449:1: ruleSTAnyBuiltinType : ( ( rule__STAnyBuiltinType__Alternatives ) ) ;
    public final void ruleSTAnyBuiltinType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1453:2: ( ( ( rule__STAnyBuiltinType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1454:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1454:2: ( ( rule__STAnyBuiltinType__Alternatives ) )
            // InternalSTFunctionParser.g:1455:3: ( rule__STAnyBuiltinType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1456:3: ( rule__STAnyBuiltinType__Alternatives )
            // InternalSTFunctionParser.g:1456:4: rule__STAnyBuiltinType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBuiltinType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBuiltinTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBuiltinType"


    // $ANTLR start "entryRuleSTAnyBitType"
    // InternalSTFunctionParser.g:1465:1: entryRuleSTAnyBitType : ruleSTAnyBitType EOF ;
    public final void entryRuleSTAnyBitType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1466:1: ( ruleSTAnyBitType EOF )
            // InternalSTFunctionParser.g:1467:1: ruleSTAnyBitType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyBitType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyBitType"


    // $ANTLR start "ruleSTAnyBitType"
    // InternalSTFunctionParser.g:1474:1: ruleSTAnyBitType : ( ( rule__STAnyBitType__Alternatives ) ) ;
    public final void ruleSTAnyBitType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1478:2: ( ( ( rule__STAnyBitType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1479:2: ( ( rule__STAnyBitType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1479:2: ( ( rule__STAnyBitType__Alternatives ) )
            // InternalSTFunctionParser.g:1480:3: ( rule__STAnyBitType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1481:3: ( rule__STAnyBitType__Alternatives )
            // InternalSTFunctionParser.g:1481:4: rule__STAnyBitType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyBitType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyBitTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyBitType"


    // $ANTLR start "entryRuleSTAnyNumType"
    // InternalSTFunctionParser.g:1490:1: entryRuleSTAnyNumType : ruleSTAnyNumType EOF ;
    public final void entryRuleSTAnyNumType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1491:1: ( ruleSTAnyNumType EOF )
            // InternalSTFunctionParser.g:1492:1: ruleSTAnyNumType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyNumType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyNumType"


    // $ANTLR start "ruleSTAnyNumType"
    // InternalSTFunctionParser.g:1499:1: ruleSTAnyNumType : ( ( rule__STAnyNumType__Alternatives ) ) ;
    public final void ruleSTAnyNumType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1503:2: ( ( ( rule__STAnyNumType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1504:2: ( ( rule__STAnyNumType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1504:2: ( ( rule__STAnyNumType__Alternatives ) )
            // InternalSTFunctionParser.g:1505:3: ( rule__STAnyNumType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1506:3: ( rule__STAnyNumType__Alternatives )
            // InternalSTFunctionParser.g:1506:4: rule__STAnyNumType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyNumType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyNumTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyNumType"


    // $ANTLR start "entryRuleSTAnyDurationType"
    // InternalSTFunctionParser.g:1515:1: entryRuleSTAnyDurationType : ruleSTAnyDurationType EOF ;
    public final void entryRuleSTAnyDurationType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1516:1: ( ruleSTAnyDurationType EOF )
            // InternalSTFunctionParser.g:1517:1: ruleSTAnyDurationType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDurationType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDurationType"


    // $ANTLR start "ruleSTAnyDurationType"
    // InternalSTFunctionParser.g:1524:1: ruleSTAnyDurationType : ( ( rule__STAnyDurationType__Alternatives ) ) ;
    public final void ruleSTAnyDurationType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1528:2: ( ( ( rule__STAnyDurationType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1529:2: ( ( rule__STAnyDurationType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1529:2: ( ( rule__STAnyDurationType__Alternatives ) )
            // InternalSTFunctionParser.g:1530:3: ( rule__STAnyDurationType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1531:3: ( rule__STAnyDurationType__Alternatives )
            // InternalSTFunctionParser.g:1531:4: rule__STAnyDurationType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDurationType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDurationTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDurationType"


    // $ANTLR start "entryRuleSTAnyDateType"
    // InternalSTFunctionParser.g:1540:1: entryRuleSTAnyDateType : ruleSTAnyDateType EOF ;
    public final void entryRuleSTAnyDateType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1541:1: ( ruleSTAnyDateType EOF )
            // InternalSTFunctionParser.g:1542:1: ruleSTAnyDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyDateType"


    // $ANTLR start "ruleSTAnyDateType"
    // InternalSTFunctionParser.g:1549:1: ruleSTAnyDateType : ( ( rule__STAnyDateType__Alternatives ) ) ;
    public final void ruleSTAnyDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1553:2: ( ( ( rule__STAnyDateType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1554:2: ( ( rule__STAnyDateType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1554:2: ( ( rule__STAnyDateType__Alternatives ) )
            // InternalSTFunctionParser.g:1555:3: ( rule__STAnyDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1556:3: ( rule__STAnyDateType__Alternatives )
            // InternalSTFunctionParser.g:1556:4: rule__STAnyDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyDateType"


    // $ANTLR start "entryRuleSTDateType"
    // InternalSTFunctionParser.g:1565:1: entryRuleSTDateType : ruleSTDateType EOF ;
    public final void entryRuleSTDateType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1566:1: ( ruleSTDateType EOF )
            // InternalSTFunctionParser.g:1567:1: ruleSTDateType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateType"


    // $ANTLR start "ruleSTDateType"
    // InternalSTFunctionParser.g:1574:1: ruleSTDateType : ( ( rule__STDateType__Alternatives ) ) ;
    public final void ruleSTDateType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1578:2: ( ( ( rule__STDateType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1579:2: ( ( rule__STDateType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1579:2: ( ( rule__STDateType__Alternatives ) )
            // InternalSTFunctionParser.g:1580:3: ( rule__STDateType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1581:3: ( rule__STDateType__Alternatives )
            // InternalSTFunctionParser.g:1581:4: rule__STDateType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateType"


    // $ANTLR start "entryRuleSTTimeOfDayType"
    // InternalSTFunctionParser.g:1590:1: entryRuleSTTimeOfDayType : ruleSTTimeOfDayType EOF ;
    public final void entryRuleSTTimeOfDayType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1591:1: ( ruleSTTimeOfDayType EOF )
            // InternalSTFunctionParser.g:1592:1: ruleSTTimeOfDayType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTTimeOfDayType"


    // $ANTLR start "ruleSTTimeOfDayType"
    // InternalSTFunctionParser.g:1599:1: ruleSTTimeOfDayType : ( ( rule__STTimeOfDayType__Alternatives ) ) ;
    public final void ruleSTTimeOfDayType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1603:2: ( ( ( rule__STTimeOfDayType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1604:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1604:2: ( ( rule__STTimeOfDayType__Alternatives ) )
            // InternalSTFunctionParser.g:1605:3: ( rule__STTimeOfDayType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1606:3: ( rule__STTimeOfDayType__Alternatives )
            // InternalSTFunctionParser.g:1606:4: rule__STTimeOfDayType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTTimeOfDayType"


    // $ANTLR start "entryRuleSTDateAndTimeType"
    // InternalSTFunctionParser.g:1615:1: entryRuleSTDateAndTimeType : ruleSTDateAndTimeType EOF ;
    public final void entryRuleSTDateAndTimeType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1616:1: ( ruleSTDateAndTimeType EOF )
            // InternalSTFunctionParser.g:1617:1: ruleSTDateAndTimeType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTDateAndTimeType"


    // $ANTLR start "ruleSTDateAndTimeType"
    // InternalSTFunctionParser.g:1624:1: ruleSTDateAndTimeType : ( ( rule__STDateAndTimeType__Alternatives ) ) ;
    public final void ruleSTDateAndTimeType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1628:2: ( ( ( rule__STDateAndTimeType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1629:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1629:2: ( ( rule__STDateAndTimeType__Alternatives ) )
            // InternalSTFunctionParser.g:1630:3: ( rule__STDateAndTimeType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1631:3: ( rule__STDateAndTimeType__Alternatives )
            // InternalSTFunctionParser.g:1631:4: rule__STDateAndTimeType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTDateAndTimeType"


    // $ANTLR start "entryRuleSTAnyCharsType"
    // InternalSTFunctionParser.g:1640:1: entryRuleSTAnyCharsType : ruleSTAnyCharsType EOF ;
    public final void entryRuleSTAnyCharsType() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1641:1: ( ruleSTAnyCharsType EOF )
            // InternalSTFunctionParser.g:1642:1: ruleSTAnyCharsType EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleSTAnyCharsType"


    // $ANTLR start "ruleSTAnyCharsType"
    // InternalSTFunctionParser.g:1649:1: ruleSTAnyCharsType : ( ( rule__STAnyCharsType__Alternatives ) ) ;
    public final void ruleSTAnyCharsType() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1653:2: ( ( ( rule__STAnyCharsType__Alternatives ) ) )
            // InternalSTFunctionParser.g:1654:2: ( ( rule__STAnyCharsType__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1654:2: ( ( rule__STAnyCharsType__Alternatives ) )
            // InternalSTFunctionParser.g:1655:3: ( rule__STAnyCharsType__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1656:3: ( rule__STAnyCharsType__Alternatives )
            // InternalSTFunctionParser.g:1656:4: rule__STAnyCharsType__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STAnyCharsType__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAnyCharsTypeAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTAnyCharsType"


    // $ANTLR start "entryRuleBoolLiteral"
    // InternalSTFunctionParser.g:1665:1: entryRuleBoolLiteral : ruleBoolLiteral EOF ;
    public final void entryRuleBoolLiteral() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1666:1: ( ruleBoolLiteral EOF )
            // InternalSTFunctionParser.g:1667:1: ruleBoolLiteral EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleBoolLiteral();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleBoolLiteral"


    // $ANTLR start "ruleBoolLiteral"
    // InternalSTFunctionParser.g:1674:1: ruleBoolLiteral : ( ( rule__BoolLiteral__Alternatives ) ) ;
    public final void ruleBoolLiteral() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1678:2: ( ( ( rule__BoolLiteral__Alternatives ) ) )
            // InternalSTFunctionParser.g:1679:2: ( ( rule__BoolLiteral__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1679:2: ( ( rule__BoolLiteral__Alternatives ) )
            // InternalSTFunctionParser.g:1680:3: ( rule__BoolLiteral__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1681:3: ( rule__BoolLiteral__Alternatives )
            // InternalSTFunctionParser.g:1681:4: rule__BoolLiteral__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__BoolLiteral__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getBoolLiteralAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleBoolLiteral"


    // $ANTLR start "entryRuleNumber"
    // InternalSTFunctionParser.g:1690:1: entryRuleNumber : ruleNumber EOF ;
    public final void entryRuleNumber() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1691:1: ( ruleNumber EOF )
            // InternalSTFunctionParser.g:1692:1: ruleNumber EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleNumber"


    // $ANTLR start "ruleNumber"
    // InternalSTFunctionParser.g:1699:1: ruleNumber : ( ( rule__Number__Group__0 ) ) ;
    public final void ruleNumber() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1703:2: ( ( ( rule__Number__Group__0 ) ) )
            // InternalSTFunctionParser.g:1704:2: ( ( rule__Number__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1704:2: ( ( rule__Number__Group__0 ) )
            // InternalSTFunctionParser.g:1705:3: ( rule__Number__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1706:3: ( rule__Number__Group__0 )
            // InternalSTFunctionParser.g:1706:4: rule__Number__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleNumber"


    // $ANTLR start "entryRuleDate"
    // InternalSTFunctionParser.g:1715:1: entryRuleDate : ruleDate EOF ;
    public final void entryRuleDate() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1716:1: ( ruleDate EOF )
            // InternalSTFunctionParser.g:1717:1: ruleDate EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleDate"


    // $ANTLR start "ruleDate"
    // InternalSTFunctionParser.g:1724:1: ruleDate : ( ( rule__Date__Group__0 ) ) ;
    public final void ruleDate() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1728:2: ( ( ( rule__Date__Group__0 ) ) )
            // InternalSTFunctionParser.g:1729:2: ( ( rule__Date__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1729:2: ( ( rule__Date__Group__0 ) )
            // InternalSTFunctionParser.g:1730:3: ( rule__Date__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1731:3: ( rule__Date__Group__0 )
            // InternalSTFunctionParser.g:1731:4: rule__Date__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleDate"


    // $ANTLR start "entryRuleTimeOfDay"
    // InternalSTFunctionParser.g:1740:1: entryRuleTimeOfDay : ruleTimeOfDay EOF ;
    public final void entryRuleTimeOfDay() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1741:1: ( ruleTimeOfDay EOF )
            // InternalSTFunctionParser.g:1742:1: ruleTimeOfDay EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTimeOfDay"


    // $ANTLR start "ruleTimeOfDay"
    // InternalSTFunctionParser.g:1749:1: ruleTimeOfDay : ( ( rule__TimeOfDay__Group__0 ) ) ;
    public final void ruleTimeOfDay() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1753:2: ( ( ( rule__TimeOfDay__Group__0 ) ) )
            // InternalSTFunctionParser.g:1754:2: ( ( rule__TimeOfDay__Group__0 ) )
            {
            // InternalSTFunctionParser.g:1754:2: ( ( rule__TimeOfDay__Group__0 ) )
            // InternalSTFunctionParser.g:1755:3: ( rule__TimeOfDay__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1756:3: ( rule__TimeOfDay__Group__0 )
            // InternalSTFunctionParser.g:1756:4: rule__TimeOfDay__Group__0
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTimeOfDay"


    // $ANTLR start "entryRuleTime"
    // InternalSTFunctionParser.g:1765:1: entryRuleTime : ruleTime EOF ;
    public final void entryRuleTime() throws RecognitionException {
        try {
            // InternalSTFunctionParser.g:1766:1: ( ruleTime EOF )
            // InternalSTFunctionParser.g:1767:1: ruleTime EOF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeRule()); 
            }
            pushFollow(FOLLOW_1);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeRule()); 
            }
            match(input,EOF,FOLLOW_2); if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
        }
        return ;
    }
    // $ANTLR end "entryRuleTime"


    // $ANTLR start "ruleTime"
    // InternalSTFunctionParser.g:1774:1: ruleTime : ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) ) ;
    public final void ruleTime() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1778:2: ( ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) ) )
            // InternalSTFunctionParser.g:1779:2: ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) )
            {
            // InternalSTFunctionParser.g:1779:2: ( ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* ) )
            // InternalSTFunctionParser.g:1780:3: ( ( rule__Time__Group__0 ) ) ( ( rule__Time__Group__0 )* )
            {
            // InternalSTFunctionParser.g:1780:3: ( ( rule__Time__Group__0 ) )
            // InternalSTFunctionParser.g:1781:4: ( rule__Time__Group__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1782:4: ( rule__Time__Group__0 )
            // InternalSTFunctionParser.g:1782:5: rule__Time__Group__0
            {
            pushFollow(FOLLOW_4);
            rule__Time__Group__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }

            // InternalSTFunctionParser.g:1785:3: ( ( rule__Time__Group__0 )* )
            // InternalSTFunctionParser.g:1786:4: ( rule__Time__Group__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getGroup()); 
            }
            // InternalSTFunctionParser.g:1787:4: ( rule__Time__Group__0 )*
            loop2:
            do {
                int alt2=2;
                switch ( input.LA(1) ) {
                case PlusSign:
                    {
                    int LA2_2 = input.LA(2);

                    if ( (LA2_2==RULE_INT) ) {
                        int LA2_5 = input.LA(3);

                        if ( (LA2_5==FullStop) ) {
                            int LA2_6 = input.LA(4);

                            if ( (LA2_6==RULE_EXT_INT) ) {
                                int LA2_7 = input.LA(5);

                                if ( ((LA2_7>=MS && LA2_7<=NS)||LA2_7==US||(LA2_7>=D && LA2_7<=S)) ) {
                                    alt2=1;
                                }


                            }
                            else if ( (LA2_6==RULE_INT) ) {
                                int LA2_8 = input.LA(5);

                                if ( ((LA2_8>=MS && LA2_8<=NS)||LA2_8==US||(LA2_8>=D && LA2_8<=S)) ) {
                                    alt2=1;
                                }


                            }


                        }
                        else if ( ((LA2_5>=MS && LA2_5<=NS)||LA2_5==US||(LA2_5>=D && LA2_5<=S)) ) {
                            alt2=1;
                        }


                    }


                    }
                    break;
                case HyphenMinus:
                    {
                    int LA2_3 = input.LA(2);

                    if ( (LA2_3==RULE_INT) ) {
                        int LA2_5 = input.LA(3);

                        if ( (LA2_5==FullStop) ) {
                            int LA2_6 = input.LA(4);

                            if ( (LA2_6==RULE_EXT_INT) ) {
                                int LA2_7 = input.LA(5);

                                if ( ((LA2_7>=MS && LA2_7<=NS)||LA2_7==US||(LA2_7>=D && LA2_7<=S)) ) {
                                    alt2=1;
                                }


                            }
                            else if ( (LA2_6==RULE_INT) ) {
                                int LA2_8 = input.LA(5);

                                if ( ((LA2_8>=MS && LA2_8<=NS)||LA2_8==US||(LA2_8>=D && LA2_8<=S)) ) {
                                    alt2=1;
                                }


                            }


                        }
                        else if ( ((LA2_5>=MS && LA2_5<=NS)||LA2_5==US||(LA2_5>=D && LA2_5<=S)) ) {
                            alt2=1;
                        }


                    }


                    }
                    break;
                case RULE_INT:
                    {
                    alt2=1;
                    }
                    break;

                }

                switch (alt2) {
            	case 1 :
            	    // InternalSTFunctionParser.g:1787:5: rule__Time__Group__0
            	    {
            	    pushFollow(FOLLOW_4);
            	    rule__Time__Group__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop2;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getGroup()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleTime"


    // $ANTLR start "ruleSubrangeOperator"
    // InternalSTFunctionParser.g:1797:1: ruleSubrangeOperator : ( ( FullStopFullStop ) ) ;
    public final void ruleSubrangeOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1801:1: ( ( ( FullStopFullStop ) ) )
            // InternalSTFunctionParser.g:1802:2: ( ( FullStopFullStop ) )
            {
            // InternalSTFunctionParser.g:1802:2: ( ( FullStopFullStop ) )
            // InternalSTFunctionParser.g:1803:3: ( FullStopFullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:1804:3: ( FullStopFullStop )
            // InternalSTFunctionParser.g:1804:4: FullStopFullStop
            {
            match(input,FullStopFullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSubrangeOperatorAccess().getRangeEnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSubrangeOperator"


    // $ANTLR start "ruleOrOperator"
    // InternalSTFunctionParser.g:1813:1: ruleOrOperator : ( ( OR ) ) ;
    public final void ruleOrOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1817:1: ( ( ( OR ) ) )
            // InternalSTFunctionParser.g:1818:2: ( ( OR ) )
            {
            // InternalSTFunctionParser.g:1818:2: ( ( OR ) )
            // InternalSTFunctionParser.g:1819:3: ( OR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:1820:3: ( OR )
            // InternalSTFunctionParser.g:1820:4: OR
            {
            match(input,OR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getOrOperatorAccess().getOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleOrOperator"


    // $ANTLR start "ruleXorOperator"
    // InternalSTFunctionParser.g:1829:1: ruleXorOperator : ( ( XOR ) ) ;
    public final void ruleXorOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1833:1: ( ( ( XOR ) ) )
            // InternalSTFunctionParser.g:1834:2: ( ( XOR ) )
            {
            // InternalSTFunctionParser.g:1834:2: ( ( XOR ) )
            // InternalSTFunctionParser.g:1835:3: ( XOR )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:1836:3: ( XOR )
            // InternalSTFunctionParser.g:1836:4: XOR
            {
            match(input,XOR,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getXorOperatorAccess().getXOREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleXorOperator"


    // $ANTLR start "ruleAndOperator"
    // InternalSTFunctionParser.g:1845:1: ruleAndOperator : ( ( rule__AndOperator__Alternatives ) ) ;
    public final void ruleAndOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1849:1: ( ( ( rule__AndOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1850:2: ( ( rule__AndOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1850:2: ( ( rule__AndOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1851:3: ( rule__AndOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1852:3: ( rule__AndOperator__Alternatives )
            // InternalSTFunctionParser.g:1852:4: rule__AndOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AndOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAndOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAndOperator"


    // $ANTLR start "ruleEqualityOperator"
    // InternalSTFunctionParser.g:1861:1: ruleEqualityOperator : ( ( rule__EqualityOperator__Alternatives ) ) ;
    public final void ruleEqualityOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1865:1: ( ( ( rule__EqualityOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1866:2: ( ( rule__EqualityOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1866:2: ( ( rule__EqualityOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1867:3: ( rule__EqualityOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1868:3: ( rule__EqualityOperator__Alternatives )
            // InternalSTFunctionParser.g:1868:4: rule__EqualityOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__EqualityOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getEqualityOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleEqualityOperator"


    // $ANTLR start "ruleCompareOperator"
    // InternalSTFunctionParser.g:1877:1: ruleCompareOperator : ( ( rule__CompareOperator__Alternatives ) ) ;
    public final void ruleCompareOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1881:1: ( ( ( rule__CompareOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1882:2: ( ( rule__CompareOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1882:2: ( ( rule__CompareOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1883:3: ( rule__CompareOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1884:3: ( rule__CompareOperator__Alternatives )
            // InternalSTFunctionParser.g:1884:4: rule__CompareOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__CompareOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getCompareOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleCompareOperator"


    // $ANTLR start "ruleAddSubOperator"
    // InternalSTFunctionParser.g:1893:1: ruleAddSubOperator : ( ( rule__AddSubOperator__Alternatives ) ) ;
    public final void ruleAddSubOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1897:1: ( ( ( rule__AddSubOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1898:2: ( ( rule__AddSubOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1898:2: ( ( rule__AddSubOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1899:3: ( rule__AddSubOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1900:3: ( rule__AddSubOperator__Alternatives )
            // InternalSTFunctionParser.g:1900:4: rule__AddSubOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__AddSubOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getAddSubOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleAddSubOperator"


    // $ANTLR start "ruleMulDivModOperator"
    // InternalSTFunctionParser.g:1909:1: ruleMulDivModOperator : ( ( rule__MulDivModOperator__Alternatives ) ) ;
    public final void ruleMulDivModOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1913:1: ( ( ( rule__MulDivModOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1914:2: ( ( rule__MulDivModOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1914:2: ( ( rule__MulDivModOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1915:3: ( rule__MulDivModOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1916:3: ( rule__MulDivModOperator__Alternatives )
            // InternalSTFunctionParser.g:1916:4: rule__MulDivModOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__MulDivModOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getMulDivModOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleMulDivModOperator"


    // $ANTLR start "rulePowerOperator"
    // InternalSTFunctionParser.g:1925:1: rulePowerOperator : ( ( AsteriskAsterisk ) ) ;
    public final void rulePowerOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1929:1: ( ( ( AsteriskAsterisk ) ) )
            // InternalSTFunctionParser.g:1930:2: ( ( AsteriskAsterisk ) )
            {
            // InternalSTFunctionParser.g:1930:2: ( ( AsteriskAsterisk ) )
            // InternalSTFunctionParser.g:1931:3: ( AsteriskAsterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }
            // InternalSTFunctionParser.g:1932:3: ( AsteriskAsterisk )
            // InternalSTFunctionParser.g:1932:4: AsteriskAsterisk
            {
            match(input,AsteriskAsterisk,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getPowerOperatorAccess().getPOWEREnumLiteralDeclaration()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rulePowerOperator"


    // $ANTLR start "ruleUnaryOperator"
    // InternalSTFunctionParser.g:1941:1: ruleUnaryOperator : ( ( rule__UnaryOperator__Alternatives ) ) ;
    public final void ruleUnaryOperator() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1945:1: ( ( ( rule__UnaryOperator__Alternatives ) ) )
            // InternalSTFunctionParser.g:1946:2: ( ( rule__UnaryOperator__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1946:2: ( ( rule__UnaryOperator__Alternatives ) )
            // InternalSTFunctionParser.g:1947:3: ( rule__UnaryOperator__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1948:3: ( rule__UnaryOperator__Alternatives )
            // InternalSTFunctionParser.g:1948:4: rule__UnaryOperator__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__UnaryOperator__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getUnaryOperatorAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleUnaryOperator"


    // $ANTLR start "ruleSTMultiBitAccessSpecifier"
    // InternalSTFunctionParser.g:1957:1: ruleSTMultiBitAccessSpecifier : ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) ;
    public final void ruleSTMultiBitAccessSpecifier() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1961:1: ( ( ( rule__STMultiBitAccessSpecifier__Alternatives ) ) )
            // InternalSTFunctionParser.g:1962:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            {
            // InternalSTFunctionParser.g:1962:2: ( ( rule__STMultiBitAccessSpecifier__Alternatives ) )
            // InternalSTFunctionParser.g:1963:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }
            // InternalSTFunctionParser.g:1964:3: ( rule__STMultiBitAccessSpecifier__Alternatives )
            // InternalSTFunctionParser.g:1964:4: rule__STMultiBitAccessSpecifier__Alternatives
            {
            pushFollow(FOLLOW_2);
            rule__STMultiBitAccessSpecifier__Alternatives();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getAlternatives()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "ruleSTMultiBitAccessSpecifier"


    // $ANTLR start "rule__FunctionDefinition__Alternatives_4"
    // InternalSTFunctionParser.g:1972:1: rule__FunctionDefinition__Alternatives_4 : ( ( ( rule__FunctionDefinition__VarDeclarationsAssignment_4_0 ) ) | ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1 ) ) | ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2 ) ) | ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3 ) ) );
    public final void rule__FunctionDefinition__Alternatives_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:1976:1: ( ( ( rule__FunctionDefinition__VarDeclarationsAssignment_4_0 ) ) | ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1 ) ) | ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2 ) ) | ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3 ) ) )
            int alt3=4;
            switch ( input.LA(1) ) {
            case VAR:
                {
                alt3=1;
                }
                break;
            case VAR_TEMP:
                {
                alt3=2;
                }
                break;
            case VAR_INPUT:
                {
                alt3=3;
                }
                break;
            case VAR_OUTPUT:
                {
                alt3=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 3, 0, input);

                throw nvae;
            }

            switch (alt3) {
                case 1 :
                    // InternalSTFunctionParser.g:1977:2: ( ( rule__FunctionDefinition__VarDeclarationsAssignment_4_0 ) )
                    {
                    // InternalSTFunctionParser.g:1977:2: ( ( rule__FunctionDefinition__VarDeclarationsAssignment_4_0 ) )
                    // InternalSTFunctionParser.g:1978:3: ( rule__FunctionDefinition__VarDeclarationsAssignment_4_0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsAssignment_4_0()); 
                    }
                    // InternalSTFunctionParser.g:1979:3: ( rule__FunctionDefinition__VarDeclarationsAssignment_4_0 )
                    // InternalSTFunctionParser.g:1979:4: rule__FunctionDefinition__VarDeclarationsAssignment_4_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarDeclarationsAssignment_4_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsAssignment_4_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:1983:2: ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1 ) )
                    {
                    // InternalSTFunctionParser.g:1983:2: ( ( rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1 ) )
                    // InternalSTFunctionParser.g:1984:3: ( rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsAssignment_4_1()); 
                    }
                    // InternalSTFunctionParser.g:1985:3: ( rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1 )
                    // InternalSTFunctionParser.g:1985:4: rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsAssignment_4_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:1989:2: ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2 ) )
                    {
                    // InternalSTFunctionParser.g:1989:2: ( ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2 ) )
                    // InternalSTFunctionParser.g:1990:3: ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsAssignment_4_2()); 
                    }
                    // InternalSTFunctionParser.g:1991:3: ( rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2 )
                    // InternalSTFunctionParser.g:1991:4: rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsAssignment_4_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:1995:2: ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3 ) )
                    {
                    // InternalSTFunctionParser.g:1995:2: ( ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3 ) )
                    // InternalSTFunctionParser.g:1996:3: ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsAssignment_4_3()); 
                    }
                    // InternalSTFunctionParser.g:1997:3: ( rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3 )
                    // InternalSTFunctionParser.g:1997:4: rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsAssignment_4_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Alternatives_4"


    // $ANTLR start "rule__VarDeclaration__Alternatives_4_1"
    // InternalSTFunctionParser.g:2005:1: rule__VarDeclaration__Alternatives_4_1 : ( ( ( rule__VarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_4_1_1__0 ) ) );
    public final void rule__VarDeclaration__Alternatives_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2009:1: ( ( ( rule__VarDeclaration__Group_4_1_0__0 ) ) | ( ( rule__VarDeclaration__Group_4_1_1__0 ) ) )
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==LeftSquareBracket) ) {
                int LA4_1 = input.LA(2);

                if ( (LA4_1==Asterisk) ) {
                    alt4=2;
                }
                else if ( ((LA4_1>=LDATE_AND_TIME && LA4_1<=DATE_AND_TIME)||(LA4_1>=LTIME_OF_DAY && LA4_1<=TIME_OF_DAY)||LA4_1==WSTRING||LA4_1==STRING||LA4_1==DWORD||(LA4_1>=FALSE && LA4_1<=ULINT)||(LA4_1>=USINT && LA4_1<=WCHAR)||(LA4_1>=BOOL && LA4_1<=BYTE)||(LA4_1>=CHAR && LA4_1<=DINT)||(LA4_1>=LINT && LA4_1<=SINT)||(LA4_1>=TIME && LA4_1<=WORD)||(LA4_1>=INT && LA4_1<=LDT)||(LA4_1>=NOT && LA4_1<=TOD)||LA4_1==DT||(LA4_1>=LD && LA4_1<=LT)||LA4_1==LeftParenthesis||LA4_1==PlusSign||LA4_1==HyphenMinus||LA4_1==D||LA4_1==T||(LA4_1>=RULE_NON_DECIMAL && LA4_1<=RULE_INT)||(LA4_1>=RULE_ID && LA4_1<=RULE_WSTRING)) ) {
                    alt4=1;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 4, 1, input);

                    throw nvae;
                }
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 4, 0, input);

                throw nvae;
            }
            switch (alt4) {
                case 1 :
                    // InternalSTFunctionParser.g:2010:2: ( ( rule__VarDeclaration__Group_4_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2010:2: ( ( rule__VarDeclaration__Group_4_1_0__0 ) )
                    // InternalSTFunctionParser.g:2011:3: ( rule__VarDeclaration__Group_4_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_4_1_0()); 
                    }
                    // InternalSTFunctionParser.g:2012:3: ( rule__VarDeclaration__Group_4_1_0__0 )
                    // InternalSTFunctionParser.g:2012:4: rule__VarDeclaration__Group_4_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_4_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_4_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2016:2: ( ( rule__VarDeclaration__Group_4_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:2016:2: ( ( rule__VarDeclaration__Group_4_1_1__0 ) )
                    // InternalSTFunctionParser.g:2017:3: ( rule__VarDeclaration__Group_4_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getVarDeclarationAccess().getGroup_4_1_1()); 
                    }
                    // InternalSTFunctionParser.g:2018:3: ( rule__VarDeclaration__Group_4_1_1__0 )
                    // InternalSTFunctionParser.g:2018:4: rule__VarDeclaration__Group_4_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_4_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getVarDeclarationAccess().getGroup_4_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Alternatives_4_1"


    // $ANTLR start "rule__InitializerExpression__Alternatives"
    // InternalSTFunctionParser.g:2026:1: rule__InitializerExpression__Alternatives : ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) );
    public final void rule__InitializerExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2030:1: ( ( ruleSTExpression ) | ( ruleArrayInitializerExpression ) )
            int alt5=2;
            int LA5_0 = input.LA(1);

            if ( ((LA5_0>=LDATE_AND_TIME && LA5_0<=DATE_AND_TIME)||(LA5_0>=LTIME_OF_DAY && LA5_0<=TIME_OF_DAY)||LA5_0==WSTRING||LA5_0==STRING||LA5_0==DWORD||(LA5_0>=FALSE && LA5_0<=ULINT)||(LA5_0>=USINT && LA5_0<=WCHAR)||(LA5_0>=BOOL && LA5_0<=BYTE)||(LA5_0>=CHAR && LA5_0<=DINT)||(LA5_0>=LINT && LA5_0<=SINT)||(LA5_0>=TIME && LA5_0<=WORD)||(LA5_0>=INT && LA5_0<=LDT)||(LA5_0>=NOT && LA5_0<=TOD)||LA5_0==DT||(LA5_0>=LD && LA5_0<=LT)||LA5_0==LeftParenthesis||LA5_0==PlusSign||LA5_0==HyphenMinus||LA5_0==D||LA5_0==T||(LA5_0>=RULE_NON_DECIMAL && LA5_0<=RULE_INT)||(LA5_0>=RULE_ID && LA5_0<=RULE_WSTRING)) ) {
                alt5=1;
            }
            else if ( (LA5_0==LeftSquareBracket) ) {
                alt5=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 5, 0, input);

                throw nvae;
            }
            switch (alt5) {
                case 1 :
                    // InternalSTFunctionParser.g:2031:2: ( ruleSTExpression )
                    {
                    // InternalSTFunctionParser.g:2031:2: ( ruleSTExpression )
                    // InternalSTFunctionParser.g:2032:3: ruleSTExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getSTExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2037:2: ( ruleArrayInitializerExpression )
                    {
                    // InternalSTFunctionParser.g:2037:2: ( ruleArrayInitializerExpression )
                    // InternalSTFunctionParser.g:2038:3: ruleArrayInitializerExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleArrayInitializerExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getInitializerExpressionAccess().getArrayInitializerExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__InitializerExpression__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives"
    // InternalSTFunctionParser.g:2047:1: rule__STStatement__Alternatives : ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) );
    public final void rule__STStatement__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2051:1: ( ( ( rule__STStatement__Group_0__0 ) ) | ( ( rule__STStatement__Group_1__0 ) ) )
            int alt6=2;
            int LA6_0 = input.LA(1);

            if ( ((LA6_0>=LDATE_AND_TIME && LA6_0<=DATE_AND_TIME)||(LA6_0>=LTIME_OF_DAY && LA6_0<=TIME_OF_DAY)||LA6_0==CONTINUE||LA6_0==WSTRING||(LA6_0>=REPEAT && LA6_0<=STRING)||LA6_0==DWORD||(LA6_0>=FALSE && LA6_0<=ULINT)||(LA6_0>=USINT && LA6_0<=DINT)||(LA6_0>=EXIT && LA6_0<=SINT)||(LA6_0>=TIME && LA6_0<=WORD)||(LA6_0>=FOR && LA6_0<=LDT)||LA6_0==TOD||(LA6_0>=DT && LA6_0<=LT)||LA6_0==LeftParenthesis||LA6_0==PlusSign||LA6_0==HyphenMinus||LA6_0==D||LA6_0==T||(LA6_0>=RULE_NON_DECIMAL && LA6_0<=RULE_INT)||(LA6_0>=RULE_ID && LA6_0<=RULE_WSTRING)) ) {
                alt6=1;
            }
            else if ( (LA6_0==Semicolon) ) {
                alt6=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 6, 0, input);

                throw nvae;
            }
            switch (alt6) {
                case 1 :
                    // InternalSTFunctionParser.g:2052:2: ( ( rule__STStatement__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2052:2: ( ( rule__STStatement__Group_0__0 ) )
                    // InternalSTFunctionParser.g:2053:3: ( rule__STStatement__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:2054:3: ( rule__STStatement__Group_0__0 )
                    // InternalSTFunctionParser.g:2054:4: rule__STStatement__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2058:2: ( ( rule__STStatement__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:2058:2: ( ( rule__STStatement__Group_1__0 ) )
                    // InternalSTFunctionParser.g:2059:3: ( rule__STStatement__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:2060:3: ( rule__STStatement__Group_1__0 )
                    // InternalSTFunctionParser.g:2060:4: rule__STStatement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives"


    // $ANTLR start "rule__STStatement__Alternatives_0_0"
    // InternalSTFunctionParser.g:2068:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) );
    public final void rule__STStatement__Alternatives_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2072:1: ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) )
            int alt7=10;
            alt7 = dfa7.predict(input);
            switch (alt7) {
                case 1 :
                    // InternalSTFunctionParser.g:2073:2: ( ruleSTIfStatement )
                    {
                    // InternalSTFunctionParser.g:2073:2: ( ruleSTIfStatement )
                    // InternalSTFunctionParser.g:2074:3: ruleSTIfStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTIfStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTIfStatementParserRuleCall_0_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2079:2: ( ruleSTCaseStatement )
                    {
                    // InternalSTFunctionParser.g:2079:2: ( ruleSTCaseStatement )
                    // InternalSTFunctionParser.g:2080:3: ruleSTCaseStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCaseStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCaseStatementParserRuleCall_0_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2085:2: ( ruleSTForStatement )
                    {
                    // InternalSTFunctionParser.g:2085:2: ( ruleSTForStatement )
                    // InternalSTFunctionParser.g:2086:3: ruleSTForStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTForStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTForStatementParserRuleCall_0_0_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2091:2: ( ruleSTWhileStatement )
                    {
                    // InternalSTFunctionParser.g:2091:2: ( ruleSTWhileStatement )
                    // InternalSTFunctionParser.g:2092:3: ruleSTWhileStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTWhileStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTWhileStatementParserRuleCall_0_0_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2097:2: ( ruleSTRepeatStatement )
                    {
                    // InternalSTFunctionParser.g:2097:2: ( ruleSTRepeatStatement )
                    // InternalSTFunctionParser.g:2098:3: ruleSTRepeatStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTRepeatStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTRepeatStatementParserRuleCall_0_0_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:2103:2: ( ( ruleSTAssignmentStatement ) )
                    {
                    // InternalSTFunctionParser.g:2103:2: ( ( ruleSTAssignmentStatement ) )
                    // InternalSTFunctionParser.g:2104:3: ( ruleSTAssignmentStatement )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }
                    // InternalSTFunctionParser.g:2105:3: ( ruleSTAssignmentStatement )
                    // InternalSTFunctionParser.g:2105:4: ruleSTAssignmentStatement
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAssignmentStatement();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:2109:2: ( ruleSTCallStatement )
                    {
                    // InternalSTFunctionParser.g:2109:2: ( ruleSTCallStatement )
                    // InternalSTFunctionParser.g:2110:3: ruleSTCallStatement
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallStatement();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTFunctionParser.g:2115:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    {
                    // InternalSTFunctionParser.g:2115:2: ( ( rule__STStatement__Group_0_0_7__0 ) )
                    // InternalSTFunctionParser.g:2116:3: ( rule__STStatement__Group_0_0_7__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }
                    // InternalSTFunctionParser.g:2117:3: ( rule__STStatement__Group_0_0_7__0 )
                    // InternalSTFunctionParser.g:2117:4: rule__STStatement__Group_0_0_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTFunctionParser.g:2121:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    {
                    // InternalSTFunctionParser.g:2121:2: ( ( rule__STStatement__Group_0_0_8__0 ) )
                    // InternalSTFunctionParser.g:2122:3: ( rule__STStatement__Group_0_0_8__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }
                    // InternalSTFunctionParser.g:2123:3: ( rule__STStatement__Group_0_0_8__0 )
                    // InternalSTFunctionParser.g:2123:4: rule__STStatement__Group_0_0_8__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_8__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTFunctionParser.g:2127:2: ( ( rule__STStatement__Group_0_0_9__0 ) )
                    {
                    // InternalSTFunctionParser.g:2127:2: ( ( rule__STStatement__Group_0_0_9__0 ) )
                    // InternalSTFunctionParser.g:2128:3: ( rule__STStatement__Group_0_0_9__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStatementAccess().getGroup_0_0_9()); 
                    }
                    // InternalSTFunctionParser.g:2129:3: ( rule__STStatement__Group_0_0_9__0 )
                    // InternalSTFunctionParser.g:2129:4: rule__STStatement__Group_0_0_9__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStatement__Group_0_0_9__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStatementAccess().getGroup_0_0_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Alternatives_0_0"


    // $ANTLR start "rule__STCallArgument__Alternatives"
    // InternalSTFunctionParser.g:2137:1: rule__STCallArgument__Alternatives : ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) );
    public final void rule__STCallArgument__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2141:1: ( ( ruleSTCallUnnamedArgument ) | ( ruleSTCallNamedInputArgument ) | ( ruleSTCallNamedOutputArgument ) )
            int alt8=3;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case LeftParenthesis:
            case PlusSign:
            case HyphenMinus:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt8=1;
                }
                break;
            case RULE_ID:
                {
                switch ( input.LA(2) ) {
                case EqualsSignGreaterThanSign:
                    {
                    alt8=3;
                    }
                    break;
                case EOF:
                case AND:
                case MOD:
                case XOR:
                case AsteriskAsterisk:
                case FullStopFullStop:
                case LessThanSignEqualsSign:
                case LessThanSignGreaterThanSign:
                case GreaterThanSignEqualsSign:
                case OR:
                case Ampersand:
                case LeftParenthesis:
                case RightParenthesis:
                case Asterisk:
                case PlusSign:
                case Comma:
                case HyphenMinus:
                case FullStop:
                case Solidus:
                case LessThanSign:
                case EqualsSign:
                case GreaterThanSign:
                case LeftSquareBracket:
                    {
                    alt8=1;
                    }
                    break;
                case ColonEqualsSign:
                    {
                    alt8=2;
                    }
                    break;
                default:
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 2, input);

                    throw nvae;
                }

                }
                break;
            case NOT:
                {
                int LA8_3 = input.LA(2);

                if ( ((LA8_3>=LDATE_AND_TIME && LA8_3<=DATE_AND_TIME)||(LA8_3>=LTIME_OF_DAY && LA8_3<=TIME_OF_DAY)||LA8_3==WSTRING||LA8_3==STRING||LA8_3==DWORD||(LA8_3>=FALSE && LA8_3<=ULINT)||(LA8_3>=USINT && LA8_3<=WCHAR)||(LA8_3>=BOOL && LA8_3<=BYTE)||(LA8_3>=CHAR && LA8_3<=DINT)||(LA8_3>=LINT && LA8_3<=SINT)||(LA8_3>=TIME && LA8_3<=WORD)||(LA8_3>=INT && LA8_3<=LDT)||(LA8_3>=NOT && LA8_3<=TOD)||LA8_3==DT||(LA8_3>=LD && LA8_3<=LT)||LA8_3==LeftParenthesis||LA8_3==PlusSign||LA8_3==HyphenMinus||LA8_3==D||LA8_3==T||(LA8_3>=RULE_NON_DECIMAL && LA8_3<=RULE_INT)||(LA8_3>=RULE_STRING && LA8_3<=RULE_WSTRING)) ) {
                    alt8=1;
                }
                else if ( (LA8_3==RULE_ID) ) {
                    int LA8_6 = input.LA(3);

                    if ( (LA8_6==EqualsSignGreaterThanSign) ) {
                        alt8=3;
                    }
                    else if ( (LA8_6==EOF||LA8_6==AND||LA8_6==MOD||LA8_6==XOR||(LA8_6>=AsteriskAsterisk && LA8_6<=FullStopFullStop)||(LA8_6>=LessThanSignEqualsSign && LA8_6<=LessThanSignGreaterThanSign)||LA8_6==GreaterThanSignEqualsSign||LA8_6==OR||(LA8_6>=Ampersand && LA8_6<=Solidus)||(LA8_6>=LessThanSign && LA8_6<=GreaterThanSign)||LA8_6==LeftSquareBracket) ) {
                        alt8=1;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return ;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 8, 6, input);

                        throw nvae;
                    }
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 8, 3, input);

                    throw nvae;
                }
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 8, 0, input);

                throw nvae;
            }

            switch (alt8) {
                case 1 :
                    // InternalSTFunctionParser.g:2142:2: ( ruleSTCallUnnamedArgument )
                    {
                    // InternalSTFunctionParser.g:2142:2: ( ruleSTCallUnnamedArgument )
                    // InternalSTFunctionParser.g:2143:3: ruleSTCallUnnamedArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallUnnamedArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallUnnamedArgumentParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2148:2: ( ruleSTCallNamedInputArgument )
                    {
                    // InternalSTFunctionParser.g:2148:2: ( ruleSTCallNamedInputArgument )
                    // InternalSTFunctionParser.g:2149:3: ruleSTCallNamedInputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedInputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedInputArgumentParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2154:2: ( ruleSTCallNamedOutputArgument )
                    {
                    // InternalSTFunctionParser.g:2154:2: ( ruleSTCallNamedOutputArgument )
                    // InternalSTFunctionParser.g:2155:3: ruleSTCallNamedOutputArgument
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTCallNamedOutputArgument();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTCallArgumentAccess().getSTCallNamedOutputArgumentParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallArgument__Alternatives"


    // $ANTLR start "rule__STUnaryExpression__Alternatives"
    // InternalSTFunctionParser.g:2164:1: rule__STUnaryExpression__Alternatives : ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) );
    public final void rule__STUnaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2168:1: ( ( ( ruleSTAccessExpression ) ) | ( ( rule__STUnaryExpression__Group_1__0 ) ) )
            int alt9=2;
            switch ( input.LA(1) ) {
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case LeftParenthesis:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_ID:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt9=1;
                }
                break;
            case PlusSign:
                {
                int LA9_2 = input.LA(2);

                if ( (synpred20_InternalSTFunctionParser()) ) {
                    alt9=1;
                }
                else if ( (true) ) {
                    alt9=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 2, input);

                    throw nvae;
                }
                }
                break;
            case HyphenMinus:
                {
                int LA9_3 = input.LA(2);

                if ( (synpred20_InternalSTFunctionParser()) ) {
                    alt9=1;
                }
                else if ( (true) ) {
                    alt9=2;
                }
                else {
                    if (state.backtracking>0) {state.failed=true; return ;}
                    NoViableAltException nvae =
                        new NoViableAltException("", 9, 3, input);

                    throw nvae;
                }
                }
                break;
            case NOT:
                {
                alt9=2;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 9, 0, input);

                throw nvae;
            }

            switch (alt9) {
                case 1 :
                    // InternalSTFunctionParser.g:2169:2: ( ( ruleSTAccessExpression ) )
                    {
                    // InternalSTFunctionParser.g:2169:2: ( ( ruleSTAccessExpression ) )
                    // InternalSTFunctionParser.g:2170:3: ( ruleSTAccessExpression )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }
                    // InternalSTFunctionParser.g:2171:3: ( ruleSTAccessExpression )
                    // InternalSTFunctionParser.g:2171:4: ruleSTAccessExpression
                    {
                    pushFollow(FOLLOW_2);
                    ruleSTAccessExpression();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2175:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:2175:2: ( ( rule__STUnaryExpression__Group_1__0 ) )
                    // InternalSTFunctionParser.g:2176:3: ( rule__STUnaryExpression__Group_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }
                    // InternalSTFunctionParser.g:2177:3: ( rule__STUnaryExpression__Group_1__0 )
                    // InternalSTFunctionParser.g:2177:4: rule__STUnaryExpression__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STUnaryExpression__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTUnaryExpressionAccess().getGroup_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Alternatives"


    // $ANTLR start "rule__STAccessExpression__Alternatives_1"
    // InternalSTFunctionParser.g:2185:1: rule__STAccessExpression__Alternatives_1 : ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) );
    public final void rule__STAccessExpression__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2189:1: ( ( ( rule__STAccessExpression__Group_1_0__0 ) ) | ( ( rule__STAccessExpression__Group_1_1__0 ) ) )
            int alt10=2;
            int LA10_0 = input.LA(1);

            if ( (LA10_0==FullStop) ) {
                alt10=1;
            }
            else if ( (LA10_0==LeftSquareBracket) ) {
                alt10=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 10, 0, input);

                throw nvae;
            }
            switch (alt10) {
                case 1 :
                    // InternalSTFunctionParser.g:2190:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2190:2: ( ( rule__STAccessExpression__Group_1_0__0 ) )
                    // InternalSTFunctionParser.g:2191:3: ( rule__STAccessExpression__Group_1_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }
                    // InternalSTFunctionParser.g:2192:3: ( rule__STAccessExpression__Group_1_0__0 )
                    // InternalSTFunctionParser.g:2192:4: rule__STAccessExpression__Group_1_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2196:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    {
                    // InternalSTFunctionParser.g:2196:2: ( ( rule__STAccessExpression__Group_1_1__0 ) )
                    // InternalSTFunctionParser.g:2197:3: ( rule__STAccessExpression__Group_1_1__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }
                    // InternalSTFunctionParser.g:2198:3: ( rule__STAccessExpression__Group_1_1__0 )
                    // InternalSTFunctionParser.g:2198:4: rule__STAccessExpression__Group_1_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STAccessExpression__Group_1_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Alternatives_1"


    // $ANTLR start "rule__STAccessExpression__MemberAlternatives_1_0_2_0"
    // InternalSTFunctionParser.g:2206:1: rule__STAccessExpression__MemberAlternatives_1_0_2_0 : ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) );
    public final void rule__STAccessExpression__MemberAlternatives_1_0_2_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2210:1: ( ( ruleSTFeatureExpression ) | ( ruleSTMultibitPartialExpression ) )
            int alt11=2;
            int LA11_0 = input.LA(1);

            if ( (LA11_0==RULE_ID) ) {
                alt11=1;
            }
            else if ( ((LA11_0>=B && LA11_0<=X)||LA11_0==RULE_INT) ) {
                alt11=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 11, 0, input);

                throw nvae;
            }
            switch (alt11) {
                case 1 :
                    // InternalSTFunctionParser.g:2211:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTFunctionParser.g:2211:2: ( ruleSTFeatureExpression )
                    // InternalSTFunctionParser.g:2212:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTFeatureExpressionParserRuleCall_1_0_2_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2217:2: ( ruleSTMultibitPartialExpression )
                    {
                    // InternalSTFunctionParser.g:2217:2: ( ruleSTMultibitPartialExpression )
                    // InternalSTFunctionParser.g:2218:3: ruleSTMultibitPartialExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTMultibitPartialExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAccessExpressionAccess().getMemberSTMultibitPartialExpressionParserRuleCall_1_0_2_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAlternatives_1_0_2_0"


    // $ANTLR start "rule__STPrimaryExpression__Alternatives"
    // InternalSTFunctionParser.g:2227:1: rule__STPrimaryExpression__Alternatives : ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTLiteralExpressions ) );
    public final void rule__STPrimaryExpression__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2231:1: ( ( ( rule__STPrimaryExpression__Group_0__0 ) ) | ( ruleSTFeatureExpression ) | ( ruleSTLiteralExpressions ) )
            int alt12=3;
            switch ( input.LA(1) ) {
            case LeftParenthesis:
                {
                alt12=1;
                }
                break;
            case RULE_ID:
                {
                alt12=2;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case WSTRING:
            case STRING:
            case DWORD:
            case FALSE:
            case LDATE:
            case LREAL:
            case LTIME:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case WCHAR:
            case BOOL:
            case BYTE:
            case CHAR:
            case DATE:
            case DINT:
            case LINT:
            case LTOD:
            case REAL:
            case SINT:
            case TIME:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case LDT:
            case TOD:
            case DT:
            case LD:
            case LT:
            case PlusSign:
            case HyphenMinus:
            case D:
            case T:
            case RULE_NON_DECIMAL:
            case RULE_INT:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt12=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 12, 0, input);

                throw nvae;
            }

            switch (alt12) {
                case 1 :
                    // InternalSTFunctionParser.g:2232:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    {
                    // InternalSTFunctionParser.g:2232:2: ( ( rule__STPrimaryExpression__Group_0__0 ) )
                    // InternalSTFunctionParser.g:2233:3: ( rule__STPrimaryExpression__Group_0__0 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }
                    // InternalSTFunctionParser.g:2234:3: ( rule__STPrimaryExpression__Group_0__0 )
                    // InternalSTFunctionParser.g:2234:4: rule__STPrimaryExpression__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STPrimaryExpression__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getGroup_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2238:2: ( ruleSTFeatureExpression )
                    {
                    // InternalSTFunctionParser.g:2238:2: ( ruleSTFeatureExpression )
                    // InternalSTFunctionParser.g:2239:3: ruleSTFeatureExpression
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTFeatureExpression();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTFeatureExpressionParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2244:2: ( ruleSTLiteralExpressions )
                    {
                    // InternalSTFunctionParser.g:2244:2: ( ruleSTLiteralExpressions )
                    // InternalSTFunctionParser.g:2245:3: ruleSTLiteralExpressions
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTLiteralExpressions();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTPrimaryExpressionAccess().getSTLiteralExpressionsParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Alternatives"


    // $ANTLR start "rule__STLiteralExpressions__Alternatives"
    // InternalSTFunctionParser.g:2254:1: rule__STLiteralExpressions__Alternatives : ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) );
    public final void rule__STLiteralExpressions__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2258:1: ( ( ruleSTNumericLiteral ) | ( ruleSTDateLiteral ) | ( ruleSTTimeLiteral ) | ( ruleSTTimeOfDayLiteral ) | ( ruleSTDateAndTimeLiteral ) | ( ruleSTStringLiteral ) )
            int alt13=6;
            switch ( input.LA(1) ) {
            case DWORD:
            case FALSE:
            case LREAL:
            case LWORD:
            case UDINT:
            case ULINT:
            case USINT:
            case BOOL:
            case BYTE:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case TRUE:
            case UINT:
            case WORD:
            case INT:
            case PlusSign:
            case HyphenMinus:
            case RULE_NON_DECIMAL:
            case RULE_INT:
                {
                alt13=1;
                }
                break;
            case LDATE:
            case DATE:
            case LD:
            case D:
                {
                alt13=2;
                }
                break;
            case LTIME:
            case TIME:
            case LT:
            case T:
                {
                alt13=3;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt13=4;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt13=5;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
            case RULE_STRING:
            case RULE_WSTRING:
                {
                alt13=6;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 13, 0, input);

                throw nvae;
            }

            switch (alt13) {
                case 1 :
                    // InternalSTFunctionParser.g:2259:2: ( ruleSTNumericLiteral )
                    {
                    // InternalSTFunctionParser.g:2259:2: ( ruleSTNumericLiteral )
                    // InternalSTFunctionParser.g:2260:3: ruleSTNumericLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTNumericLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTNumericLiteralParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2265:2: ( ruleSTDateLiteral )
                    {
                    // InternalSTFunctionParser.g:2265:2: ( ruleSTDateLiteral )
                    // InternalSTFunctionParser.g:2266:3: ruleSTDateLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateLiteralParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2271:2: ( ruleSTTimeLiteral )
                    {
                    // InternalSTFunctionParser.g:2271:2: ( ruleSTTimeLiteral )
                    // InternalSTFunctionParser.g:2272:3: ruleSTTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeLiteralParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2277:2: ( ruleSTTimeOfDayLiteral )
                    {
                    // InternalSTFunctionParser.g:2277:2: ( ruleSTTimeOfDayLiteral )
                    // InternalSTFunctionParser.g:2278:3: ruleSTTimeOfDayLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTTimeOfDayLiteralParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2283:2: ( ruleSTDateAndTimeLiteral )
                    {
                    // InternalSTFunctionParser.g:2283:2: ( ruleSTDateAndTimeLiteral )
                    // InternalSTFunctionParser.g:2284:3: ruleSTDateAndTimeLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTDateAndTimeLiteralParserRuleCall_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:2289:2: ( ruleSTStringLiteral )
                    {
                    // InternalSTFunctionParser.g:2289:2: ( ruleSTStringLiteral )
                    // InternalSTFunctionParser.g:2290:3: ruleSTStringLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTStringLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTLiteralExpressionsAccess().getSTStringLiteralParserRuleCall_5()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STLiteralExpressions__Alternatives"


    // $ANTLR start "rule__STNumericLiteralType__Alternatives"
    // InternalSTFunctionParser.g:2299:1: rule__STNumericLiteralType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) );
    public final void rule__STNumericLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2303:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) )
            int alt14=2;
            int LA14_0 = input.LA(1);

            if ( (LA14_0==DWORD||LA14_0==LWORD||(LA14_0>=BOOL && LA14_0<=BYTE)||LA14_0==WORD) ) {
                alt14=1;
            }
            else if ( (LA14_0==LREAL||(LA14_0>=UDINT && LA14_0<=ULINT)||LA14_0==USINT||LA14_0==DINT||LA14_0==LINT||(LA14_0>=REAL && LA14_0<=SINT)||LA14_0==UINT||LA14_0==INT) ) {
                alt14=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 14, 0, input);

                throw nvae;
            }
            switch (alt14) {
                case 1 :
                    // InternalSTFunctionParser.g:2304:2: ( ruleSTAnyBitType )
                    {
                    // InternalSTFunctionParser.g:2304:2: ( ruleSTAnyBitType )
                    // InternalSTFunctionParser.g:2305:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2310:2: ( ruleSTAnyNumType )
                    {
                    // InternalSTFunctionParser.g:2310:2: ( ruleSTAnyNumType )
                    // InternalSTFunctionParser.g:2311:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteralType__Alternatives"


    // $ANTLR start "rule__STNumericLiteral__ValueAlternatives_1_0"
    // InternalSTFunctionParser.g:2320:1: rule__STNumericLiteral__ValueAlternatives_1_0 : ( ( ruleBoolLiteral ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) );
    public final void rule__STNumericLiteral__ValueAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2324:1: ( ( ruleBoolLiteral ) | ( ruleNumber ) | ( RULE_NON_DECIMAL ) )
            int alt15=3;
            switch ( input.LA(1) ) {
            case FALSE:
            case TRUE:
                {
                alt15=1;
                }
                break;
            case PlusSign:
            case HyphenMinus:
            case RULE_INT:
                {
                alt15=2;
                }
                break;
            case RULE_NON_DECIMAL:
                {
                alt15=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 15, 0, input);

                throw nvae;
            }

            switch (alt15) {
                case 1 :
                    // InternalSTFunctionParser.g:2325:2: ( ruleBoolLiteral )
                    {
                    // InternalSTFunctionParser.g:2325:2: ( ruleBoolLiteral )
                    // InternalSTFunctionParser.g:2326:3: ruleBoolLiteral
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueBoolLiteralParserRuleCall_1_0_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleBoolLiteral();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueBoolLiteralParserRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2331:2: ( ruleNumber )
                    {
                    // InternalSTFunctionParser.g:2331:2: ( ruleNumber )
                    // InternalSTFunctionParser.g:2332:3: ruleNumber
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueNumberParserRuleCall_1_0_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleNumber();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueNumberParserRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2337:2: ( RULE_NON_DECIMAL )
                    {
                    // InternalSTFunctionParser.g:2337:2: ( RULE_NON_DECIMAL )
                    // InternalSTFunctionParser.g:2338:3: RULE_NON_DECIMAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTNumericLiteralAccess().getValueNON_DECIMALTerminalRuleCall_1_0_2()); 
                    }
                    match(input,RULE_NON_DECIMAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTNumericLiteralAccess().getValueNON_DECIMALTerminalRuleCall_1_0_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAlternatives_1_0"


    // $ANTLR start "rule__STDateLiteralType__Alternatives"
    // InternalSTFunctionParser.g:2347:1: rule__STDateLiteralType__Alternatives : ( ( ruleSTDateType ) | ( D ) | ( LD ) );
    public final void rule__STDateLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2351:1: ( ( ruleSTDateType ) | ( D ) | ( LD ) )
            int alt16=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt16=1;
                }
                break;
            case D:
                {
                alt16=2;
                }
                break;
            case LD:
                {
                alt16=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 16, 0, input);

                throw nvae;
            }

            switch (alt16) {
                case 1 :
                    // InternalSTFunctionParser.g:2352:2: ( ruleSTDateType )
                    {
                    // InternalSTFunctionParser.g:2352:2: ( ruleSTDateType )
                    // InternalSTFunctionParser.g:2353:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2358:2: ( D )
                    {
                    // InternalSTFunctionParser.g:2358:2: ( D )
                    // InternalSTFunctionParser.g:2359:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getDKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2364:2: ( LD )
                    {
                    // InternalSTFunctionParser.g:2364:2: ( LD )
                    // InternalSTFunctionParser.g:2365:3: LD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }
                    match(input,LD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateLiteralTypeAccess().getLDKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteralType__Alternatives"


    // $ANTLR start "rule__STTimeLiteralType__Alternatives"
    // InternalSTFunctionParser.g:2374:1: rule__STTimeLiteralType__Alternatives : ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) );
    public final void rule__STTimeLiteralType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2378:1: ( ( ruleSTAnyDurationType ) | ( T ) | ( LT ) )
            int alt17=3;
            switch ( input.LA(1) ) {
            case LTIME:
            case TIME:
                {
                alt17=1;
                }
                break;
            case T:
                {
                alt17=2;
                }
                break;
            case LT:
                {
                alt17=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 17, 0, input);

                throw nvae;
            }

            switch (alt17) {
                case 1 :
                    // InternalSTFunctionParser.g:2379:2: ( ruleSTAnyDurationType )
                    {
                    // InternalSTFunctionParser.g:2379:2: ( ruleSTAnyDurationType )
                    // InternalSTFunctionParser.g:2380:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getSTAnyDurationTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2385:2: ( T )
                    {
                    // InternalSTFunctionParser.g:2385:2: ( T )
                    // InternalSTFunctionParser.g:2386:3: T
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }
                    match(input,T,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2391:2: ( LT )
                    {
                    // InternalSTFunctionParser.g:2391:2: ( LT )
                    // InternalSTFunctionParser.g:2392:3: LT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }
                    match(input,LT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeLiteralTypeAccess().getLTKeyword_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteralType__Alternatives"


    // $ANTLR start "rule__STStringLiteral__ValueAlternatives_1_0"
    // InternalSTFunctionParser.g:2401:1: rule__STStringLiteral__ValueAlternatives_1_0 : ( ( RULE_STRING ) | ( RULE_WSTRING ) );
    public final void rule__STStringLiteral__ValueAlternatives_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2405:1: ( ( RULE_STRING ) | ( RULE_WSTRING ) )
            int alt18=2;
            int LA18_0 = input.LA(1);

            if ( (LA18_0==RULE_STRING) ) {
                alt18=1;
            }
            else if ( (LA18_0==RULE_WSTRING) ) {
                alt18=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 18, 0, input);

                throw nvae;
            }
            switch (alt18) {
                case 1 :
                    // InternalSTFunctionParser.g:2406:2: ( RULE_STRING )
                    {
                    // InternalSTFunctionParser.g:2406:2: ( RULE_STRING )
                    // InternalSTFunctionParser.g:2407:3: RULE_STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_0()); 
                    }
                    match(input,RULE_STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralAccess().getValueSTRINGTerminalRuleCall_1_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2412:2: ( RULE_WSTRING )
                    {
                    // InternalSTFunctionParser.g:2412:2: ( RULE_WSTRING )
                    // InternalSTFunctionParser.g:2413:3: RULE_WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTStringLiteralAccess().getValueWSTRINGTerminalRuleCall_1_0_1()); 
                    }
                    match(input,RULE_WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTStringLiteralAccess().getValueWSTRINGTerminalRuleCall_1_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAlternatives_1_0"


    // $ANTLR start "rule__STAnyType__Alternatives"
    // InternalSTFunctionParser.g:2422:1: rule__STAnyType__Alternatives : ( ( RULE_ID ) | ( ruleSTAnyBuiltinType ) );
    public final void rule__STAnyType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2426:1: ( ( RULE_ID ) | ( ruleSTAnyBuiltinType ) )
            int alt19=2;
            int LA19_0 = input.LA(1);

            if ( (LA19_0==RULE_ID) ) {
                alt19=1;
            }
            else if ( ((LA19_0>=LDATE_AND_TIME && LA19_0<=DATE_AND_TIME)||(LA19_0>=LTIME_OF_DAY && LA19_0<=TIME_OF_DAY)||LA19_0==WSTRING||LA19_0==STRING||LA19_0==DWORD||(LA19_0>=LDATE && LA19_0<=ULINT)||(LA19_0>=USINT && LA19_0<=WCHAR)||(LA19_0>=BOOL && LA19_0<=BYTE)||(LA19_0>=CHAR && LA19_0<=DINT)||(LA19_0>=LINT && LA19_0<=SINT)||LA19_0==TIME||(LA19_0>=UINT && LA19_0<=WORD)||(LA19_0>=INT && LA19_0<=LDT)||LA19_0==TOD||LA19_0==DT) ) {
                alt19=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 19, 0, input);

                throw nvae;
            }
            switch (alt19) {
                case 1 :
                    // InternalSTFunctionParser.g:2427:2: ( RULE_ID )
                    {
                    // InternalSTFunctionParser.g:2427:2: ( RULE_ID )
                    // InternalSTFunctionParser.g:2428:3: RULE_ID
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getIDTerminalRuleCall_0()); 
                    }
                    match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getIDTerminalRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2433:2: ( ruleSTAnyBuiltinType )
                    {
                    // InternalSTFunctionParser.g:2433:2: ( ruleSTAnyBuiltinType )
                    // InternalSTFunctionParser.g:2434:3: ruleSTAnyBuiltinType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBuiltinType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyTypeAccess().getSTAnyBuiltinTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyType__Alternatives"


    // $ANTLR start "rule__STAnyBuiltinType__Alternatives"
    // InternalSTFunctionParser.g:2443:1: rule__STAnyBuiltinType__Alternatives : ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) );
    public final void rule__STAnyBuiltinType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2447:1: ( ( ruleSTAnyBitType ) | ( ruleSTAnyNumType ) | ( ruleSTAnyDurationType ) | ( ruleSTAnyDateType ) | ( ruleSTAnyCharsType ) )
            int alt20=5;
            switch ( input.LA(1) ) {
            case DWORD:
            case LWORD:
            case BOOL:
            case BYTE:
            case WORD:
                {
                alt20=1;
                }
                break;
            case LREAL:
            case UDINT:
            case ULINT:
            case USINT:
            case DINT:
            case LINT:
            case REAL:
            case SINT:
            case UINT:
            case INT:
                {
                alt20=2;
                }
                break;
            case LTIME:
            case TIME:
                {
                alt20=3;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LDATE:
            case DATE:
            case LTOD:
            case LDT:
            case TOD:
            case DT:
                {
                alt20=4;
                }
                break;
            case WSTRING:
            case STRING:
            case WCHAR:
            case CHAR:
                {
                alt20=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 20, 0, input);

                throw nvae;
            }

            switch (alt20) {
                case 1 :
                    // InternalSTFunctionParser.g:2448:2: ( ruleSTAnyBitType )
                    {
                    // InternalSTFunctionParser.g:2448:2: ( ruleSTAnyBitType )
                    // InternalSTFunctionParser.g:2449:3: ruleSTAnyBitType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyBitType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyBitTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2454:2: ( ruleSTAnyNumType )
                    {
                    // InternalSTFunctionParser.g:2454:2: ( ruleSTAnyNumType )
                    // InternalSTFunctionParser.g:2455:3: ruleSTAnyNumType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyNumType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyNumTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2460:2: ( ruleSTAnyDurationType )
                    {
                    // InternalSTFunctionParser.g:2460:2: ( ruleSTAnyDurationType )
                    // InternalSTFunctionParser.g:2461:3: ruleSTAnyDurationType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDurationType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDurationTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2466:2: ( ruleSTAnyDateType )
                    {
                    // InternalSTFunctionParser.g:2466:2: ( ruleSTAnyDateType )
                    // InternalSTFunctionParser.g:2467:3: ruleSTAnyDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyDateTypeParserRuleCall_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2472:2: ( ruleSTAnyCharsType )
                    {
                    // InternalSTFunctionParser.g:2472:2: ( ruleSTAnyCharsType )
                    // InternalSTFunctionParser.g:2473:3: ruleSTAnyCharsType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTAnyCharsType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBuiltinTypeAccess().getSTAnyCharsTypeParserRuleCall_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBuiltinType__Alternatives"


    // $ANTLR start "rule__STAnyBitType__Alternatives"
    // InternalSTFunctionParser.g:2482:1: rule__STAnyBitType__Alternatives : ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) );
    public final void rule__STAnyBitType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2486:1: ( ( BOOL ) | ( BYTE ) | ( WORD ) | ( DWORD ) | ( LWORD ) )
            int alt21=5;
            switch ( input.LA(1) ) {
            case BOOL:
                {
                alt21=1;
                }
                break;
            case BYTE:
                {
                alt21=2;
                }
                break;
            case WORD:
                {
                alt21=3;
                }
                break;
            case DWORD:
                {
                alt21=4;
                }
                break;
            case LWORD:
                {
                alt21=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 21, 0, input);

                throw nvae;
            }

            switch (alt21) {
                case 1 :
                    // InternalSTFunctionParser.g:2487:2: ( BOOL )
                    {
                    // InternalSTFunctionParser.g:2487:2: ( BOOL )
                    // InternalSTFunctionParser.g:2488:3: BOOL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }
                    match(input,BOOL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBOOLKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2493:2: ( BYTE )
                    {
                    // InternalSTFunctionParser.g:2493:2: ( BYTE )
                    // InternalSTFunctionParser.g:2494:3: BYTE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }
                    match(input,BYTE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getBYTEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2499:2: ( WORD )
                    {
                    // InternalSTFunctionParser.g:2499:2: ( WORD )
                    // InternalSTFunctionParser.g:2500:3: WORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }
                    match(input,WORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getWORDKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2505:2: ( DWORD )
                    {
                    // InternalSTFunctionParser.g:2505:2: ( DWORD )
                    // InternalSTFunctionParser.g:2506:3: DWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }
                    match(input,DWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getDWORDKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2511:2: ( LWORD )
                    {
                    // InternalSTFunctionParser.g:2511:2: ( LWORD )
                    // InternalSTFunctionParser.g:2512:3: LWORD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }
                    match(input,LWORD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyBitTypeAccess().getLWORDKeyword_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyBitType__Alternatives"


    // $ANTLR start "rule__STAnyNumType__Alternatives"
    // InternalSTFunctionParser.g:2521:1: rule__STAnyNumType__Alternatives : ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) );
    public final void rule__STAnyNumType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2525:1: ( ( SINT ) | ( INT ) | ( DINT ) | ( LINT ) | ( USINT ) | ( UINT ) | ( UDINT ) | ( ULINT ) | ( REAL ) | ( LREAL ) )
            int alt22=10;
            switch ( input.LA(1) ) {
            case SINT:
                {
                alt22=1;
                }
                break;
            case INT:
                {
                alt22=2;
                }
                break;
            case DINT:
                {
                alt22=3;
                }
                break;
            case LINT:
                {
                alt22=4;
                }
                break;
            case USINT:
                {
                alt22=5;
                }
                break;
            case UINT:
                {
                alt22=6;
                }
                break;
            case UDINT:
                {
                alt22=7;
                }
                break;
            case ULINT:
                {
                alt22=8;
                }
                break;
            case REAL:
                {
                alt22=9;
                }
                break;
            case LREAL:
                {
                alt22=10;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 22, 0, input);

                throw nvae;
            }

            switch (alt22) {
                case 1 :
                    // InternalSTFunctionParser.g:2526:2: ( SINT )
                    {
                    // InternalSTFunctionParser.g:2526:2: ( SINT )
                    // InternalSTFunctionParser.g:2527:3: SINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }
                    match(input,SINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getSINTKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2532:2: ( INT )
                    {
                    // InternalSTFunctionParser.g:2532:2: ( INT )
                    // InternalSTFunctionParser.g:2533:3: INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }
                    match(input,INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getINTKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2538:2: ( DINT )
                    {
                    // InternalSTFunctionParser.g:2538:2: ( DINT )
                    // InternalSTFunctionParser.g:2539:3: DINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }
                    match(input,DINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getDINTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2544:2: ( LINT )
                    {
                    // InternalSTFunctionParser.g:2544:2: ( LINT )
                    // InternalSTFunctionParser.g:2545:3: LINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }
                    match(input,LINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLINTKeyword_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2550:2: ( USINT )
                    {
                    // InternalSTFunctionParser.g:2550:2: ( USINT )
                    // InternalSTFunctionParser.g:2551:3: USINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }
                    match(input,USINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUSINTKeyword_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:2556:2: ( UINT )
                    {
                    // InternalSTFunctionParser.g:2556:2: ( UINT )
                    // InternalSTFunctionParser.g:2557:3: UINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }
                    match(input,UINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUINTKeyword_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:2562:2: ( UDINT )
                    {
                    // InternalSTFunctionParser.g:2562:2: ( UDINT )
                    // InternalSTFunctionParser.g:2563:3: UDINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }
                    match(input,UDINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getUDINTKeyword_6()); 
                    }

                    }


                    }
                    break;
                case 8 :
                    // InternalSTFunctionParser.g:2568:2: ( ULINT )
                    {
                    // InternalSTFunctionParser.g:2568:2: ( ULINT )
                    // InternalSTFunctionParser.g:2569:3: ULINT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }
                    match(input,ULINT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getULINTKeyword_7()); 
                    }

                    }


                    }
                    break;
                case 9 :
                    // InternalSTFunctionParser.g:2574:2: ( REAL )
                    {
                    // InternalSTFunctionParser.g:2574:2: ( REAL )
                    // InternalSTFunctionParser.g:2575:3: REAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }
                    match(input,REAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getREALKeyword_8()); 
                    }

                    }


                    }
                    break;
                case 10 :
                    // InternalSTFunctionParser.g:2580:2: ( LREAL )
                    {
                    // InternalSTFunctionParser.g:2580:2: ( LREAL )
                    // InternalSTFunctionParser.g:2581:3: LREAL
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }
                    match(input,LREAL,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyNumTypeAccess().getLREALKeyword_9()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyNumType__Alternatives"


    // $ANTLR start "rule__STAnyDurationType__Alternatives"
    // InternalSTFunctionParser.g:2590:1: rule__STAnyDurationType__Alternatives : ( ( TIME ) | ( LTIME ) );
    public final void rule__STAnyDurationType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2594:1: ( ( TIME ) | ( LTIME ) )
            int alt23=2;
            int LA23_0 = input.LA(1);

            if ( (LA23_0==TIME) ) {
                alt23=1;
            }
            else if ( (LA23_0==LTIME) ) {
                alt23=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 23, 0, input);

                throw nvae;
            }
            switch (alt23) {
                case 1 :
                    // InternalSTFunctionParser.g:2595:2: ( TIME )
                    {
                    // InternalSTFunctionParser.g:2595:2: ( TIME )
                    // InternalSTFunctionParser.g:2596:3: TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }
                    match(input,TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getTIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2601:2: ( LTIME )
                    {
                    // InternalSTFunctionParser.g:2601:2: ( LTIME )
                    // InternalSTFunctionParser.g:2602:3: LTIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }
                    match(input,LTIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDurationTypeAccess().getLTIMEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDurationType__Alternatives"


    // $ANTLR start "rule__STAnyDateType__Alternatives"
    // InternalSTFunctionParser.g:2611:1: rule__STAnyDateType__Alternatives : ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) );
    public final void rule__STAnyDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2615:1: ( ( ruleSTDateType ) | ( ruleSTTimeOfDayType ) | ( ruleSTDateAndTimeType ) )
            int alt24=3;
            switch ( input.LA(1) ) {
            case LDATE:
            case DATE:
                {
                alt24=1;
                }
                break;
            case LTIME_OF_DAY:
            case TIME_OF_DAY:
            case LTOD:
            case TOD:
                {
                alt24=2;
                }
                break;
            case LDATE_AND_TIME:
            case DATE_AND_TIME:
            case LDT:
            case DT:
                {
                alt24=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 24, 0, input);

                throw nvae;
            }

            switch (alt24) {
                case 1 :
                    // InternalSTFunctionParser.g:2616:2: ( ruleSTDateType )
                    {
                    // InternalSTFunctionParser.g:2616:2: ( ruleSTDateType )
                    // InternalSTFunctionParser.g:2617:3: ruleSTDateType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateTypeParserRuleCall_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2622:2: ( ruleSTTimeOfDayType )
                    {
                    // InternalSTFunctionParser.g:2622:2: ( ruleSTTimeOfDayType )
                    // InternalSTFunctionParser.g:2623:3: ruleSTTimeOfDayType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTTimeOfDayType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTTimeOfDayTypeParserRuleCall_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2628:2: ( ruleSTDateAndTimeType )
                    {
                    // InternalSTFunctionParser.g:2628:2: ( ruleSTDateAndTimeType )
                    // InternalSTFunctionParser.g:2629:3: ruleSTDateAndTimeType
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }
                    pushFollow(FOLLOW_2);
                    ruleSTDateAndTimeType();

                    state._fsp--;
                    if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyDateTypeAccess().getSTDateAndTimeTypeParserRuleCall_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyDateType__Alternatives"


    // $ANTLR start "rule__STDateType__Alternatives"
    // InternalSTFunctionParser.g:2638:1: rule__STDateType__Alternatives : ( ( DATE ) | ( LDATE ) );
    public final void rule__STDateType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2642:1: ( ( DATE ) | ( LDATE ) )
            int alt25=2;
            int LA25_0 = input.LA(1);

            if ( (LA25_0==DATE) ) {
                alt25=1;
            }
            else if ( (LA25_0==LDATE) ) {
                alt25=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 25, 0, input);

                throw nvae;
            }
            switch (alt25) {
                case 1 :
                    // InternalSTFunctionParser.g:2643:2: ( DATE )
                    {
                    // InternalSTFunctionParser.g:2643:2: ( DATE )
                    // InternalSTFunctionParser.g:2644:3: DATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }
                    match(input,DATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getDATEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2649:2: ( LDATE )
                    {
                    // InternalSTFunctionParser.g:2649:2: ( LDATE )
                    // InternalSTFunctionParser.g:2650:3: LDATE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }
                    match(input,LDATE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateTypeAccess().getLDATEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateType__Alternatives"


    // $ANTLR start "rule__STTimeOfDayType__Alternatives"
    // InternalSTFunctionParser.g:2659:1: rule__STTimeOfDayType__Alternatives : ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) );
    public final void rule__STTimeOfDayType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2663:1: ( ( TIME_OF_DAY ) | ( LTIME_OF_DAY ) | ( TOD ) | ( LTOD ) )
            int alt26=4;
            switch ( input.LA(1) ) {
            case TIME_OF_DAY:
                {
                alt26=1;
                }
                break;
            case LTIME_OF_DAY:
                {
                alt26=2;
                }
                break;
            case TOD:
                {
                alt26=3;
                }
                break;
            case LTOD:
                {
                alt26=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 26, 0, input);

                throw nvae;
            }

            switch (alt26) {
                case 1 :
                    // InternalSTFunctionParser.g:2664:2: ( TIME_OF_DAY )
                    {
                    // InternalSTFunctionParser.g:2664:2: ( TIME_OF_DAY )
                    // InternalSTFunctionParser.g:2665:3: TIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }
                    match(input,TIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTIME_OF_DAYKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2670:2: ( LTIME_OF_DAY )
                    {
                    // InternalSTFunctionParser.g:2670:2: ( LTIME_OF_DAY )
                    // InternalSTFunctionParser.g:2671:3: LTIME_OF_DAY
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }
                    match(input,LTIME_OF_DAY,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTIME_OF_DAYKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2676:2: ( TOD )
                    {
                    // InternalSTFunctionParser.g:2676:2: ( TOD )
                    // InternalSTFunctionParser.g:2677:3: TOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }
                    match(input,TOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getTODKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2682:2: ( LTOD )
                    {
                    // InternalSTFunctionParser.g:2682:2: ( LTOD )
                    // InternalSTFunctionParser.g:2683:3: LTOD
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }
                    match(input,LTOD,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTTimeOfDayTypeAccess().getLTODKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayType__Alternatives"


    // $ANTLR start "rule__STDateAndTimeType__Alternatives"
    // InternalSTFunctionParser.g:2692:1: rule__STDateAndTimeType__Alternatives : ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) );
    public final void rule__STDateAndTimeType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2696:1: ( ( DATE_AND_TIME ) | ( LDATE_AND_TIME ) | ( DT ) | ( LDT ) )
            int alt27=4;
            switch ( input.LA(1) ) {
            case DATE_AND_TIME:
                {
                alt27=1;
                }
                break;
            case LDATE_AND_TIME:
                {
                alt27=2;
                }
                break;
            case DT:
                {
                alt27=3;
                }
                break;
            case LDT:
                {
                alt27=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 27, 0, input);

                throw nvae;
            }

            switch (alt27) {
                case 1 :
                    // InternalSTFunctionParser.g:2697:2: ( DATE_AND_TIME )
                    {
                    // InternalSTFunctionParser.g:2697:2: ( DATE_AND_TIME )
                    // InternalSTFunctionParser.g:2698:3: DATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }
                    match(input,DATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDATE_AND_TIMEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2703:2: ( LDATE_AND_TIME )
                    {
                    // InternalSTFunctionParser.g:2703:2: ( LDATE_AND_TIME )
                    // InternalSTFunctionParser.g:2704:3: LDATE_AND_TIME
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }
                    match(input,LDATE_AND_TIME,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDATE_AND_TIMEKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2709:2: ( DT )
                    {
                    // InternalSTFunctionParser.g:2709:2: ( DT )
                    // InternalSTFunctionParser.g:2710:3: DT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }
                    match(input,DT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getDTKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2715:2: ( LDT )
                    {
                    // InternalSTFunctionParser.g:2715:2: ( LDT )
                    // InternalSTFunctionParser.g:2716:3: LDT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }
                    match(input,LDT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTDateAndTimeTypeAccess().getLDTKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeType__Alternatives"


    // $ANTLR start "rule__STAnyCharsType__Alternatives"
    // InternalSTFunctionParser.g:2725:1: rule__STAnyCharsType__Alternatives : ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) );
    public final void rule__STAnyCharsType__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2729:1: ( ( STRING ) | ( WSTRING ) | ( CHAR ) | ( WCHAR ) )
            int alt28=4;
            switch ( input.LA(1) ) {
            case STRING:
                {
                alt28=1;
                }
                break;
            case WSTRING:
                {
                alt28=2;
                }
                break;
            case CHAR:
                {
                alt28=3;
                }
                break;
            case WCHAR:
                {
                alt28=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 28, 0, input);

                throw nvae;
            }

            switch (alt28) {
                case 1 :
                    // InternalSTFunctionParser.g:2730:2: ( STRING )
                    {
                    // InternalSTFunctionParser.g:2730:2: ( STRING )
                    // InternalSTFunctionParser.g:2731:3: STRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }
                    match(input,STRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getSTRINGKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2736:2: ( WSTRING )
                    {
                    // InternalSTFunctionParser.g:2736:2: ( WSTRING )
                    // InternalSTFunctionParser.g:2737:3: WSTRING
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }
                    match(input,WSTRING,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWSTRINGKeyword_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2742:2: ( CHAR )
                    {
                    // InternalSTFunctionParser.g:2742:2: ( CHAR )
                    // InternalSTFunctionParser.g:2743:3: CHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }
                    match(input,CHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getCHARKeyword_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2748:2: ( WCHAR )
                    {
                    // InternalSTFunctionParser.g:2748:2: ( WCHAR )
                    // InternalSTFunctionParser.g:2749:3: WCHAR
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }
                    match(input,WCHAR,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTAnyCharsTypeAccess().getWCHARKeyword_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAnyCharsType__Alternatives"


    // $ANTLR start "rule__BoolLiteral__Alternatives"
    // InternalSTFunctionParser.g:2758:1: rule__BoolLiteral__Alternatives : ( ( TRUE ) | ( FALSE ) );
    public final void rule__BoolLiteral__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2762:1: ( ( TRUE ) | ( FALSE ) )
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==TRUE) ) {
                alt29=1;
            }
            else if ( (LA29_0==FALSE) ) {
                alt29=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 29, 0, input);

                throw nvae;
            }
            switch (alt29) {
                case 1 :
                    // InternalSTFunctionParser.g:2763:2: ( TRUE )
                    {
                    // InternalSTFunctionParser.g:2763:2: ( TRUE )
                    // InternalSTFunctionParser.g:2764:3: TRUE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }
                    match(input,TRUE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getTRUEKeyword_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2769:2: ( FALSE )
                    {
                    // InternalSTFunctionParser.g:2769:2: ( FALSE )
                    // InternalSTFunctionParser.g:2770:3: FALSE
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }
                    match(input,FALSE,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getBoolLiteralAccess().getFALSEKeyword_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__BoolLiteral__Alternatives"


    // $ANTLR start "rule__Number__Alternatives_0"
    // InternalSTFunctionParser.g:2779:1: rule__Number__Alternatives_0 : ( ( PlusSign ) | ( HyphenMinus ) );
    public final void rule__Number__Alternatives_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2783:1: ( ( PlusSign ) | ( HyphenMinus ) )
            int alt30=2;
            int LA30_0 = input.LA(1);

            if ( (LA30_0==PlusSign) ) {
                alt30=1;
            }
            else if ( (LA30_0==HyphenMinus) ) {
                alt30=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 30, 0, input);

                throw nvae;
            }
            switch (alt30) {
                case 1 :
                    // InternalSTFunctionParser.g:2784:2: ( PlusSign )
                    {
                    // InternalSTFunctionParser.g:2784:2: ( PlusSign )
                    // InternalSTFunctionParser.g:2785:3: PlusSign
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getPlusSignKeyword_0_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2790:2: ( HyphenMinus )
                    {
                    // InternalSTFunctionParser.g:2790:2: ( HyphenMinus )
                    // InternalSTFunctionParser.g:2791:3: HyphenMinus
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getHyphenMinusKeyword_0_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_0"


    // $ANTLR start "rule__Number__Alternatives_2_1"
    // InternalSTFunctionParser.g:2800:1: rule__Number__Alternatives_2_1 : ( ( RULE_EXT_INT ) | ( RULE_INT ) );
    public final void rule__Number__Alternatives_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2804:1: ( ( RULE_EXT_INT ) | ( RULE_INT ) )
            int alt31=2;
            int LA31_0 = input.LA(1);

            if ( (LA31_0==RULE_EXT_INT) ) {
                alt31=1;
            }
            else if ( (LA31_0==RULE_INT) ) {
                alt31=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 31, 0, input);

                throw nvae;
            }
            switch (alt31) {
                case 1 :
                    // InternalSTFunctionParser.g:2805:2: ( RULE_EXT_INT )
                    {
                    // InternalSTFunctionParser.g:2805:2: ( RULE_EXT_INT )
                    // InternalSTFunctionParser.g:2806:3: RULE_EXT_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getEXT_INTTerminalRuleCall_2_1_0()); 
                    }
                    match(input,RULE_EXT_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getEXT_INTTerminalRuleCall_2_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2811:2: ( RULE_INT )
                    {
                    // InternalSTFunctionParser.g:2811:2: ( RULE_INT )
                    // InternalSTFunctionParser.g:2812:3: RULE_INT
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_1()); 
                    }
                    match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_2_1_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Alternatives_2_1"


    // $ANTLR start "rule__Time__Alternatives_1"
    // InternalSTFunctionParser.g:2821:1: rule__Time__Alternatives_1 : ( ( D ) | ( H ) | ( M ) | ( S ) | ( MS ) | ( US ) | ( NS ) );
    public final void rule__Time__Alternatives_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2825:1: ( ( D ) | ( H ) | ( M ) | ( S ) | ( MS ) | ( US ) | ( NS ) )
            int alt32=7;
            switch ( input.LA(1) ) {
            case D:
                {
                alt32=1;
                }
                break;
            case H:
                {
                alt32=2;
                }
                break;
            case M:
                {
                alt32=3;
                }
                break;
            case S:
                {
                alt32=4;
                }
                break;
            case MS:
                {
                alt32=5;
                }
                break;
            case US:
                {
                alt32=6;
                }
                break;
            case NS:
                {
                alt32=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 32, 0, input);

                throw nvae;
            }

            switch (alt32) {
                case 1 :
                    // InternalSTFunctionParser.g:2826:2: ( D )
                    {
                    // InternalSTFunctionParser.g:2826:2: ( D )
                    // InternalSTFunctionParser.g:2827:3: D
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getDKeyword_1_0()); 
                    }
                    match(input,D,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getDKeyword_1_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2832:2: ( H )
                    {
                    // InternalSTFunctionParser.g:2832:2: ( H )
                    // InternalSTFunctionParser.g:2833:3: H
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getHKeyword_1_1()); 
                    }
                    match(input,H,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getHKeyword_1_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2838:2: ( M )
                    {
                    // InternalSTFunctionParser.g:2838:2: ( M )
                    // InternalSTFunctionParser.g:2839:3: M
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getMKeyword_1_2()); 
                    }
                    match(input,M,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getMKeyword_1_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2844:2: ( S )
                    {
                    // InternalSTFunctionParser.g:2844:2: ( S )
                    // InternalSTFunctionParser.g:2845:3: S
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getSKeyword_1_3()); 
                    }
                    match(input,S,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getSKeyword_1_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:2850:2: ( MS )
                    {
                    // InternalSTFunctionParser.g:2850:2: ( MS )
                    // InternalSTFunctionParser.g:2851:3: MS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getMSKeyword_1_4()); 
                    }
                    match(input,MS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getMSKeyword_1_4()); 
                    }

                    }


                    }
                    break;
                case 6 :
                    // InternalSTFunctionParser.g:2856:2: ( US )
                    {
                    // InternalSTFunctionParser.g:2856:2: ( US )
                    // InternalSTFunctionParser.g:2857:3: US
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getUSKeyword_1_5()); 
                    }
                    match(input,US,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getUSKeyword_1_5()); 
                    }

                    }


                    }
                    break;
                case 7 :
                    // InternalSTFunctionParser.g:2862:2: ( NS )
                    {
                    // InternalSTFunctionParser.g:2862:2: ( NS )
                    // InternalSTFunctionParser.g:2863:3: NS
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getTimeAccess().getNSKeyword_1_6()); 
                    }
                    match(input,NS,FOLLOW_2); if (state.failed) return ;
                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getTimeAccess().getNSKeyword_1_6()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Alternatives_1"


    // $ANTLR start "rule__AndOperator__Alternatives"
    // InternalSTFunctionParser.g:2872:1: rule__AndOperator__Alternatives : ( ( ( AND ) ) | ( ( Ampersand ) ) );
    public final void rule__AndOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2876:1: ( ( ( AND ) ) | ( ( Ampersand ) ) )
            int alt33=2;
            int LA33_0 = input.LA(1);

            if ( (LA33_0==AND) ) {
                alt33=1;
            }
            else if ( (LA33_0==Ampersand) ) {
                alt33=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 33, 0, input);

                throw nvae;
            }
            switch (alt33) {
                case 1 :
                    // InternalSTFunctionParser.g:2877:2: ( ( AND ) )
                    {
                    // InternalSTFunctionParser.g:2877:2: ( ( AND ) )
                    // InternalSTFunctionParser.g:2878:3: ( AND )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2879:3: ( AND )
                    // InternalSTFunctionParser.g:2879:4: AND
                    {
                    match(input,AND,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getANDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2883:2: ( ( Ampersand ) )
                    {
                    // InternalSTFunctionParser.g:2883:2: ( ( Ampersand ) )
                    // InternalSTFunctionParser.g:2884:3: ( Ampersand )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2885:3: ( Ampersand )
                    // InternalSTFunctionParser.g:2885:4: Ampersand
                    {
                    match(input,Ampersand,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAndOperatorAccess().getAMPERSANDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AndOperator__Alternatives"


    // $ANTLR start "rule__EqualityOperator__Alternatives"
    // InternalSTFunctionParser.g:2893:1: rule__EqualityOperator__Alternatives : ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) );
    public final void rule__EqualityOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2897:1: ( ( ( EqualsSign ) ) | ( ( LessThanSignGreaterThanSign ) ) )
            int alt34=2;
            int LA34_0 = input.LA(1);

            if ( (LA34_0==EqualsSign) ) {
                alt34=1;
            }
            else if ( (LA34_0==LessThanSignGreaterThanSign) ) {
                alt34=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 34, 0, input);

                throw nvae;
            }
            switch (alt34) {
                case 1 :
                    // InternalSTFunctionParser.g:2898:2: ( ( EqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:2898:2: ( ( EqualsSign ) )
                    // InternalSTFunctionParser.g:2899:3: ( EqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2900:3: ( EqualsSign )
                    // InternalSTFunctionParser.g:2900:4: EqualsSign
                    {
                    match(input,EqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getEQEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2904:2: ( ( LessThanSignGreaterThanSign ) )
                    {
                    // InternalSTFunctionParser.g:2904:2: ( ( LessThanSignGreaterThanSign ) )
                    // InternalSTFunctionParser.g:2905:3: ( LessThanSignGreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2906:3: ( LessThanSignGreaterThanSign )
                    // InternalSTFunctionParser.g:2906:4: LessThanSignGreaterThanSign
                    {
                    match(input,LessThanSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getEqualityOperatorAccess().getNEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__EqualityOperator__Alternatives"


    // $ANTLR start "rule__CompareOperator__Alternatives"
    // InternalSTFunctionParser.g:2914:1: rule__CompareOperator__Alternatives : ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) );
    public final void rule__CompareOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2918:1: ( ( ( LessThanSign ) ) | ( ( LessThanSignEqualsSign ) ) | ( ( GreaterThanSign ) ) | ( ( GreaterThanSignEqualsSign ) ) )
            int alt35=4;
            switch ( input.LA(1) ) {
            case LessThanSign:
                {
                alt35=1;
                }
                break;
            case LessThanSignEqualsSign:
                {
                alt35=2;
                }
                break;
            case GreaterThanSign:
                {
                alt35=3;
                }
                break;
            case GreaterThanSignEqualsSign:
                {
                alt35=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 35, 0, input);

                throw nvae;
            }

            switch (alt35) {
                case 1 :
                    // InternalSTFunctionParser.g:2919:2: ( ( LessThanSign ) )
                    {
                    // InternalSTFunctionParser.g:2919:2: ( ( LessThanSign ) )
                    // InternalSTFunctionParser.g:2920:3: ( LessThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2921:3: ( LessThanSign )
                    // InternalSTFunctionParser.g:2921:4: LessThanSign
                    {
                    match(input,LessThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLTEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2925:2: ( ( LessThanSignEqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:2925:2: ( ( LessThanSignEqualsSign ) )
                    // InternalSTFunctionParser.g:2926:3: ( LessThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2927:3: ( LessThanSignEqualsSign )
                    // InternalSTFunctionParser.g:2927:4: LessThanSignEqualsSign
                    {
                    match(input,LessThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getLEEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2931:2: ( ( GreaterThanSign ) )
                    {
                    // InternalSTFunctionParser.g:2931:2: ( ( GreaterThanSign ) )
                    // InternalSTFunctionParser.g:2932:3: ( GreaterThanSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:2933:3: ( GreaterThanSign )
                    // InternalSTFunctionParser.g:2933:4: GreaterThanSign
                    {
                    match(input,GreaterThanSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:2937:2: ( ( GreaterThanSignEqualsSign ) )
                    {
                    // InternalSTFunctionParser.g:2937:2: ( ( GreaterThanSignEqualsSign ) )
                    // InternalSTFunctionParser.g:2938:3: ( GreaterThanSignEqualsSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTFunctionParser.g:2939:3: ( GreaterThanSignEqualsSign )
                    // InternalSTFunctionParser.g:2939:4: GreaterThanSignEqualsSign
                    {
                    match(input,GreaterThanSignEqualsSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getCompareOperatorAccess().getGEEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__CompareOperator__Alternatives"


    // $ANTLR start "rule__AddSubOperator__Alternatives"
    // InternalSTFunctionParser.g:2947:1: rule__AddSubOperator__Alternatives : ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) );
    public final void rule__AddSubOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2951:1: ( ( ( PlusSign ) ) | ( ( HyphenMinus ) ) )
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( (LA36_0==PlusSign) ) {
                alt36=1;
            }
            else if ( (LA36_0==HyphenMinus) ) {
                alt36=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 36, 0, input);

                throw nvae;
            }
            switch (alt36) {
                case 1 :
                    // InternalSTFunctionParser.g:2952:2: ( ( PlusSign ) )
                    {
                    // InternalSTFunctionParser.g:2952:2: ( ( PlusSign ) )
                    // InternalSTFunctionParser.g:2953:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2954:3: ( PlusSign )
                    // InternalSTFunctionParser.g:2954:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getADDEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2958:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTFunctionParser.g:2958:2: ( ( HyphenMinus ) )
                    // InternalSTFunctionParser.g:2959:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2960:3: ( HyphenMinus )
                    // InternalSTFunctionParser.g:2960:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getAddSubOperatorAccess().getSUBEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__AddSubOperator__Alternatives"


    // $ANTLR start "rule__MulDivModOperator__Alternatives"
    // InternalSTFunctionParser.g:2968:1: rule__MulDivModOperator__Alternatives : ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) );
    public final void rule__MulDivModOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2972:1: ( ( ( Asterisk ) ) | ( ( Solidus ) ) | ( ( MOD ) ) )
            int alt37=3;
            switch ( input.LA(1) ) {
            case Asterisk:
                {
                alt37=1;
                }
                break;
            case Solidus:
                {
                alt37=2;
                }
                break;
            case MOD:
                {
                alt37=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 37, 0, input);

                throw nvae;
            }

            switch (alt37) {
                case 1 :
                    // InternalSTFunctionParser.g:2973:2: ( ( Asterisk ) )
                    {
                    // InternalSTFunctionParser.g:2973:2: ( ( Asterisk ) )
                    // InternalSTFunctionParser.g:2974:3: ( Asterisk )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:2975:3: ( Asterisk )
                    // InternalSTFunctionParser.g:2975:4: Asterisk
                    {
                    match(input,Asterisk,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMULEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:2979:2: ( ( Solidus ) )
                    {
                    // InternalSTFunctionParser.g:2979:2: ( ( Solidus ) )
                    // InternalSTFunctionParser.g:2980:3: ( Solidus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:2981:3: ( Solidus )
                    // InternalSTFunctionParser.g:2981:4: Solidus
                    {
                    match(input,Solidus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getDIVEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:2985:2: ( ( MOD ) )
                    {
                    // InternalSTFunctionParser.g:2985:2: ( ( MOD ) )
                    // InternalSTFunctionParser.g:2986:3: ( MOD )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:2987:3: ( MOD )
                    // InternalSTFunctionParser.g:2987:4: MOD
                    {
                    match(input,MOD,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getMulDivModOperatorAccess().getMODEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__MulDivModOperator__Alternatives"


    // $ANTLR start "rule__UnaryOperator__Alternatives"
    // InternalSTFunctionParser.g:2995:1: rule__UnaryOperator__Alternatives : ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) );
    public final void rule__UnaryOperator__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:2999:1: ( ( ( HyphenMinus ) ) | ( ( PlusSign ) ) | ( ( NOT ) ) )
            int alt38=3;
            switch ( input.LA(1) ) {
            case HyphenMinus:
                {
                alt38=1;
                }
                break;
            case PlusSign:
                {
                alt38=2;
                }
                break;
            case NOT:
                {
                alt38=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 38, 0, input);

                throw nvae;
            }

            switch (alt38) {
                case 1 :
                    // InternalSTFunctionParser.g:3000:2: ( ( HyphenMinus ) )
                    {
                    // InternalSTFunctionParser.g:3000:2: ( ( HyphenMinus ) )
                    // InternalSTFunctionParser.g:3001:3: ( HyphenMinus )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3002:3: ( HyphenMinus )
                    // InternalSTFunctionParser.g:3002:4: HyphenMinus
                    {
                    match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getMINUSEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3006:2: ( ( PlusSign ) )
                    {
                    // InternalSTFunctionParser.g:3006:2: ( ( PlusSign ) )
                    // InternalSTFunctionParser.g:3007:3: ( PlusSign )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3008:3: ( PlusSign )
                    // InternalSTFunctionParser.g:3008:4: PlusSign
                    {
                    match(input,PlusSign,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getPLUSEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3012:2: ( ( NOT ) )
                    {
                    // InternalSTFunctionParser.g:3012:2: ( ( NOT ) )
                    // InternalSTFunctionParser.g:3013:3: ( NOT )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:3014:3: ( NOT )
                    // InternalSTFunctionParser.g:3014:4: NOT
                    {
                    match(input,NOT,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getUnaryOperatorAccess().getNOTEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__UnaryOperator__Alternatives"


    // $ANTLR start "rule__STMultiBitAccessSpecifier__Alternatives"
    // InternalSTFunctionParser.g:3022:1: rule__STMultiBitAccessSpecifier__Alternatives : ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) );
    public final void rule__STMultiBitAccessSpecifier__Alternatives() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3026:1: ( ( ( L ) ) | ( ( D_1 ) ) | ( ( W ) ) | ( ( B ) ) | ( ( X ) ) )
            int alt39=5;
            switch ( input.LA(1) ) {
            case L:
                {
                alt39=1;
                }
                break;
            case D_1:
                {
                alt39=2;
                }
                break;
            case W:
                {
                alt39=3;
                }
                break;
            case B:
                {
                alt39=4;
                }
                break;
            case X:
                {
                alt39=5;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return ;}
                NoViableAltException nvae =
                    new NoViableAltException("", 39, 0, input);

                throw nvae;
            }

            switch (alt39) {
                case 1 :
                    // InternalSTFunctionParser.g:3027:2: ( ( L ) )
                    {
                    // InternalSTFunctionParser.g:3027:2: ( ( L ) )
                    // InternalSTFunctionParser.g:3028:3: ( L )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }
                    // InternalSTFunctionParser.g:3029:3: ( L )
                    // InternalSTFunctionParser.g:3029:4: L
                    {
                    match(input,L,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getLEnumLiteralDeclaration_0()); 
                    }

                    }


                    }
                    break;
                case 2 :
                    // InternalSTFunctionParser.g:3033:2: ( ( D_1 ) )
                    {
                    // InternalSTFunctionParser.g:3033:2: ( ( D_1 ) )
                    // InternalSTFunctionParser.g:3034:3: ( D_1 )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }
                    // InternalSTFunctionParser.g:3035:3: ( D_1 )
                    // InternalSTFunctionParser.g:3035:4: D_1
                    {
                    match(input,D_1,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getDEnumLiteralDeclaration_1()); 
                    }

                    }


                    }
                    break;
                case 3 :
                    // InternalSTFunctionParser.g:3039:2: ( ( W ) )
                    {
                    // InternalSTFunctionParser.g:3039:2: ( ( W ) )
                    // InternalSTFunctionParser.g:3040:3: ( W )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }
                    // InternalSTFunctionParser.g:3041:3: ( W )
                    // InternalSTFunctionParser.g:3041:4: W
                    {
                    match(input,W,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getWEnumLiteralDeclaration_2()); 
                    }

                    }


                    }
                    break;
                case 4 :
                    // InternalSTFunctionParser.g:3045:2: ( ( B ) )
                    {
                    // InternalSTFunctionParser.g:3045:2: ( ( B ) )
                    // InternalSTFunctionParser.g:3046:3: ( B )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }
                    // InternalSTFunctionParser.g:3047:3: ( B )
                    // InternalSTFunctionParser.g:3047:4: B
                    {
                    match(input,B,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getBEnumLiteralDeclaration_3()); 
                    }

                    }


                    }
                    break;
                case 5 :
                    // InternalSTFunctionParser.g:3051:2: ( ( X ) )
                    {
                    // InternalSTFunctionParser.g:3051:2: ( ( X ) )
                    // InternalSTFunctionParser.g:3052:3: ( X )
                    {
                    if ( state.backtracking==0 ) {
                       before(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }
                    // InternalSTFunctionParser.g:3053:3: ( X )
                    // InternalSTFunctionParser.g:3053:4: X
                    {
                    match(input,X,FOLLOW_2); if (state.failed) return ;

                    }

                    if ( state.backtracking==0 ) {
                       after(grammarAccess.getSTMultiBitAccessSpecifierAccess().getXEnumLiteralDeclaration_4()); 
                    }

                    }


                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultiBitAccessSpecifier__Alternatives"


    // $ANTLR start "rule__FunctionDefinition__Group__0"
    // InternalSTFunctionParser.g:3061:1: rule__FunctionDefinition__Group__0 : rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1 ;
    public final void rule__FunctionDefinition__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3065:1: ( rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1 )
            // InternalSTFunctionParser.g:3066:2: rule__FunctionDefinition__Group__0__Impl rule__FunctionDefinition__Group__1
            {
            pushFollow(FOLLOW_5);
            rule__FunctionDefinition__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__0"


    // $ANTLR start "rule__FunctionDefinition__Group__0__Impl"
    // InternalSTFunctionParser.g:3073:1: rule__FunctionDefinition__Group__0__Impl : ( () ) ;
    public final void rule__FunctionDefinition__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3077:1: ( ( () ) )
            // InternalSTFunctionParser.g:3078:1: ( () )
            {
            // InternalSTFunctionParser.g:3078:1: ( () )
            // InternalSTFunctionParser.g:3079:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0()); 
            }
            // InternalSTFunctionParser.g:3080:2: ()
            // InternalSTFunctionParser.g:3080:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getFunctionDefinitionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__0__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__1"
    // InternalSTFunctionParser.g:3088:1: rule__FunctionDefinition__Group__1 : rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2 ;
    public final void rule__FunctionDefinition__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3092:1: ( rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2 )
            // InternalSTFunctionParser.g:3093:2: rule__FunctionDefinition__Group__1__Impl rule__FunctionDefinition__Group__2
            {
            pushFollow(FOLLOW_6);
            rule__FunctionDefinition__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__1"


    // $ANTLR start "rule__FunctionDefinition__Group__1__Impl"
    // InternalSTFunctionParser.g:3100:1: rule__FunctionDefinition__Group__1__Impl : ( FUNCTION ) ;
    public final void rule__FunctionDefinition__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3104:1: ( ( FUNCTION ) )
            // InternalSTFunctionParser.g:3105:1: ( FUNCTION )
            {
            // InternalSTFunctionParser.g:3105:1: ( FUNCTION )
            // InternalSTFunctionParser.g:3106:2: FUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getFUNCTIONKeyword_1()); 
            }
            match(input,FUNCTION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getFUNCTIONKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__1__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__2"
    // InternalSTFunctionParser.g:3115:1: rule__FunctionDefinition__Group__2 : rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3 ;
    public final void rule__FunctionDefinition__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3119:1: ( rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3 )
            // InternalSTFunctionParser.g:3120:2: rule__FunctionDefinition__Group__2__Impl rule__FunctionDefinition__Group__3
            {
            pushFollow(FOLLOW_7);
            rule__FunctionDefinition__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__2"


    // $ANTLR start "rule__FunctionDefinition__Group__2__Impl"
    // InternalSTFunctionParser.g:3127:1: rule__FunctionDefinition__Group__2__Impl : ( ( rule__FunctionDefinition__NameAssignment_2 ) ) ;
    public final void rule__FunctionDefinition__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3131:1: ( ( ( rule__FunctionDefinition__NameAssignment_2 ) ) )
            // InternalSTFunctionParser.g:3132:1: ( ( rule__FunctionDefinition__NameAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:3132:1: ( ( rule__FunctionDefinition__NameAssignment_2 ) )
            // InternalSTFunctionParser.g:3133:2: ( rule__FunctionDefinition__NameAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2()); 
            }
            // InternalSTFunctionParser.g:3134:2: ( rule__FunctionDefinition__NameAssignment_2 )
            // InternalSTFunctionParser.g:3134:3: rule__FunctionDefinition__NameAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__NameAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getNameAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__2__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__3"
    // InternalSTFunctionParser.g:3142:1: rule__FunctionDefinition__Group__3 : rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4 ;
    public final void rule__FunctionDefinition__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3146:1: ( rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4 )
            // InternalSTFunctionParser.g:3147:2: rule__FunctionDefinition__Group__3__Impl rule__FunctionDefinition__Group__4
            {
            pushFollow(FOLLOW_7);
            rule__FunctionDefinition__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__3"


    // $ANTLR start "rule__FunctionDefinition__Group__3__Impl"
    // InternalSTFunctionParser.g:3154:1: rule__FunctionDefinition__Group__3__Impl : ( ( rule__FunctionDefinition__Group_3__0 )? ) ;
    public final void rule__FunctionDefinition__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3158:1: ( ( ( rule__FunctionDefinition__Group_3__0 )? ) )
            // InternalSTFunctionParser.g:3159:1: ( ( rule__FunctionDefinition__Group_3__0 )? )
            {
            // InternalSTFunctionParser.g:3159:1: ( ( rule__FunctionDefinition__Group_3__0 )? )
            // InternalSTFunctionParser.g:3160:2: ( rule__FunctionDefinition__Group_3__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getGroup_3()); 
            }
            // InternalSTFunctionParser.g:3161:2: ( rule__FunctionDefinition__Group_3__0 )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( (LA40_0==Colon) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // InternalSTFunctionParser.g:3161:3: rule__FunctionDefinition__Group_3__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__FunctionDefinition__Group_3__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getGroup_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__3__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__4"
    // InternalSTFunctionParser.g:3169:1: rule__FunctionDefinition__Group__4 : rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5 ;
    public final void rule__FunctionDefinition__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3173:1: ( rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5 )
            // InternalSTFunctionParser.g:3174:2: rule__FunctionDefinition__Group__4__Impl rule__FunctionDefinition__Group__5
            {
            pushFollow(FOLLOW_7);
            rule__FunctionDefinition__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__4"


    // $ANTLR start "rule__FunctionDefinition__Group__4__Impl"
    // InternalSTFunctionParser.g:3181:1: rule__FunctionDefinition__Group__4__Impl : ( ( rule__FunctionDefinition__Alternatives_4 )* ) ;
    public final void rule__FunctionDefinition__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3185:1: ( ( ( rule__FunctionDefinition__Alternatives_4 )* ) )
            // InternalSTFunctionParser.g:3186:1: ( ( rule__FunctionDefinition__Alternatives_4 )* )
            {
            // InternalSTFunctionParser.g:3186:1: ( ( rule__FunctionDefinition__Alternatives_4 )* )
            // InternalSTFunctionParser.g:3187:2: ( rule__FunctionDefinition__Alternatives_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getAlternatives_4()); 
            }
            // InternalSTFunctionParser.g:3188:2: ( rule__FunctionDefinition__Alternatives_4 )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==VAR_OUTPUT||LA41_0==VAR_INPUT||LA41_0==VAR_TEMP||LA41_0==VAR) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3188:3: rule__FunctionDefinition__Alternatives_4
            	    {
            	    pushFollow(FOLLOW_8);
            	    rule__FunctionDefinition__Alternatives_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getAlternatives_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__4__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__5"
    // InternalSTFunctionParser.g:3196:1: rule__FunctionDefinition__Group__5 : rule__FunctionDefinition__Group__5__Impl rule__FunctionDefinition__Group__6 ;
    public final void rule__FunctionDefinition__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3200:1: ( rule__FunctionDefinition__Group__5__Impl rule__FunctionDefinition__Group__6 )
            // InternalSTFunctionParser.g:3201:2: rule__FunctionDefinition__Group__5__Impl rule__FunctionDefinition__Group__6
            {
            pushFollow(FOLLOW_7);
            rule__FunctionDefinition__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__5"


    // $ANTLR start "rule__FunctionDefinition__Group__5__Impl"
    // InternalSTFunctionParser.g:3208:1: rule__FunctionDefinition__Group__5__Impl : ( ( rule__FunctionDefinition__CodeAssignment_5 )* ) ;
    public final void rule__FunctionDefinition__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3212:1: ( ( ( rule__FunctionDefinition__CodeAssignment_5 )* ) )
            // InternalSTFunctionParser.g:3213:1: ( ( rule__FunctionDefinition__CodeAssignment_5 )* )
            {
            // InternalSTFunctionParser.g:3213:1: ( ( rule__FunctionDefinition__CodeAssignment_5 )* )
            // InternalSTFunctionParser.g:3214:2: ( rule__FunctionDefinition__CodeAssignment_5 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getCodeAssignment_5()); 
            }
            // InternalSTFunctionParser.g:3215:2: ( rule__FunctionDefinition__CodeAssignment_5 )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( ((LA42_0>=LDATE_AND_TIME && LA42_0<=DATE_AND_TIME)||(LA42_0>=LTIME_OF_DAY && LA42_0<=TIME_OF_DAY)||LA42_0==CONTINUE||LA42_0==WSTRING||(LA42_0>=REPEAT && LA42_0<=STRING)||LA42_0==DWORD||(LA42_0>=FALSE && LA42_0<=ULINT)||(LA42_0>=USINT && LA42_0<=DINT)||(LA42_0>=EXIT && LA42_0<=SINT)||(LA42_0>=TIME && LA42_0<=WORD)||(LA42_0>=FOR && LA42_0<=LDT)||LA42_0==TOD||(LA42_0>=DT && LA42_0<=LT)||LA42_0==LeftParenthesis||LA42_0==PlusSign||LA42_0==HyphenMinus||LA42_0==Semicolon||LA42_0==D||LA42_0==T||(LA42_0>=RULE_NON_DECIMAL && LA42_0<=RULE_INT)||(LA42_0>=RULE_ID && LA42_0<=RULE_WSTRING)) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3215:3: rule__FunctionDefinition__CodeAssignment_5
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__FunctionDefinition__CodeAssignment_5();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getCodeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__5__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group__6"
    // InternalSTFunctionParser.g:3223:1: rule__FunctionDefinition__Group__6 : rule__FunctionDefinition__Group__6__Impl ;
    public final void rule__FunctionDefinition__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3227:1: ( rule__FunctionDefinition__Group__6__Impl )
            // InternalSTFunctionParser.g:3228:2: rule__FunctionDefinition__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__6"


    // $ANTLR start "rule__FunctionDefinition__Group__6__Impl"
    // InternalSTFunctionParser.g:3234:1: rule__FunctionDefinition__Group__6__Impl : ( END_FUNCTION ) ;
    public final void rule__FunctionDefinition__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3238:1: ( ( END_FUNCTION ) )
            // InternalSTFunctionParser.g:3239:1: ( END_FUNCTION )
            {
            // InternalSTFunctionParser.g:3239:1: ( END_FUNCTION )
            // InternalSTFunctionParser.g:3240:2: END_FUNCTION
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getEND_FUNCTIONKeyword_6()); 
            }
            match(input,END_FUNCTION,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getEND_FUNCTIONKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group__6__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group_3__0"
    // InternalSTFunctionParser.g:3250:1: rule__FunctionDefinition__Group_3__0 : rule__FunctionDefinition__Group_3__0__Impl rule__FunctionDefinition__Group_3__1 ;
    public final void rule__FunctionDefinition__Group_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3254:1: ( rule__FunctionDefinition__Group_3__0__Impl rule__FunctionDefinition__Group_3__1 )
            // InternalSTFunctionParser.g:3255:2: rule__FunctionDefinition__Group_3__0__Impl rule__FunctionDefinition__Group_3__1
            {
            pushFollow(FOLLOW_6);
            rule__FunctionDefinition__Group_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_3__0"


    // $ANTLR start "rule__FunctionDefinition__Group_3__0__Impl"
    // InternalSTFunctionParser.g:3262:1: rule__FunctionDefinition__Group_3__0__Impl : ( Colon ) ;
    public final void rule__FunctionDefinition__Group_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3266:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:3267:1: ( Colon )
            {
            // InternalSTFunctionParser.g:3267:1: ( Colon )
            // InternalSTFunctionParser.g:3268:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getColonKeyword_3_0()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getColonKeyword_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_3__0__Impl"


    // $ANTLR start "rule__FunctionDefinition__Group_3__1"
    // InternalSTFunctionParser.g:3277:1: rule__FunctionDefinition__Group_3__1 : rule__FunctionDefinition__Group_3__1__Impl ;
    public final void rule__FunctionDefinition__Group_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3281:1: ( rule__FunctionDefinition__Group_3__1__Impl )
            // InternalSTFunctionParser.g:3282:2: rule__FunctionDefinition__Group_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__Group_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_3__1"


    // $ANTLR start "rule__FunctionDefinition__Group_3__1__Impl"
    // InternalSTFunctionParser.g:3288:1: rule__FunctionDefinition__Group_3__1__Impl : ( ( rule__FunctionDefinition__ReturnTypeAssignment_3_1 ) ) ;
    public final void rule__FunctionDefinition__Group_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3292:1: ( ( ( rule__FunctionDefinition__ReturnTypeAssignment_3_1 ) ) )
            // InternalSTFunctionParser.g:3293:1: ( ( rule__FunctionDefinition__ReturnTypeAssignment_3_1 ) )
            {
            // InternalSTFunctionParser.g:3293:1: ( ( rule__FunctionDefinition__ReturnTypeAssignment_3_1 ) )
            // InternalSTFunctionParser.g:3294:2: ( rule__FunctionDefinition__ReturnTypeAssignment_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeAssignment_3_1()); 
            }
            // InternalSTFunctionParser.g:3295:2: ( rule__FunctionDefinition__ReturnTypeAssignment_3_1 )
            // InternalSTFunctionParser.g:3295:3: rule__FunctionDefinition__ReturnTypeAssignment_3_1
            {
            pushFollow(FOLLOW_2);
            rule__FunctionDefinition__ReturnTypeAssignment_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeAssignment_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__Group_3__1__Impl"


    // $ANTLR start "rule__VarDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:3304:1: rule__VarDeclarationBlock__Group__0 : rule__VarDeclarationBlock__Group__0__Impl rule__VarDeclarationBlock__Group__1 ;
    public final void rule__VarDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3308:1: ( rule__VarDeclarationBlock__Group__0__Impl rule__VarDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:3309:2: rule__VarDeclarationBlock__Group__0__Impl rule__VarDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_10);
            rule__VarDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:3316:1: rule__VarDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3320:1: ( ( () ) )
            // InternalSTFunctionParser.g:3321:1: ( () )
            {
            // InternalSTFunctionParser.g:3321:1: ( () )
            // InternalSTFunctionParser.g:3322:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:3323:2: ()
            // InternalSTFunctionParser.g:3323:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:3331:1: rule__VarDeclarationBlock__Group__1 : rule__VarDeclarationBlock__Group__1__Impl rule__VarDeclarationBlock__Group__2 ;
    public final void rule__VarDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3335:1: ( rule__VarDeclarationBlock__Group__1__Impl rule__VarDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:3336:2: rule__VarDeclarationBlock__Group__1__Impl rule__VarDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:3343:1: rule__VarDeclarationBlock__Group__1__Impl : ( VAR ) ;
    public final void rule__VarDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3347:1: ( ( VAR ) )
            // InternalSTFunctionParser.g:3348:1: ( VAR )
            {
            // InternalSTFunctionParser.g:3348:1: ( VAR )
            // InternalSTFunctionParser.g:3349:2: VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getVARKeyword_1()); 
            }
            match(input,VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getVARKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:3358:1: rule__VarDeclarationBlock__Group__2 : rule__VarDeclarationBlock__Group__2__Impl rule__VarDeclarationBlock__Group__3 ;
    public final void rule__VarDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3362:1: ( rule__VarDeclarationBlock__Group__2__Impl rule__VarDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:3363:2: rule__VarDeclarationBlock__Group__2__Impl rule__VarDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:3370:1: rule__VarDeclarationBlock__Group__2__Impl : ( ( rule__VarDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3374:1: ( ( ( rule__VarDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:3375:1: ( ( rule__VarDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:3375:1: ( ( rule__VarDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:3376:2: ( rule__VarDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:3377:2: ( rule__VarDeclarationBlock__ConstantAssignment_2 )?
            int alt43=2;
            int LA43_0 = input.LA(1);

            if ( (LA43_0==CONSTANT) ) {
                alt43=1;
            }
            switch (alt43) {
                case 1 :
                    // InternalSTFunctionParser.g:3377:3: rule__VarDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:3385:1: rule__VarDeclarationBlock__Group__3 : rule__VarDeclarationBlock__Group__3__Impl rule__VarDeclarationBlock__Group__4 ;
    public final void rule__VarDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3389:1: ( rule__VarDeclarationBlock__Group__3__Impl rule__VarDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:3390:2: rule__VarDeclarationBlock__Group__3__Impl rule__VarDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__VarDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:3397:1: rule__VarDeclarationBlock__Group__3__Impl : ( ( rule__VarDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3401:1: ( ( ( rule__VarDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:3402:1: ( ( rule__VarDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:3402:1: ( ( rule__VarDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:3403:2: ( rule__VarDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:3404:2: ( rule__VarDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==RULE_ID) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3404:3: rule__VarDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:3412:1: rule__VarDeclarationBlock__Group__4 : rule__VarDeclarationBlock__Group__4__Impl ;
    public final void rule__VarDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3416:1: ( rule__VarDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:3417:2: rule__VarDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:3423:1: rule__VarDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3427:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:3428:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:3428:1: ( END_VAR )
            // InternalSTFunctionParser.g:3429:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:3439:1: rule__VarTempDeclarationBlock__Group__0 : rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1 ;
    public final void rule__VarTempDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3443:1: ( rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:3444:2: rule__VarTempDeclarationBlock__Group__0__Impl rule__VarTempDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_13);
            rule__VarTempDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:3451:1: rule__VarTempDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarTempDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3455:1: ( ( () ) )
            // InternalSTFunctionParser.g:3456:1: ( () )
            {
            // InternalSTFunctionParser.g:3456:1: ( () )
            // InternalSTFunctionParser.g:3457:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:3458:2: ()
            // InternalSTFunctionParser.g:3458:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:3466:1: rule__VarTempDeclarationBlock__Group__1 : rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2 ;
    public final void rule__VarTempDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3470:1: ( rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:3471:2: rule__VarTempDeclarationBlock__Group__1__Impl rule__VarTempDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__VarTempDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:3478:1: rule__VarTempDeclarationBlock__Group__1__Impl : ( VAR_TEMP ) ;
    public final void rule__VarTempDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3482:1: ( ( VAR_TEMP ) )
            // InternalSTFunctionParser.g:3483:1: ( VAR_TEMP )
            {
            // InternalSTFunctionParser.g:3483:1: ( VAR_TEMP )
            // InternalSTFunctionParser.g:3484:2: VAR_TEMP
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }
            match(input,VAR_TEMP,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVAR_TEMPKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:3493:1: rule__VarTempDeclarationBlock__Group__2 : rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3 ;
    public final void rule__VarTempDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3497:1: ( rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:3498:2: rule__VarTempDeclarationBlock__Group__2__Impl rule__VarTempDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__VarTempDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:3505:1: rule__VarTempDeclarationBlock__Group__2__Impl : ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarTempDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3509:1: ( ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:3510:1: ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:3510:1: ( ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:3511:2: ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:3512:2: ( rule__VarTempDeclarationBlock__ConstantAssignment_2 )?
            int alt45=2;
            int LA45_0 = input.LA(1);

            if ( (LA45_0==CONSTANT) ) {
                alt45=1;
            }
            switch (alt45) {
                case 1 :
                    // InternalSTFunctionParser.g:3512:3: rule__VarTempDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarTempDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:3520:1: rule__VarTempDeclarationBlock__Group__3 : rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4 ;
    public final void rule__VarTempDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3524:1: ( rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:3525:2: rule__VarTempDeclarationBlock__Group__3__Impl rule__VarTempDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__VarTempDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:3532:1: rule__VarTempDeclarationBlock__Group__3__Impl : ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarTempDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3536:1: ( ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:3537:1: ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:3537:1: ( ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:3538:2: ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:3539:2: ( rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==RULE_ID) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3539:3: rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:3547:1: rule__VarTempDeclarationBlock__Group__4 : rule__VarTempDeclarationBlock__Group__4__Impl ;
    public final void rule__VarTempDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3551:1: ( rule__VarTempDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:3552:2: rule__VarTempDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarTempDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarTempDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:3558:1: rule__VarTempDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarTempDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3562:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:3563:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:3563:1: ( END_VAR )
            // InternalSTFunctionParser.g:3564:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:3574:1: rule__VarInputDeclarationBlock__Group__0 : rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1 ;
    public final void rule__VarInputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3578:1: ( rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:3579:2: rule__VarInputDeclarationBlock__Group__0__Impl rule__VarInputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_14);
            rule__VarInputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:3586:1: rule__VarInputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarInputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3590:1: ( ( () ) )
            // InternalSTFunctionParser.g:3591:1: ( () )
            {
            // InternalSTFunctionParser.g:3591:1: ( () )
            // InternalSTFunctionParser.g:3592:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:3593:2: ()
            // InternalSTFunctionParser.g:3593:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:3601:1: rule__VarInputDeclarationBlock__Group__1 : rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2 ;
    public final void rule__VarInputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3605:1: ( rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:3606:2: rule__VarInputDeclarationBlock__Group__1__Impl rule__VarInputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__VarInputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:3613:1: rule__VarInputDeclarationBlock__Group__1__Impl : ( VAR_INPUT ) ;
    public final void rule__VarInputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3617:1: ( ( VAR_INPUT ) )
            // InternalSTFunctionParser.g:3618:1: ( VAR_INPUT )
            {
            // InternalSTFunctionParser.g:3618:1: ( VAR_INPUT )
            // InternalSTFunctionParser.g:3619:2: VAR_INPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }
            match(input,VAR_INPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVAR_INPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:3628:1: rule__VarInputDeclarationBlock__Group__2 : rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3 ;
    public final void rule__VarInputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3632:1: ( rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:3633:2: rule__VarInputDeclarationBlock__Group__2__Impl rule__VarInputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__VarInputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:3640:1: rule__VarInputDeclarationBlock__Group__2__Impl : ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarInputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3644:1: ( ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:3645:1: ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:3645:1: ( ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:3646:2: ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:3647:2: ( rule__VarInputDeclarationBlock__ConstantAssignment_2 )?
            int alt47=2;
            int LA47_0 = input.LA(1);

            if ( (LA47_0==CONSTANT) ) {
                alt47=1;
            }
            switch (alt47) {
                case 1 :
                    // InternalSTFunctionParser.g:3647:3: rule__VarInputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarInputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:3655:1: rule__VarInputDeclarationBlock__Group__3 : rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4 ;
    public final void rule__VarInputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3659:1: ( rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:3660:2: rule__VarInputDeclarationBlock__Group__3__Impl rule__VarInputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__VarInputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:3667:1: rule__VarInputDeclarationBlock__Group__3__Impl : ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarInputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3671:1: ( ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:3672:1: ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:3672:1: ( ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:3673:2: ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:3674:2: ( rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==RULE_ID) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3674:3: rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:3682:1: rule__VarInputDeclarationBlock__Group__4 : rule__VarInputDeclarationBlock__Group__4__Impl ;
    public final void rule__VarInputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3686:1: ( rule__VarInputDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:3687:2: rule__VarInputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarInputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarInputDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:3693:1: rule__VarInputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarInputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3697:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:3698:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:3698:1: ( END_VAR )
            // InternalSTFunctionParser.g:3699:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__0"
    // InternalSTFunctionParser.g:3709:1: rule__VarOutputDeclarationBlock__Group__0 : rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1 ;
    public final void rule__VarOutputDeclarationBlock__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3713:1: ( rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1 )
            // InternalSTFunctionParser.g:3714:2: rule__VarOutputDeclarationBlock__Group__0__Impl rule__VarOutputDeclarationBlock__Group__1
            {
            pushFollow(FOLLOW_15);
            rule__VarOutputDeclarationBlock__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__0"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__0__Impl"
    // InternalSTFunctionParser.g:3721:1: rule__VarOutputDeclarationBlock__Group__0__Impl : ( () ) ;
    public final void rule__VarOutputDeclarationBlock__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3725:1: ( ( () ) )
            // InternalSTFunctionParser.g:3726:1: ( () )
            {
            // InternalSTFunctionParser.g:3726:1: ( () )
            // InternalSTFunctionParser.g:3727:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }
            // InternalSTFunctionParser.g:3728:2: ()
            // InternalSTFunctionParser.g:3728:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationBlockAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__0__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__1"
    // InternalSTFunctionParser.g:3736:1: rule__VarOutputDeclarationBlock__Group__1 : rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2 ;
    public final void rule__VarOutputDeclarationBlock__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3740:1: ( rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2 )
            // InternalSTFunctionParser.g:3741:2: rule__VarOutputDeclarationBlock__Group__1__Impl rule__VarOutputDeclarationBlock__Group__2
            {
            pushFollow(FOLLOW_11);
            rule__VarOutputDeclarationBlock__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__1"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__1__Impl"
    // InternalSTFunctionParser.g:3748:1: rule__VarOutputDeclarationBlock__Group__1__Impl : ( VAR_OUTPUT ) ;
    public final void rule__VarOutputDeclarationBlock__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3752:1: ( ( VAR_OUTPUT ) )
            // InternalSTFunctionParser.g:3753:1: ( VAR_OUTPUT )
            {
            // InternalSTFunctionParser.g:3753:1: ( VAR_OUTPUT )
            // InternalSTFunctionParser.g:3754:2: VAR_OUTPUT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }
            match(input,VAR_OUTPUT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVAR_OUTPUTKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__1__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__2"
    // InternalSTFunctionParser.g:3763:1: rule__VarOutputDeclarationBlock__Group__2 : rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3 ;
    public final void rule__VarOutputDeclarationBlock__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3767:1: ( rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3 )
            // InternalSTFunctionParser.g:3768:2: rule__VarOutputDeclarationBlock__Group__2__Impl rule__VarOutputDeclarationBlock__Group__3
            {
            pushFollow(FOLLOW_11);
            rule__VarOutputDeclarationBlock__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__2"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__2__Impl"
    // InternalSTFunctionParser.g:3775:1: rule__VarOutputDeclarationBlock__Group__2__Impl : ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? ) ;
    public final void rule__VarOutputDeclarationBlock__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3779:1: ( ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? ) )
            // InternalSTFunctionParser.g:3780:1: ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? )
            {
            // InternalSTFunctionParser.g:3780:1: ( ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )? )
            // InternalSTFunctionParser.g:3781:2: ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }
            // InternalSTFunctionParser.g:3782:2: ( rule__VarOutputDeclarationBlock__ConstantAssignment_2 )?
            int alt49=2;
            int LA49_0 = input.LA(1);

            if ( (LA49_0==CONSTANT) ) {
                alt49=1;
            }
            switch (alt49) {
                case 1 :
                    // InternalSTFunctionParser.g:3782:3: rule__VarOutputDeclarationBlock__ConstantAssignment_2
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarOutputDeclarationBlock__ConstantAssignment_2();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__2__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__3"
    // InternalSTFunctionParser.g:3790:1: rule__VarOutputDeclarationBlock__Group__3 : rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4 ;
    public final void rule__VarOutputDeclarationBlock__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3794:1: ( rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4 )
            // InternalSTFunctionParser.g:3795:2: rule__VarOutputDeclarationBlock__Group__3__Impl rule__VarOutputDeclarationBlock__Group__4
            {
            pushFollow(FOLLOW_11);
            rule__VarOutputDeclarationBlock__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__3"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__3__Impl"
    // InternalSTFunctionParser.g:3802:1: rule__VarOutputDeclarationBlock__Group__3__Impl : ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) ;
    public final void rule__VarOutputDeclarationBlock__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3806:1: ( ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:3807:1: ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:3807:1: ( ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )* )
            // InternalSTFunctionParser.g:3808:2: ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:3809:2: ( rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==RULE_ID) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // InternalSTFunctionParser.g:3809:3: rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3
            	    {
            	    pushFollow(FOLLOW_12);
            	    rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__3__Impl"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__4"
    // InternalSTFunctionParser.g:3817:1: rule__VarOutputDeclarationBlock__Group__4 : rule__VarOutputDeclarationBlock__Group__4__Impl ;
    public final void rule__VarOutputDeclarationBlock__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3821:1: ( rule__VarOutputDeclarationBlock__Group__4__Impl )
            // InternalSTFunctionParser.g:3822:2: rule__VarOutputDeclarationBlock__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarOutputDeclarationBlock__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__4"


    // $ANTLR start "rule__VarOutputDeclarationBlock__Group__4__Impl"
    // InternalSTFunctionParser.g:3828:1: rule__VarOutputDeclarationBlock__Group__4__Impl : ( END_VAR ) ;
    public final void rule__VarOutputDeclarationBlock__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3832:1: ( ( END_VAR ) )
            // InternalSTFunctionParser.g:3833:1: ( END_VAR )
            {
            // InternalSTFunctionParser.g:3833:1: ( END_VAR )
            // InternalSTFunctionParser.g:3834:2: END_VAR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }
            match(input,END_VAR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getEND_VARKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__0"
    // InternalSTFunctionParser.g:3844:1: rule__VarDeclaration__Group__0 : rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 ;
    public final void rule__VarDeclaration__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3848:1: ( rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1 )
            // InternalSTFunctionParser.g:3849:2: rule__VarDeclaration__Group__0__Impl rule__VarDeclaration__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0"


    // $ANTLR start "rule__VarDeclaration__Group__0__Impl"
    // InternalSTFunctionParser.g:3856:1: rule__VarDeclaration__Group__0__Impl : ( () ) ;
    public final void rule__VarDeclaration__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3860:1: ( ( () ) )
            // InternalSTFunctionParser.g:3861:1: ( () )
            {
            // InternalSTFunctionParser.g:3861:1: ( () )
            // InternalSTFunctionParser.g:3862:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }
            // InternalSTFunctionParser.g:3863:2: ()
            // InternalSTFunctionParser.g:3863:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSTVarDeclarationAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__1"
    // InternalSTFunctionParser.g:3871:1: rule__VarDeclaration__Group__1 : rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 ;
    public final void rule__VarDeclaration__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3875:1: ( rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2 )
            // InternalSTFunctionParser.g:3876:2: rule__VarDeclaration__Group__1__Impl rule__VarDeclaration__Group__2
            {
            pushFollow(FOLLOW_16);
            rule__VarDeclaration__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1"


    // $ANTLR start "rule__VarDeclaration__Group__1__Impl"
    // InternalSTFunctionParser.g:3883:1: rule__VarDeclaration__Group__1__Impl : ( ( rule__VarDeclaration__NameAssignment_1 ) ) ;
    public final void rule__VarDeclaration__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3887:1: ( ( ( rule__VarDeclaration__NameAssignment_1 ) ) )
            // InternalSTFunctionParser.g:3888:1: ( ( rule__VarDeclaration__NameAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:3888:1: ( ( rule__VarDeclaration__NameAssignment_1 ) )
            // InternalSTFunctionParser.g:3889:2: ( rule__VarDeclaration__NameAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameAssignment_1()); 
            }
            // InternalSTFunctionParser.g:3890:2: ( rule__VarDeclaration__NameAssignment_1 )
            // InternalSTFunctionParser.g:3890:3: rule__VarDeclaration__NameAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__NameAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__2"
    // InternalSTFunctionParser.g:3898:1: rule__VarDeclaration__Group__2 : rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 ;
    public final void rule__VarDeclaration__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3902:1: ( rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3 )
            // InternalSTFunctionParser.g:3903:2: rule__VarDeclaration__Group__2__Impl rule__VarDeclaration__Group__3
            {
            pushFollow(FOLLOW_16);
            rule__VarDeclaration__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2"


    // $ANTLR start "rule__VarDeclaration__Group__2__Impl"
    // InternalSTFunctionParser.g:3910:1: rule__VarDeclaration__Group__2__Impl : ( ( rule__VarDeclaration__Group_2__0 )? ) ;
    public final void rule__VarDeclaration__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3914:1: ( ( ( rule__VarDeclaration__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:3915:1: ( ( rule__VarDeclaration__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:3915:1: ( ( rule__VarDeclaration__Group_2__0 )? )
            // InternalSTFunctionParser.g:3916:2: ( rule__VarDeclaration__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:3917:2: ( rule__VarDeclaration__Group_2__0 )?
            int alt51=2;
            int LA51_0 = input.LA(1);

            if ( (LA51_0==AT) ) {
                alt51=1;
            }
            switch (alt51) {
                case 1 :
                    // InternalSTFunctionParser.g:3917:3: rule__VarDeclaration__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__3"
    // InternalSTFunctionParser.g:3925:1: rule__VarDeclaration__Group__3 : rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 ;
    public final void rule__VarDeclaration__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3929:1: ( rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4 )
            // InternalSTFunctionParser.g:3930:2: rule__VarDeclaration__Group__3__Impl rule__VarDeclaration__Group__4
            {
            pushFollow(FOLLOW_17);
            rule__VarDeclaration__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3"


    // $ANTLR start "rule__VarDeclaration__Group__3__Impl"
    // InternalSTFunctionParser.g:3937:1: rule__VarDeclaration__Group__3__Impl : ( Colon ) ;
    public final void rule__VarDeclaration__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3941:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:3942:1: ( Colon )
            {
            // InternalSTFunctionParser.g:3942:1: ( Colon )
            // InternalSTFunctionParser.g:3943:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__4"
    // InternalSTFunctionParser.g:3952:1: rule__VarDeclaration__Group__4 : rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 ;
    public final void rule__VarDeclaration__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3956:1: ( rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5 )
            // InternalSTFunctionParser.g:3957:2: rule__VarDeclaration__Group__4__Impl rule__VarDeclaration__Group__5
            {
            pushFollow(FOLLOW_17);
            rule__VarDeclaration__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4"


    // $ANTLR start "rule__VarDeclaration__Group__4__Impl"
    // InternalSTFunctionParser.g:3964:1: rule__VarDeclaration__Group__4__Impl : ( ( rule__VarDeclaration__Group_4__0 )? ) ;
    public final void rule__VarDeclaration__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3968:1: ( ( ( rule__VarDeclaration__Group_4__0 )? ) )
            // InternalSTFunctionParser.g:3969:1: ( ( rule__VarDeclaration__Group_4__0 )? )
            {
            // InternalSTFunctionParser.g:3969:1: ( ( rule__VarDeclaration__Group_4__0 )? )
            // InternalSTFunctionParser.g:3970:2: ( rule__VarDeclaration__Group_4__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_4()); 
            }
            // InternalSTFunctionParser.g:3971:2: ( rule__VarDeclaration__Group_4__0 )?
            int alt52=2;
            int LA52_0 = input.LA(1);

            if ( (LA52_0==ARRAY) ) {
                alt52=1;
            }
            switch (alt52) {
                case 1 :
                    // InternalSTFunctionParser.g:3971:3: rule__VarDeclaration__Group_4__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_4__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__4__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__5"
    // InternalSTFunctionParser.g:3979:1: rule__VarDeclaration__Group__5 : rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 ;
    public final void rule__VarDeclaration__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3983:1: ( rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6 )
            // InternalSTFunctionParser.g:3984:2: rule__VarDeclaration__Group__5__Impl rule__VarDeclaration__Group__6
            {
            pushFollow(FOLLOW_18);
            rule__VarDeclaration__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5"


    // $ANTLR start "rule__VarDeclaration__Group__5__Impl"
    // InternalSTFunctionParser.g:3991:1: rule__VarDeclaration__Group__5__Impl : ( ( rule__VarDeclaration__TypeAssignment_5 ) ) ;
    public final void rule__VarDeclaration__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:3995:1: ( ( ( rule__VarDeclaration__TypeAssignment_5 ) ) )
            // InternalSTFunctionParser.g:3996:1: ( ( rule__VarDeclaration__TypeAssignment_5 ) )
            {
            // InternalSTFunctionParser.g:3996:1: ( ( rule__VarDeclaration__TypeAssignment_5 ) )
            // InternalSTFunctionParser.g:3997:2: ( rule__VarDeclaration__TypeAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeAssignment_5()); 
            }
            // InternalSTFunctionParser.g:3998:2: ( rule__VarDeclaration__TypeAssignment_5 )
            // InternalSTFunctionParser.g:3998:3: rule__VarDeclaration__TypeAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__TypeAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__5__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__6"
    // InternalSTFunctionParser.g:4006:1: rule__VarDeclaration__Group__6 : rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 ;
    public final void rule__VarDeclaration__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4010:1: ( rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7 )
            // InternalSTFunctionParser.g:4011:2: rule__VarDeclaration__Group__6__Impl rule__VarDeclaration__Group__7
            {
            pushFollow(FOLLOW_18);
            rule__VarDeclaration__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6"


    // $ANTLR start "rule__VarDeclaration__Group__6__Impl"
    // InternalSTFunctionParser.g:4018:1: rule__VarDeclaration__Group__6__Impl : ( ( rule__VarDeclaration__Group_6__0 )? ) ;
    public final void rule__VarDeclaration__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4022:1: ( ( ( rule__VarDeclaration__Group_6__0 )? ) )
            // InternalSTFunctionParser.g:4023:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            {
            // InternalSTFunctionParser.g:4023:1: ( ( rule__VarDeclaration__Group_6__0 )? )
            // InternalSTFunctionParser.g:4024:2: ( rule__VarDeclaration__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }
            // InternalSTFunctionParser.g:4025:2: ( rule__VarDeclaration__Group_6__0 )?
            int alt53=2;
            int LA53_0 = input.LA(1);

            if ( (LA53_0==LeftSquareBracket) ) {
                alt53=1;
            }
            switch (alt53) {
                case 1 :
                    // InternalSTFunctionParser.g:4025:3: rule__VarDeclaration__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__6__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__7"
    // InternalSTFunctionParser.g:4033:1: rule__VarDeclaration__Group__7 : rule__VarDeclaration__Group__7__Impl rule__VarDeclaration__Group__8 ;
    public final void rule__VarDeclaration__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4037:1: ( rule__VarDeclaration__Group__7__Impl rule__VarDeclaration__Group__8 )
            // InternalSTFunctionParser.g:4038:2: rule__VarDeclaration__Group__7__Impl rule__VarDeclaration__Group__8
            {
            pushFollow(FOLLOW_18);
            rule__VarDeclaration__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7"


    // $ANTLR start "rule__VarDeclaration__Group__7__Impl"
    // InternalSTFunctionParser.g:4045:1: rule__VarDeclaration__Group__7__Impl : ( ( rule__VarDeclaration__Group_7__0 )? ) ;
    public final void rule__VarDeclaration__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4049:1: ( ( ( rule__VarDeclaration__Group_7__0 )? ) )
            // InternalSTFunctionParser.g:4050:1: ( ( rule__VarDeclaration__Group_7__0 )? )
            {
            // InternalSTFunctionParser.g:4050:1: ( ( rule__VarDeclaration__Group_7__0 )? )
            // InternalSTFunctionParser.g:4051:2: ( rule__VarDeclaration__Group_7__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_7()); 
            }
            // InternalSTFunctionParser.g:4052:2: ( rule__VarDeclaration__Group_7__0 )?
            int alt54=2;
            int LA54_0 = input.LA(1);

            if ( (LA54_0==ColonEqualsSign) ) {
                alt54=1;
            }
            switch (alt54) {
                case 1 :
                    // InternalSTFunctionParser.g:4052:3: rule__VarDeclaration__Group_7__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__VarDeclaration__Group_7__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__7__Impl"


    // $ANTLR start "rule__VarDeclaration__Group__8"
    // InternalSTFunctionParser.g:4060:1: rule__VarDeclaration__Group__8 : rule__VarDeclaration__Group__8__Impl ;
    public final void rule__VarDeclaration__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4064:1: ( rule__VarDeclaration__Group__8__Impl )
            // InternalSTFunctionParser.g:4065:2: rule__VarDeclaration__Group__8__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__8"


    // $ANTLR start "rule__VarDeclaration__Group__8__Impl"
    // InternalSTFunctionParser.g:4071:1: rule__VarDeclaration__Group__8__Impl : ( Semicolon ) ;
    public final void rule__VarDeclaration__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4075:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:4076:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:4076:1: ( Semicolon )
            // InternalSTFunctionParser.g:4077:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_8()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getSemicolonKeyword_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group__8__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__0"
    // InternalSTFunctionParser.g:4087:1: rule__VarDeclaration__Group_2__0 : rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 ;
    public final void rule__VarDeclaration__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4091:1: ( rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1 )
            // InternalSTFunctionParser.g:4092:2: rule__VarDeclaration__Group_2__0__Impl rule__VarDeclaration__Group_2__1
            {
            pushFollow(FOLLOW_6);
            rule__VarDeclaration__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_2__0__Impl"
    // InternalSTFunctionParser.g:4099:1: rule__VarDeclaration__Group_2__0__Impl : ( AT ) ;
    public final void rule__VarDeclaration__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4103:1: ( ( AT ) )
            // InternalSTFunctionParser.g:4104:1: ( AT )
            {
            // InternalSTFunctionParser.g:4104:1: ( AT )
            // InternalSTFunctionParser.g:4105:2: AT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getATKeyword_2_0()); 
            }
            match(input,AT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getATKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_2__1"
    // InternalSTFunctionParser.g:4114:1: rule__VarDeclaration__Group_2__1 : rule__VarDeclaration__Group_2__1__Impl ;
    public final void rule__VarDeclaration__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4118:1: ( rule__VarDeclaration__Group_2__1__Impl )
            // InternalSTFunctionParser.g:4119:2: rule__VarDeclaration__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_2__1__Impl"
    // InternalSTFunctionParser.g:4125:1: rule__VarDeclaration__Group_2__1__Impl : ( ( rule__VarDeclaration__LocatedAtAssignment_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4129:1: ( ( ( rule__VarDeclaration__LocatedAtAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:4130:1: ( ( rule__VarDeclaration__LocatedAtAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:4130:1: ( ( rule__VarDeclaration__LocatedAtAssignment_2_1 ) )
            // InternalSTFunctionParser.g:4131:2: ( rule__VarDeclaration__LocatedAtAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:4132:2: ( rule__VarDeclaration__LocatedAtAssignment_2_1 )
            // InternalSTFunctionParser.g:4132:3: rule__VarDeclaration__LocatedAtAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__LocatedAtAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4__0"
    // InternalSTFunctionParser.g:4141:1: rule__VarDeclaration__Group_4__0 : rule__VarDeclaration__Group_4__0__Impl rule__VarDeclaration__Group_4__1 ;
    public final void rule__VarDeclaration__Group_4__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4145:1: ( rule__VarDeclaration__Group_4__0__Impl rule__VarDeclaration__Group_4__1 )
            // InternalSTFunctionParser.g:4146:2: rule__VarDeclaration__Group_4__0__Impl rule__VarDeclaration__Group_4__1
            {
            pushFollow(FOLLOW_19);
            rule__VarDeclaration__Group_4__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__0"


    // $ANTLR start "rule__VarDeclaration__Group_4__0__Impl"
    // InternalSTFunctionParser.g:4153:1: rule__VarDeclaration__Group_4__0__Impl : ( ( rule__VarDeclaration__ArrayAssignment_4_0 ) ) ;
    public final void rule__VarDeclaration__Group_4__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4157:1: ( ( ( rule__VarDeclaration__ArrayAssignment_4_0 ) ) )
            // InternalSTFunctionParser.g:4158:1: ( ( rule__VarDeclaration__ArrayAssignment_4_0 ) )
            {
            // InternalSTFunctionParser.g:4158:1: ( ( rule__VarDeclaration__ArrayAssignment_4_0 ) )
            // InternalSTFunctionParser.g:4159:2: ( rule__VarDeclaration__ArrayAssignment_4_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayAssignment_4_0()); 
            }
            // InternalSTFunctionParser.g:4160:2: ( rule__VarDeclaration__ArrayAssignment_4_0 )
            // InternalSTFunctionParser.g:4160:3: rule__VarDeclaration__ArrayAssignment_4_0
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__ArrayAssignment_4_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayAssignment_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4__1"
    // InternalSTFunctionParser.g:4168:1: rule__VarDeclaration__Group_4__1 : rule__VarDeclaration__Group_4__1__Impl rule__VarDeclaration__Group_4__2 ;
    public final void rule__VarDeclaration__Group_4__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4172:1: ( rule__VarDeclaration__Group_4__1__Impl rule__VarDeclaration__Group_4__2 )
            // InternalSTFunctionParser.g:4173:2: rule__VarDeclaration__Group_4__1__Impl rule__VarDeclaration__Group_4__2
            {
            pushFollow(FOLLOW_20);
            rule__VarDeclaration__Group_4__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__1"


    // $ANTLR start "rule__VarDeclaration__Group_4__1__Impl"
    // InternalSTFunctionParser.g:4180:1: rule__VarDeclaration__Group_4__1__Impl : ( ( rule__VarDeclaration__Alternatives_4_1 ) ) ;
    public final void rule__VarDeclaration__Group_4__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4184:1: ( ( ( rule__VarDeclaration__Alternatives_4_1 ) ) )
            // InternalSTFunctionParser.g:4185:1: ( ( rule__VarDeclaration__Alternatives_4_1 ) )
            {
            // InternalSTFunctionParser.g:4185:1: ( ( rule__VarDeclaration__Alternatives_4_1 ) )
            // InternalSTFunctionParser.g:4186:2: ( rule__VarDeclaration__Alternatives_4_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getAlternatives_4_1()); 
            }
            // InternalSTFunctionParser.g:4187:2: ( rule__VarDeclaration__Alternatives_4_1 )
            // InternalSTFunctionParser.g:4187:3: rule__VarDeclaration__Alternatives_4_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Alternatives_4_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getAlternatives_4_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4__2"
    // InternalSTFunctionParser.g:4195:1: rule__VarDeclaration__Group_4__2 : rule__VarDeclaration__Group_4__2__Impl ;
    public final void rule__VarDeclaration__Group_4__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4199:1: ( rule__VarDeclaration__Group_4__2__Impl )
            // InternalSTFunctionParser.g:4200:2: rule__VarDeclaration__Group_4__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__2"


    // $ANTLR start "rule__VarDeclaration__Group_4__2__Impl"
    // InternalSTFunctionParser.g:4206:1: rule__VarDeclaration__Group_4__2__Impl : ( OF ) ;
    public final void rule__VarDeclaration__Group_4__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4210:1: ( ( OF ) )
            // InternalSTFunctionParser.g:4211:1: ( OF )
            {
            // InternalSTFunctionParser.g:4211:1: ( OF )
            // InternalSTFunctionParser.g:4212:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getOFKeyword_4_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getOFKeyword_4_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__0"
    // InternalSTFunctionParser.g:4222:1: rule__VarDeclaration__Group_4_1_0__0 : rule__VarDeclaration__Group_4_1_0__0__Impl rule__VarDeclaration__Group_4_1_0__1 ;
    public final void rule__VarDeclaration__Group_4_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4226:1: ( rule__VarDeclaration__Group_4_1_0__0__Impl rule__VarDeclaration__Group_4_1_0__1 )
            // InternalSTFunctionParser.g:4227:2: rule__VarDeclaration__Group_4_1_0__0__Impl rule__VarDeclaration__Group_4_1_0__1
            {
            pushFollow(FOLLOW_21);
            rule__VarDeclaration__Group_4_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__0"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__0__Impl"
    // InternalSTFunctionParser.g:4234:1: rule__VarDeclaration__Group_4_1_0__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_4_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4238:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:4239:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:4239:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:4240:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__1"
    // InternalSTFunctionParser.g:4249:1: rule__VarDeclaration__Group_4_1_0__1 : rule__VarDeclaration__Group_4_1_0__1__Impl rule__VarDeclaration__Group_4_1_0__2 ;
    public final void rule__VarDeclaration__Group_4_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4253:1: ( rule__VarDeclaration__Group_4_1_0__1__Impl rule__VarDeclaration__Group_4_1_0__2 )
            // InternalSTFunctionParser.g:4254:2: rule__VarDeclaration__Group_4_1_0__1__Impl rule__VarDeclaration__Group_4_1_0__2
            {
            pushFollow(FOLLOW_22);
            rule__VarDeclaration__Group_4_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__1"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__1__Impl"
    // InternalSTFunctionParser.g:4261:1: rule__VarDeclaration__Group_4_1_0__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_4_1_0_1 ) ) ;
    public final void rule__VarDeclaration__Group_4_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4265:1: ( ( ( rule__VarDeclaration__RangesAssignment_4_1_0_1 ) ) )
            // InternalSTFunctionParser.g:4266:1: ( ( rule__VarDeclaration__RangesAssignment_4_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:4266:1: ( ( rule__VarDeclaration__RangesAssignment_4_1_0_1 ) )
            // InternalSTFunctionParser.g:4267:2: ( rule__VarDeclaration__RangesAssignment_4_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }
            // InternalSTFunctionParser.g:4268:2: ( rule__VarDeclaration__RangesAssignment_4_1_0_1 )
            // InternalSTFunctionParser.g:4268:3: rule__VarDeclaration__RangesAssignment_4_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_4_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_4_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__2"
    // InternalSTFunctionParser.g:4276:1: rule__VarDeclaration__Group_4_1_0__2 : rule__VarDeclaration__Group_4_1_0__2__Impl rule__VarDeclaration__Group_4_1_0__3 ;
    public final void rule__VarDeclaration__Group_4_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4280:1: ( rule__VarDeclaration__Group_4_1_0__2__Impl rule__VarDeclaration__Group_4_1_0__3 )
            // InternalSTFunctionParser.g:4281:2: rule__VarDeclaration__Group_4_1_0__2__Impl rule__VarDeclaration__Group_4_1_0__3
            {
            pushFollow(FOLLOW_22);
            rule__VarDeclaration__Group_4_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__2"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__2__Impl"
    // InternalSTFunctionParser.g:4288:1: rule__VarDeclaration__Group_4_1_0__2__Impl : ( ( rule__VarDeclaration__Group_4_1_0_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_4_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4292:1: ( ( ( rule__VarDeclaration__Group_4_1_0_2__0 )* ) )
            // InternalSTFunctionParser.g:4293:1: ( ( rule__VarDeclaration__Group_4_1_0_2__0 )* )
            {
            // InternalSTFunctionParser.g:4293:1: ( ( rule__VarDeclaration__Group_4_1_0_2__0 )* )
            // InternalSTFunctionParser.g:4294:2: ( rule__VarDeclaration__Group_4_1_0_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_4_1_0_2()); 
            }
            // InternalSTFunctionParser.g:4295:2: ( rule__VarDeclaration__Group_4_1_0_2__0 )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==Comma) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4295:3: rule__VarDeclaration__Group_4_1_0_2__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__VarDeclaration__Group_4_1_0_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_4_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__3"
    // InternalSTFunctionParser.g:4303:1: rule__VarDeclaration__Group_4_1_0__3 : rule__VarDeclaration__Group_4_1_0__3__Impl ;
    public final void rule__VarDeclaration__Group_4_1_0__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4307:1: ( rule__VarDeclaration__Group_4_1_0__3__Impl )
            // InternalSTFunctionParser.g:4308:2: rule__VarDeclaration__Group_4_1_0__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__3"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0__3__Impl"
    // InternalSTFunctionParser.g:4314:1: rule__VarDeclaration__Group_4_1_0__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_4_1_0__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4318:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:4319:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:4319:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:4320:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_4_1_0_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0_2__0"
    // InternalSTFunctionParser.g:4330:1: rule__VarDeclaration__Group_4_1_0_2__0 : rule__VarDeclaration__Group_4_1_0_2__0__Impl rule__VarDeclaration__Group_4_1_0_2__1 ;
    public final void rule__VarDeclaration__Group_4_1_0_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4334:1: ( rule__VarDeclaration__Group_4_1_0_2__0__Impl rule__VarDeclaration__Group_4_1_0_2__1 )
            // InternalSTFunctionParser.g:4335:2: rule__VarDeclaration__Group_4_1_0_2__0__Impl rule__VarDeclaration__Group_4_1_0_2__1
            {
            pushFollow(FOLLOW_21);
            rule__VarDeclaration__Group_4_1_0_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0_2__0__Impl"
    // InternalSTFunctionParser.g:4342:1: rule__VarDeclaration__Group_4_1_0_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_4_1_0_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4346:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:4347:1: ( Comma )
            {
            // InternalSTFunctionParser.g:4347:1: ( Comma )
            // InternalSTFunctionParser.g:4348:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_4_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0_2__1"
    // InternalSTFunctionParser.g:4357:1: rule__VarDeclaration__Group_4_1_0_2__1 : rule__VarDeclaration__Group_4_1_0_2__1__Impl ;
    public final void rule__VarDeclaration__Group_4_1_0_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4361:1: ( rule__VarDeclaration__Group_4_1_0_2__1__Impl )
            // InternalSTFunctionParser.g:4362:2: rule__VarDeclaration__Group_4_1_0_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_0_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_0_2__1__Impl"
    // InternalSTFunctionParser.g:4368:1: rule__VarDeclaration__Group_4_1_0_2__1__Impl : ( ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_4_1_0_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4372:1: ( ( ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 ) ) )
            // InternalSTFunctionParser.g:4373:1: ( ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            {
            // InternalSTFunctionParser.g:4373:1: ( ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 ) )
            // InternalSTFunctionParser.g:4374:2: ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }
            // InternalSTFunctionParser.g:4375:2: ( rule__VarDeclaration__RangesAssignment_4_1_0_2_1 )
            // InternalSTFunctionParser.g:4375:3: rule__VarDeclaration__RangesAssignment_4_1_0_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__RangesAssignment_4_1_0_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesAssignment_4_1_0_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_0_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__0"
    // InternalSTFunctionParser.g:4384:1: rule__VarDeclaration__Group_4_1_1__0 : rule__VarDeclaration__Group_4_1_1__0__Impl rule__VarDeclaration__Group_4_1_1__1 ;
    public final void rule__VarDeclaration__Group_4_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4388:1: ( rule__VarDeclaration__Group_4_1_1__0__Impl rule__VarDeclaration__Group_4_1_1__1 )
            // InternalSTFunctionParser.g:4389:2: rule__VarDeclaration__Group_4_1_1__0__Impl rule__VarDeclaration__Group_4_1_1__1
            {
            pushFollow(FOLLOW_24);
            rule__VarDeclaration__Group_4_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__0"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__0__Impl"
    // InternalSTFunctionParser.g:4396:1: rule__VarDeclaration__Group_4_1_1__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_4_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4400:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:4401:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:4401:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:4402:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_4_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__1"
    // InternalSTFunctionParser.g:4411:1: rule__VarDeclaration__Group_4_1_1__1 : rule__VarDeclaration__Group_4_1_1__1__Impl rule__VarDeclaration__Group_4_1_1__2 ;
    public final void rule__VarDeclaration__Group_4_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4415:1: ( rule__VarDeclaration__Group_4_1_1__1__Impl rule__VarDeclaration__Group_4_1_1__2 )
            // InternalSTFunctionParser.g:4416:2: rule__VarDeclaration__Group_4_1_1__1__Impl rule__VarDeclaration__Group_4_1_1__2
            {
            pushFollow(FOLLOW_22);
            rule__VarDeclaration__Group_4_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__1"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__1__Impl"
    // InternalSTFunctionParser.g:4423:1: rule__VarDeclaration__Group_4_1_1__1__Impl : ( ( rule__VarDeclaration__CountAssignment_4_1_1_1 ) ) ;
    public final void rule__VarDeclaration__Group_4_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4427:1: ( ( ( rule__VarDeclaration__CountAssignment_4_1_1_1 ) ) )
            // InternalSTFunctionParser.g:4428:1: ( ( rule__VarDeclaration__CountAssignment_4_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:4428:1: ( ( rule__VarDeclaration__CountAssignment_4_1_1_1 ) )
            // InternalSTFunctionParser.g:4429:2: ( rule__VarDeclaration__CountAssignment_4_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }
            // InternalSTFunctionParser.g:4430:2: ( rule__VarDeclaration__CountAssignment_4_1_1_1 )
            // InternalSTFunctionParser.g:4430:3: rule__VarDeclaration__CountAssignment_4_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_4_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_4_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__2"
    // InternalSTFunctionParser.g:4438:1: rule__VarDeclaration__Group_4_1_1__2 : rule__VarDeclaration__Group_4_1_1__2__Impl rule__VarDeclaration__Group_4_1_1__3 ;
    public final void rule__VarDeclaration__Group_4_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4442:1: ( rule__VarDeclaration__Group_4_1_1__2__Impl rule__VarDeclaration__Group_4_1_1__3 )
            // InternalSTFunctionParser.g:4443:2: rule__VarDeclaration__Group_4_1_1__2__Impl rule__VarDeclaration__Group_4_1_1__3
            {
            pushFollow(FOLLOW_22);
            rule__VarDeclaration__Group_4_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__2"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__2__Impl"
    // InternalSTFunctionParser.g:4450:1: rule__VarDeclaration__Group_4_1_1__2__Impl : ( ( rule__VarDeclaration__Group_4_1_1_2__0 )* ) ;
    public final void rule__VarDeclaration__Group_4_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4454:1: ( ( ( rule__VarDeclaration__Group_4_1_1_2__0 )* ) )
            // InternalSTFunctionParser.g:4455:1: ( ( rule__VarDeclaration__Group_4_1_1_2__0 )* )
            {
            // InternalSTFunctionParser.g:4455:1: ( ( rule__VarDeclaration__Group_4_1_1_2__0 )* )
            // InternalSTFunctionParser.g:4456:2: ( rule__VarDeclaration__Group_4_1_1_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getGroup_4_1_1_2()); 
            }
            // InternalSTFunctionParser.g:4457:2: ( rule__VarDeclaration__Group_4_1_1_2__0 )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==Comma) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4457:3: rule__VarDeclaration__Group_4_1_1_2__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__VarDeclaration__Group_4_1_1_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getGroup_4_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__3"
    // InternalSTFunctionParser.g:4465:1: rule__VarDeclaration__Group_4_1_1__3 : rule__VarDeclaration__Group_4_1_1__3__Impl ;
    public final void rule__VarDeclaration__Group_4_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4469:1: ( rule__VarDeclaration__Group_4_1_1__3__Impl )
            // InternalSTFunctionParser.g:4470:2: rule__VarDeclaration__Group_4_1_1__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__3"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1__3__Impl"
    // InternalSTFunctionParser.g:4476:1: rule__VarDeclaration__Group_4_1_1__3__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_4_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4480:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:4481:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:4481:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:4482:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_4_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1__3__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1_2__0"
    // InternalSTFunctionParser.g:4492:1: rule__VarDeclaration__Group_4_1_1_2__0 : rule__VarDeclaration__Group_4_1_1_2__0__Impl rule__VarDeclaration__Group_4_1_1_2__1 ;
    public final void rule__VarDeclaration__Group_4_1_1_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4496:1: ( rule__VarDeclaration__Group_4_1_1_2__0__Impl rule__VarDeclaration__Group_4_1_1_2__1 )
            // InternalSTFunctionParser.g:4497:2: rule__VarDeclaration__Group_4_1_1_2__0__Impl rule__VarDeclaration__Group_4_1_1_2__1
            {
            pushFollow(FOLLOW_24);
            rule__VarDeclaration__Group_4_1_1_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1_2__0"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1_2__0__Impl"
    // InternalSTFunctionParser.g:4504:1: rule__VarDeclaration__Group_4_1_1_2__0__Impl : ( Comma ) ;
    public final void rule__VarDeclaration__Group_4_1_1_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4508:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:4509:1: ( Comma )
            {
            // InternalSTFunctionParser.g:4509:1: ( Comma )
            // InternalSTFunctionParser.g:4510:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCommaKeyword_4_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1_2__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1_2__1"
    // InternalSTFunctionParser.g:4519:1: rule__VarDeclaration__Group_4_1_1_2__1 : rule__VarDeclaration__Group_4_1_1_2__1__Impl ;
    public final void rule__VarDeclaration__Group_4_1_1_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4523:1: ( rule__VarDeclaration__Group_4_1_1_2__1__Impl )
            // InternalSTFunctionParser.g:4524:2: rule__VarDeclaration__Group_4_1_1_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_4_1_1_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1_2__1"


    // $ANTLR start "rule__VarDeclaration__Group_4_1_1_2__1__Impl"
    // InternalSTFunctionParser.g:4530:1: rule__VarDeclaration__Group_4_1_1_2__1__Impl : ( ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 ) ) ;
    public final void rule__VarDeclaration__Group_4_1_1_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4534:1: ( ( ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 ) ) )
            // InternalSTFunctionParser.g:4535:1: ( ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 ) )
            {
            // InternalSTFunctionParser.g:4535:1: ( ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 ) )
            // InternalSTFunctionParser.g:4536:2: ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }
            // InternalSTFunctionParser.g:4537:2: ( rule__VarDeclaration__CountAssignment_4_1_1_2_1 )
            // InternalSTFunctionParser.g:4537:3: rule__VarDeclaration__CountAssignment_4_1_1_2_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__CountAssignment_4_1_1_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAssignment_4_1_1_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_4_1_1_2__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__0"
    // InternalSTFunctionParser.g:4546:1: rule__VarDeclaration__Group_6__0 : rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 ;
    public final void rule__VarDeclaration__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4550:1: ( rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1 )
            // InternalSTFunctionParser.g:4551:2: rule__VarDeclaration__Group_6__0__Impl rule__VarDeclaration__Group_6__1
            {
            pushFollow(FOLLOW_21);
            rule__VarDeclaration__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0"


    // $ANTLR start "rule__VarDeclaration__Group_6__0__Impl"
    // InternalSTFunctionParser.g:4558:1: rule__VarDeclaration__Group_6__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__VarDeclaration__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4562:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:4563:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:4563:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:4564:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLeftSquareBracketKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__1"
    // InternalSTFunctionParser.g:4573:1: rule__VarDeclaration__Group_6__1 : rule__VarDeclaration__Group_6__1__Impl rule__VarDeclaration__Group_6__2 ;
    public final void rule__VarDeclaration__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4577:1: ( rule__VarDeclaration__Group_6__1__Impl rule__VarDeclaration__Group_6__2 )
            // InternalSTFunctionParser.g:4578:2: rule__VarDeclaration__Group_6__1__Impl rule__VarDeclaration__Group_6__2
            {
            pushFollow(FOLLOW_25);
            rule__VarDeclaration__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1"


    // $ANTLR start "rule__VarDeclaration__Group_6__1__Impl"
    // InternalSTFunctionParser.g:4585:1: rule__VarDeclaration__Group_6__1__Impl : ( ( rule__VarDeclaration__MaxLengthAssignment_6_1 ) ) ;
    public final void rule__VarDeclaration__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4589:1: ( ( ( rule__VarDeclaration__MaxLengthAssignment_6_1 ) ) )
            // InternalSTFunctionParser.g:4590:1: ( ( rule__VarDeclaration__MaxLengthAssignment_6_1 ) )
            {
            // InternalSTFunctionParser.g:4590:1: ( ( rule__VarDeclaration__MaxLengthAssignment_6_1 ) )
            // InternalSTFunctionParser.g:4591:2: ( rule__VarDeclaration__MaxLengthAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }
            // InternalSTFunctionParser.g:4592:2: ( rule__VarDeclaration__MaxLengthAssignment_6_1 )
            // InternalSTFunctionParser.g:4592:3: rule__VarDeclaration__MaxLengthAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__MaxLengthAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__1__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_6__2"
    // InternalSTFunctionParser.g:4600:1: rule__VarDeclaration__Group_6__2 : rule__VarDeclaration__Group_6__2__Impl ;
    public final void rule__VarDeclaration__Group_6__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4604:1: ( rule__VarDeclaration__Group_6__2__Impl )
            // InternalSTFunctionParser.g:4605:2: rule__VarDeclaration__Group_6__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_6__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__2"


    // $ANTLR start "rule__VarDeclaration__Group_6__2__Impl"
    // InternalSTFunctionParser.g:4611:1: rule__VarDeclaration__Group_6__2__Impl : ( RightSquareBracket ) ;
    public final void rule__VarDeclaration__Group_6__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4615:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:4616:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:4616:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:4617:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRightSquareBracketKeyword_6_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_6__2__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_7__0"
    // InternalSTFunctionParser.g:4627:1: rule__VarDeclaration__Group_7__0 : rule__VarDeclaration__Group_7__0__Impl rule__VarDeclaration__Group_7__1 ;
    public final void rule__VarDeclaration__Group_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4631:1: ( rule__VarDeclaration__Group_7__0__Impl rule__VarDeclaration__Group_7__1 )
            // InternalSTFunctionParser.g:4632:2: rule__VarDeclaration__Group_7__0__Impl rule__VarDeclaration__Group_7__1
            {
            pushFollow(FOLLOW_26);
            rule__VarDeclaration__Group_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_7__0"


    // $ANTLR start "rule__VarDeclaration__Group_7__0__Impl"
    // InternalSTFunctionParser.g:4639:1: rule__VarDeclaration__Group_7__0__Impl : ( ColonEqualsSign ) ;
    public final void rule__VarDeclaration__Group_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4643:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:4644:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:4644:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:4645:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getColonEqualsSignKeyword_7_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_7__0__Impl"


    // $ANTLR start "rule__VarDeclaration__Group_7__1"
    // InternalSTFunctionParser.g:4654:1: rule__VarDeclaration__Group_7__1 : rule__VarDeclaration__Group_7__1__Impl ;
    public final void rule__VarDeclaration__Group_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4658:1: ( rule__VarDeclaration__Group_7__1__Impl )
            // InternalSTFunctionParser.g:4659:2: rule__VarDeclaration__Group_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__Group_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_7__1"


    // $ANTLR start "rule__VarDeclaration__Group_7__1__Impl"
    // InternalSTFunctionParser.g:4665:1: rule__VarDeclaration__Group_7__1__Impl : ( ( rule__VarDeclaration__DefaultValueAssignment_7_1 ) ) ;
    public final void rule__VarDeclaration__Group_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4669:1: ( ( ( rule__VarDeclaration__DefaultValueAssignment_7_1 ) ) )
            // InternalSTFunctionParser.g:4670:1: ( ( rule__VarDeclaration__DefaultValueAssignment_7_1 ) )
            {
            // InternalSTFunctionParser.g:4670:1: ( ( rule__VarDeclaration__DefaultValueAssignment_7_1 ) )
            // InternalSTFunctionParser.g:4671:2: ( rule__VarDeclaration__DefaultValueAssignment_7_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }
            // InternalSTFunctionParser.g:4672:2: ( rule__VarDeclaration__DefaultValueAssignment_7_1 )
            // InternalSTFunctionParser.g:4672:3: rule__VarDeclaration__DefaultValueAssignment_7_1
            {
            pushFollow(FOLLOW_2);
            rule__VarDeclaration__DefaultValueAssignment_7_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueAssignment_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__Group_7__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0"
    // InternalSTFunctionParser.g:4681:1: rule__ArrayInitializerExpression__Group__0 : rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 ;
    public final void rule__ArrayInitializerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4685:1: ( rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1 )
            // InternalSTFunctionParser.g:4686:2: rule__ArrayInitializerExpression__Group__0__Impl rule__ArrayInitializerExpression__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__ArrayInitializerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:4693:1: rule__ArrayInitializerExpression__Group__0__Impl : ( LeftSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4697:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:4698:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:4698:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:4699:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getLeftSquareBracketKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1"
    // InternalSTFunctionParser.g:4708:1: rule__ArrayInitializerExpression__Group__1 : rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 ;
    public final void rule__ArrayInitializerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4712:1: ( rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2 )
            // InternalSTFunctionParser.g:4713:2: rule__ArrayInitializerExpression__Group__1__Impl rule__ArrayInitializerExpression__Group__2
            {
            pushFollow(FOLLOW_22);
            rule__ArrayInitializerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:4720:1: rule__ArrayInitializerExpression__Group__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4724:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) ) )
            // InternalSTFunctionParser.g:4725:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:4725:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_1 ) )
            // InternalSTFunctionParser.g:4726:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }
            // InternalSTFunctionParser.g:4727:2: ( rule__ArrayInitializerExpression__ValuesAssignment_1 )
            // InternalSTFunctionParser.g:4727:3: rule__ArrayInitializerExpression__ValuesAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2"
    // InternalSTFunctionParser.g:4735:1: rule__ArrayInitializerExpression__Group__2 : rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 ;
    public final void rule__ArrayInitializerExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4739:1: ( rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3 )
            // InternalSTFunctionParser.g:4740:2: rule__ArrayInitializerExpression__Group__2__Impl rule__ArrayInitializerExpression__Group__3
            {
            pushFollow(FOLLOW_22);
            rule__ArrayInitializerExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:4747:1: rule__ArrayInitializerExpression__Group__2__Impl : ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) ;
    public final void rule__ArrayInitializerExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4751:1: ( ( ( rule__ArrayInitializerExpression__Group_2__0 )* ) )
            // InternalSTFunctionParser.g:4752:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            {
            // InternalSTFunctionParser.g:4752:1: ( ( rule__ArrayInitializerExpression__Group_2__0 )* )
            // InternalSTFunctionParser.g:4753:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:4754:2: ( rule__ArrayInitializerExpression__Group_2__0 )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==Comma) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // InternalSTFunctionParser.g:4754:3: rule__ArrayInitializerExpression__Group_2__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__ArrayInitializerExpression__Group_2__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__2__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3"
    // InternalSTFunctionParser.g:4762:1: rule__ArrayInitializerExpression__Group__3 : rule__ArrayInitializerExpression__Group__3__Impl ;
    public final void rule__ArrayInitializerExpression__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4766:1: ( rule__ArrayInitializerExpression__Group__3__Impl )
            // InternalSTFunctionParser.g:4767:2: rule__ArrayInitializerExpression__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3"


    // $ANTLR start "rule__ArrayInitializerExpression__Group__3__Impl"
    // InternalSTFunctionParser.g:4773:1: rule__ArrayInitializerExpression__Group__3__Impl : ( RightSquareBracket ) ;
    public final void rule__ArrayInitializerExpression__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4777:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:4778:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:4778:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:4779:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getRightSquareBracketKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group__3__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0"
    // InternalSTFunctionParser.g:4789:1: rule__ArrayInitializerExpression__Group_2__0 : rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 ;
    public final void rule__ArrayInitializerExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4793:1: ( rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1 )
            // InternalSTFunctionParser.g:4794:2: rule__ArrayInitializerExpression__Group_2__0__Impl rule__ArrayInitializerExpression__Group_2__1
            {
            pushFollow(FOLLOW_21);
            rule__ArrayInitializerExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:4801:1: rule__ArrayInitializerExpression__Group_2__0__Impl : ( Comma ) ;
    public final void rule__ArrayInitializerExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4805:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:4806:1: ( Comma )
            {
            // InternalSTFunctionParser.g:4806:1: ( Comma )
            // InternalSTFunctionParser.g:4807:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getCommaKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__0__Impl"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1"
    // InternalSTFunctionParser.g:4816:1: rule__ArrayInitializerExpression__Group_2__1 : rule__ArrayInitializerExpression__Group_2__1__Impl ;
    public final void rule__ArrayInitializerExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4820:1: ( rule__ArrayInitializerExpression__Group_2__1__Impl )
            // InternalSTFunctionParser.g:4821:2: rule__ArrayInitializerExpression__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1"


    // $ANTLR start "rule__ArrayInitializerExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:4827:1: rule__ArrayInitializerExpression__Group_2__1__Impl : ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) ;
    public final void rule__ArrayInitializerExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4831:1: ( ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) ) )
            // InternalSTFunctionParser.g:4832:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            {
            // InternalSTFunctionParser.g:4832:1: ( ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 ) )
            // InternalSTFunctionParser.g:4833:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }
            // InternalSTFunctionParser.g:4834:2: ( rule__ArrayInitializerExpression__ValuesAssignment_2_1 )
            // InternalSTFunctionParser.g:4834:3: rule__ArrayInitializerExpression__ValuesAssignment_2_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitializerExpression__ValuesAssignment_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesAssignment_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__Group_2__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__0"
    // InternalSTFunctionParser.g:4843:1: rule__ArrayInitElement__Group__0 : rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 ;
    public final void rule__ArrayInitElement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4847:1: ( rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1 )
            // InternalSTFunctionParser.g:4848:2: rule__ArrayInitElement__Group__0__Impl rule__ArrayInitElement__Group__1
            {
            pushFollow(FOLLOW_27);
            rule__ArrayInitElement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0"


    // $ANTLR start "rule__ArrayInitElement__Group__0__Impl"
    // InternalSTFunctionParser.g:4855:1: rule__ArrayInitElement__Group__0__Impl : ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) ;
    public final void rule__ArrayInitElement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4859:1: ( ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) ) )
            // InternalSTFunctionParser.g:4860:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:4860:1: ( ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 ) )
            // InternalSTFunctionParser.g:4861:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }
            // InternalSTFunctionParser.g:4862:2: ( rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 )
            // InternalSTFunctionParser.g:4862:3: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__IndexOrInitExpressionAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group__1"
    // InternalSTFunctionParser.g:4870:1: rule__ArrayInitElement__Group__1 : rule__ArrayInitElement__Group__1__Impl ;
    public final void rule__ArrayInitElement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4874:1: ( rule__ArrayInitElement__Group__1__Impl )
            // InternalSTFunctionParser.g:4875:2: rule__ArrayInitElement__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1"


    // $ANTLR start "rule__ArrayInitElement__Group__1__Impl"
    // InternalSTFunctionParser.g:4881:1: rule__ArrayInitElement__Group__1__Impl : ( ( rule__ArrayInitElement__Group_1__0 )? ) ;
    public final void rule__ArrayInitElement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4885:1: ( ( ( rule__ArrayInitElement__Group_1__0 )? ) )
            // InternalSTFunctionParser.g:4886:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            {
            // InternalSTFunctionParser.g:4886:1: ( ( rule__ArrayInitElement__Group_1__0 )? )
            // InternalSTFunctionParser.g:4887:2: ( rule__ArrayInitElement__Group_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:4888:2: ( rule__ArrayInitElement__Group_1__0 )?
            int alt58=2;
            int LA58_0 = input.LA(1);

            if ( (LA58_0==LeftParenthesis) ) {
                alt58=1;
            }
            switch (alt58) {
                case 1 :
                    // InternalSTFunctionParser.g:4888:3: rule__ArrayInitElement__Group_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__ArrayInitElement__Group_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0"
    // InternalSTFunctionParser.g:4897:1: rule__ArrayInitElement__Group_1__0 : rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 ;
    public final void rule__ArrayInitElement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4901:1: ( rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1 )
            // InternalSTFunctionParser.g:4902:2: rule__ArrayInitElement__Group_1__0__Impl rule__ArrayInitElement__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__ArrayInitElement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0"


    // $ANTLR start "rule__ArrayInitElement__Group_1__0__Impl"
    // InternalSTFunctionParser.g:4909:1: rule__ArrayInitElement__Group_1__0__Impl : ( LeftParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4913:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:4914:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:4914:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:4915:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getLeftParenthesisKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__0__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1"
    // InternalSTFunctionParser.g:4924:1: rule__ArrayInitElement__Group_1__1 : rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 ;
    public final void rule__ArrayInitElement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4928:1: ( rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2 )
            // InternalSTFunctionParser.g:4929:2: rule__ArrayInitElement__Group_1__1__Impl rule__ArrayInitElement__Group_1__2
            {
            pushFollow(FOLLOW_28);
            rule__ArrayInitElement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1"


    // $ANTLR start "rule__ArrayInitElement__Group_1__1__Impl"
    // InternalSTFunctionParser.g:4936:1: rule__ArrayInitElement__Group_1__1__Impl : ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) ;
    public final void rule__ArrayInitElement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4940:1: ( ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:4941:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:4941:1: ( ( rule__ArrayInitElement__InitExpressionAssignment_1_1 ) )
            // InternalSTFunctionParser.g:4942:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:4943:2: ( rule__ArrayInitElement__InitExpressionAssignment_1_1 )
            // InternalSTFunctionParser.g:4943:3: rule__ArrayInitElement__InitExpressionAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__InitExpressionAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__1__Impl"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2"
    // InternalSTFunctionParser.g:4951:1: rule__ArrayInitElement__Group_1__2 : rule__ArrayInitElement__Group_1__2__Impl ;
    public final void rule__ArrayInitElement__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4955:1: ( rule__ArrayInitElement__Group_1__2__Impl )
            // InternalSTFunctionParser.g:4956:2: rule__ArrayInitElement__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__ArrayInitElement__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2"


    // $ANTLR start "rule__ArrayInitElement__Group_1__2__Impl"
    // InternalSTFunctionParser.g:4962:1: rule__ArrayInitElement__Group_1__2__Impl : ( RightParenthesis ) ;
    public final void rule__ArrayInitElement__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4966:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:4967:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:4967:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:4968:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getRightParenthesisKeyword_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__Group_1__2__Impl"


    // $ANTLR start "rule__STStatement__Group_0__0"
    // InternalSTFunctionParser.g:4978:1: rule__STStatement__Group_0__0 : rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 ;
    public final void rule__STStatement__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4982:1: ( rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1 )
            // InternalSTFunctionParser.g:4983:2: rule__STStatement__Group_0__0__Impl rule__STStatement__Group_0__1
            {
            pushFollow(FOLLOW_29);
            rule__STStatement__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0"


    // $ANTLR start "rule__STStatement__Group_0__0__Impl"
    // InternalSTFunctionParser.g:4990:1: rule__STStatement__Group_0__0__Impl : ( ( rule__STStatement__Alternatives_0_0 ) ) ;
    public final void rule__STStatement__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:4994:1: ( ( ( rule__STStatement__Alternatives_0_0 ) ) )
            // InternalSTFunctionParser.g:4995:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            {
            // InternalSTFunctionParser.g:4995:1: ( ( rule__STStatement__Alternatives_0_0 ) )
            // InternalSTFunctionParser.g:4996:2: ( rule__STStatement__Alternatives_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }
            // InternalSTFunctionParser.g:4997:2: ( rule__STStatement__Alternatives_0_0 )
            // InternalSTFunctionParser.g:4997:3: rule__STStatement__Alternatives_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Alternatives_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getAlternatives_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0__1"
    // InternalSTFunctionParser.g:5005:1: rule__STStatement__Group_0__1 : rule__STStatement__Group_0__1__Impl ;
    public final void rule__STStatement__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5009:1: ( rule__STStatement__Group_0__1__Impl )
            // InternalSTFunctionParser.g:5010:2: rule__STStatement__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1"


    // $ANTLR start "rule__STStatement__Group_0__1__Impl"
    // InternalSTFunctionParser.g:5016:1: rule__STStatement__Group_0__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5020:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:5021:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:5021:1: ( Semicolon )
            // InternalSTFunctionParser.g:5022:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0"
    // InternalSTFunctionParser.g:5032:1: rule__STStatement__Group_0_0_7__0 : rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 ;
    public final void rule__STStatement__Group_0_0_7__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5036:1: ( rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1 )
            // InternalSTFunctionParser.g:5037:2: rule__STStatement__Group_0_0_7__0__Impl rule__STStatement__Group_0_0_7__1
            {
            pushFollow(FOLLOW_30);
            rule__STStatement__Group_0_0_7__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0"


    // $ANTLR start "rule__STStatement__Group_0_0_7__0__Impl"
    // InternalSTFunctionParser.g:5044:1: rule__STStatement__Group_0_0_7__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_7__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5048:1: ( ( () ) )
            // InternalSTFunctionParser.g:5049:1: ( () )
            {
            // InternalSTFunctionParser.g:5049:1: ( () )
            // InternalSTFunctionParser.g:5050:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_7_0()); 
            }
            // InternalSTFunctionParser.g:5051:2: ()
            // InternalSTFunctionParser.g:5051:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTReturnAction_0_0_7_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1"
    // InternalSTFunctionParser.g:5059:1: rule__STStatement__Group_0_0_7__1 : rule__STStatement__Group_0_0_7__1__Impl ;
    public final void rule__STStatement__Group_0_0_7__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5063:1: ( rule__STStatement__Group_0_0_7__1__Impl )
            // InternalSTFunctionParser.g:5064:2: rule__STStatement__Group_0_0_7__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_7__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1"


    // $ANTLR start "rule__STStatement__Group_0_0_7__1__Impl"
    // InternalSTFunctionParser.g:5070:1: rule__STStatement__Group_0_0_7__1__Impl : ( RETURN ) ;
    public final void rule__STStatement__Group_0_0_7__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5074:1: ( ( RETURN ) )
            // InternalSTFunctionParser.g:5075:1: ( RETURN )
            {
            // InternalSTFunctionParser.g:5075:1: ( RETURN )
            // InternalSTFunctionParser.g:5076:2: RETURN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_7_1()); 
            }
            match(input,RETURN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getRETURNKeyword_0_0_7_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_7__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0"
    // InternalSTFunctionParser.g:5086:1: rule__STStatement__Group_0_0_8__0 : rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 ;
    public final void rule__STStatement__Group_0_0_8__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5090:1: ( rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1 )
            // InternalSTFunctionParser.g:5091:2: rule__STStatement__Group_0_0_8__0__Impl rule__STStatement__Group_0_0_8__1
            {
            pushFollow(FOLLOW_31);
            rule__STStatement__Group_0_0_8__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0"


    // $ANTLR start "rule__STStatement__Group_0_0_8__0__Impl"
    // InternalSTFunctionParser.g:5098:1: rule__STStatement__Group_0_0_8__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_8__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5102:1: ( ( () ) )
            // InternalSTFunctionParser.g:5103:1: ( () )
            {
            // InternalSTFunctionParser.g:5103:1: ( () )
            // InternalSTFunctionParser.g:5104:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_8_0()); 
            }
            // InternalSTFunctionParser.g:5105:2: ()
            // InternalSTFunctionParser.g:5105:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTContinueAction_0_0_8_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1"
    // InternalSTFunctionParser.g:5113:1: rule__STStatement__Group_0_0_8__1 : rule__STStatement__Group_0_0_8__1__Impl ;
    public final void rule__STStatement__Group_0_0_8__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5117:1: ( rule__STStatement__Group_0_0_8__1__Impl )
            // InternalSTFunctionParser.g:5118:2: rule__STStatement__Group_0_0_8__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_8__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1"


    // $ANTLR start "rule__STStatement__Group_0_0_8__1__Impl"
    // InternalSTFunctionParser.g:5124:1: rule__STStatement__Group_0_0_8__1__Impl : ( CONTINUE ) ;
    public final void rule__STStatement__Group_0_0_8__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5128:1: ( ( CONTINUE ) )
            // InternalSTFunctionParser.g:5129:1: ( CONTINUE )
            {
            // InternalSTFunctionParser.g:5129:1: ( CONTINUE )
            // InternalSTFunctionParser.g:5130:2: CONTINUE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_8_1()); 
            }
            match(input,CONTINUE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getCONTINUEKeyword_0_0_8_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_8__1__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_9__0"
    // InternalSTFunctionParser.g:5140:1: rule__STStatement__Group_0_0_9__0 : rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1 ;
    public final void rule__STStatement__Group_0_0_9__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5144:1: ( rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1 )
            // InternalSTFunctionParser.g:5145:2: rule__STStatement__Group_0_0_9__0__Impl rule__STStatement__Group_0_0_9__1
            {
            pushFollow(FOLLOW_32);
            rule__STStatement__Group_0_0_9__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_9__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__0"


    // $ANTLR start "rule__STStatement__Group_0_0_9__0__Impl"
    // InternalSTFunctionParser.g:5152:1: rule__STStatement__Group_0_0_9__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_0_0_9__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5156:1: ( ( () ) )
            // InternalSTFunctionParser.g:5157:1: ( () )
            {
            // InternalSTFunctionParser.g:5157:1: ( () )
            // InternalSTFunctionParser.g:5158:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_9_0()); 
            }
            // InternalSTFunctionParser.g:5159:2: ()
            // InternalSTFunctionParser.g:5159:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTExitAction_0_0_9_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__0__Impl"


    // $ANTLR start "rule__STStatement__Group_0_0_9__1"
    // InternalSTFunctionParser.g:5167:1: rule__STStatement__Group_0_0_9__1 : rule__STStatement__Group_0_0_9__1__Impl ;
    public final void rule__STStatement__Group_0_0_9__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5171:1: ( rule__STStatement__Group_0_0_9__1__Impl )
            // InternalSTFunctionParser.g:5172:2: rule__STStatement__Group_0_0_9__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_0_0_9__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__1"


    // $ANTLR start "rule__STStatement__Group_0_0_9__1__Impl"
    // InternalSTFunctionParser.g:5178:1: rule__STStatement__Group_0_0_9__1__Impl : ( EXIT ) ;
    public final void rule__STStatement__Group_0_0_9__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5182:1: ( ( EXIT ) )
            // InternalSTFunctionParser.g:5183:1: ( EXIT )
            {
            // InternalSTFunctionParser.g:5183:1: ( EXIT )
            // InternalSTFunctionParser.g:5184:2: EXIT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_9_1()); 
            }
            match(input,EXIT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getEXITKeyword_0_0_9_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_0_0_9__1__Impl"


    // $ANTLR start "rule__STStatement__Group_1__0"
    // InternalSTFunctionParser.g:5194:1: rule__STStatement__Group_1__0 : rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 ;
    public final void rule__STStatement__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5198:1: ( rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1 )
            // InternalSTFunctionParser.g:5199:2: rule__STStatement__Group_1__0__Impl rule__STStatement__Group_1__1
            {
            pushFollow(FOLLOW_33);
            rule__STStatement__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0"


    // $ANTLR start "rule__STStatement__Group_1__0__Impl"
    // InternalSTFunctionParser.g:5206:1: rule__STStatement__Group_1__0__Impl : ( () ) ;
    public final void rule__STStatement__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5210:1: ( ( () ) )
            // InternalSTFunctionParser.g:5211:1: ( () )
            {
            // InternalSTFunctionParser.g:5211:1: ( () )
            // InternalSTFunctionParser.g:5212:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }
            // InternalSTFunctionParser.g:5213:2: ()
            // InternalSTFunctionParser.g:5213:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSTNopAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__0__Impl"


    // $ANTLR start "rule__STStatement__Group_1__1"
    // InternalSTFunctionParser.g:5221:1: rule__STStatement__Group_1__1 : rule__STStatement__Group_1__1__Impl ;
    public final void rule__STStatement__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5225:1: ( rule__STStatement__Group_1__1__Impl )
            // InternalSTFunctionParser.g:5226:2: rule__STStatement__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStatement__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1"


    // $ANTLR start "rule__STStatement__Group_1__1__Impl"
    // InternalSTFunctionParser.g:5232:1: rule__STStatement__Group_1__1__Impl : ( Semicolon ) ;
    public final void rule__STStatement__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5236:1: ( ( Semicolon ) )
            // InternalSTFunctionParser.g:5237:1: ( Semicolon )
            {
            // InternalSTFunctionParser.g:5237:1: ( Semicolon )
            // InternalSTFunctionParser.g:5238:2: Semicolon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }
            match(input,Semicolon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStatementAccess().getSemicolonKeyword_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStatement__Group_1__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__0"
    // InternalSTFunctionParser.g:5248:1: rule__STAssignmentStatement__Group__0 : rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 ;
    public final void rule__STAssignmentStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5252:1: ( rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1 )
            // InternalSTFunctionParser.g:5253:2: rule__STAssignmentStatement__Group__0__Impl rule__STAssignmentStatement__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STAssignmentStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0"


    // $ANTLR start "rule__STAssignmentStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5260:1: rule__STAssignmentStatement__Group__0__Impl : ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) ;
    public final void rule__STAssignmentStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5264:1: ( ( ( rule__STAssignmentStatement__LeftAssignment_0 ) ) )
            // InternalSTFunctionParser.g:5265:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:5265:1: ( ( rule__STAssignmentStatement__LeftAssignment_0 ) )
            // InternalSTFunctionParser.g:5266:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }
            // InternalSTFunctionParser.g:5267:2: ( rule__STAssignmentStatement__LeftAssignment_0 )
            // InternalSTFunctionParser.g:5267:3: rule__STAssignmentStatement__LeftAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__LeftAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__0__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__1"
    // InternalSTFunctionParser.g:5275:1: rule__STAssignmentStatement__Group__1 : rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 ;
    public final void rule__STAssignmentStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5279:1: ( rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2 )
            // InternalSTFunctionParser.g:5280:2: rule__STAssignmentStatement__Group__1__Impl rule__STAssignmentStatement__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__STAssignmentStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1"


    // $ANTLR start "rule__STAssignmentStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5287:1: rule__STAssignmentStatement__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STAssignmentStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5291:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:5292:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:5292:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:5293:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__1__Impl"


    // $ANTLR start "rule__STAssignmentStatement__Group__2"
    // InternalSTFunctionParser.g:5302:1: rule__STAssignmentStatement__Group__2 : rule__STAssignmentStatement__Group__2__Impl ;
    public final void rule__STAssignmentStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5306:1: ( rule__STAssignmentStatement__Group__2__Impl )
            // InternalSTFunctionParser.g:5307:2: rule__STAssignmentStatement__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2"


    // $ANTLR start "rule__STAssignmentStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5313:1: rule__STAssignmentStatement__Group__2__Impl : ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) ;
    public final void rule__STAssignmentStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5317:1: ( ( ( rule__STAssignmentStatement__RightAssignment_2 ) ) )
            // InternalSTFunctionParser.g:5318:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:5318:1: ( ( rule__STAssignmentStatement__RightAssignment_2 ) )
            // InternalSTFunctionParser.g:5319:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }
            // InternalSTFunctionParser.g:5320:2: ( rule__STAssignmentStatement__RightAssignment_2 )
            // InternalSTFunctionParser.g:5320:3: rule__STAssignmentStatement__RightAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STAssignmentStatement__RightAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0"
    // InternalSTFunctionParser.g:5329:1: rule__STCallNamedInputArgument__Group__0 : rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 ;
    public final void rule__STCallNamedInputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5333:1: ( rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1 )
            // InternalSTFunctionParser.g:5334:2: rule__STCallNamedInputArgument__Group__0__Impl rule__STCallNamedInputArgument__Group__1
            {
            pushFollow(FOLLOW_34);
            rule__STCallNamedInputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__0__Impl"
    // InternalSTFunctionParser.g:5341:1: rule__STCallNamedInputArgument__Group__0__Impl : ( ( rule__STCallNamedInputArgument__TargetAssignment_0 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5345:1: ( ( ( rule__STCallNamedInputArgument__TargetAssignment_0 ) ) )
            // InternalSTFunctionParser.g:5346:1: ( ( rule__STCallNamedInputArgument__TargetAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:5346:1: ( ( rule__STCallNamedInputArgument__TargetAssignment_0 ) )
            // InternalSTFunctionParser.g:5347:2: ( rule__STCallNamedInputArgument__TargetAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetAssignment_0()); 
            }
            // InternalSTFunctionParser.g:5348:2: ( rule__STCallNamedInputArgument__TargetAssignment_0 )
            // InternalSTFunctionParser.g:5348:3: rule__STCallNamedInputArgument__TargetAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__TargetAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1"
    // InternalSTFunctionParser.g:5356:1: rule__STCallNamedInputArgument__Group__1 : rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 ;
    public final void rule__STCallNamedInputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5360:1: ( rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2 )
            // InternalSTFunctionParser.g:5361:2: rule__STCallNamedInputArgument__Group__1__Impl rule__STCallNamedInputArgument__Group__2
            {
            pushFollow(FOLLOW_21);
            rule__STCallNamedInputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__1__Impl"
    // InternalSTFunctionParser.g:5368:1: rule__STCallNamedInputArgument__Group__1__Impl : ( ColonEqualsSign ) ;
    public final void rule__STCallNamedInputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5372:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:5373:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:5373:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:5374:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getColonEqualsSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2"
    // InternalSTFunctionParser.g:5383:1: rule__STCallNamedInputArgument__Group__2 : rule__STCallNamedInputArgument__Group__2__Impl ;
    public final void rule__STCallNamedInputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5387:1: ( rule__STCallNamedInputArgument__Group__2__Impl )
            // InternalSTFunctionParser.g:5388:2: rule__STCallNamedInputArgument__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedInputArgument__Group__2__Impl"
    // InternalSTFunctionParser.g:5394:1: rule__STCallNamedInputArgument__Group__2__Impl : ( ( rule__STCallNamedInputArgument__SourceAssignment_2 ) ) ;
    public final void rule__STCallNamedInputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5398:1: ( ( ( rule__STCallNamedInputArgument__SourceAssignment_2 ) ) )
            // InternalSTFunctionParser.g:5399:1: ( ( rule__STCallNamedInputArgument__SourceAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:5399:1: ( ( rule__STCallNamedInputArgument__SourceAssignment_2 ) )
            // InternalSTFunctionParser.g:5400:2: ( rule__STCallNamedInputArgument__SourceAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getSourceAssignment_2()); 
            }
            // InternalSTFunctionParser.g:5401:2: ( rule__STCallNamedInputArgument__SourceAssignment_2 )
            // InternalSTFunctionParser.g:5401:3: rule__STCallNamedInputArgument__SourceAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedInputArgument__SourceAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getSourceAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0"
    // InternalSTFunctionParser.g:5410:1: rule__STCallNamedOutputArgument__Group__0 : rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 ;
    public final void rule__STCallNamedOutputArgument__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5414:1: ( rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1 )
            // InternalSTFunctionParser.g:5415:2: rule__STCallNamedOutputArgument__Group__0__Impl rule__STCallNamedOutputArgument__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STCallNamedOutputArgument__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__0__Impl"
    // InternalSTFunctionParser.g:5422:1: rule__STCallNamedOutputArgument__Group__0__Impl : ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) ;
    public final void rule__STCallNamedOutputArgument__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5426:1: ( ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? ) )
            // InternalSTFunctionParser.g:5427:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            {
            // InternalSTFunctionParser.g:5427:1: ( ( rule__STCallNamedOutputArgument__NotAssignment_0 )? )
            // InternalSTFunctionParser.g:5428:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }
            // InternalSTFunctionParser.g:5429:2: ( rule__STCallNamedOutputArgument__NotAssignment_0 )?
            int alt59=2;
            int LA59_0 = input.LA(1);

            if ( (LA59_0==NOT) ) {
                alt59=1;
            }
            switch (alt59) {
                case 1 :
                    // InternalSTFunctionParser.g:5429:3: rule__STCallNamedOutputArgument__NotAssignment_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCallNamedOutputArgument__NotAssignment_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__0__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1"
    // InternalSTFunctionParser.g:5437:1: rule__STCallNamedOutputArgument__Group__1 : rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 ;
    public final void rule__STCallNamedOutputArgument__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5441:1: ( rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2 )
            // InternalSTFunctionParser.g:5442:2: rule__STCallNamedOutputArgument__Group__1__Impl rule__STCallNamedOutputArgument__Group__2
            {
            pushFollow(FOLLOW_35);
            rule__STCallNamedOutputArgument__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__1__Impl"
    // InternalSTFunctionParser.g:5449:1: rule__STCallNamedOutputArgument__Group__1__Impl : ( ( rule__STCallNamedOutputArgument__SourceAssignment_1 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5453:1: ( ( ( rule__STCallNamedOutputArgument__SourceAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5454:1: ( ( rule__STCallNamedOutputArgument__SourceAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5454:1: ( ( rule__STCallNamedOutputArgument__SourceAssignment_1 ) )
            // InternalSTFunctionParser.g:5455:2: ( rule__STCallNamedOutputArgument__SourceAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5456:2: ( rule__STCallNamedOutputArgument__SourceAssignment_1 )
            // InternalSTFunctionParser.g:5456:3: rule__STCallNamedOutputArgument__SourceAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__SourceAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__1__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2"
    // InternalSTFunctionParser.g:5464:1: rule__STCallNamedOutputArgument__Group__2 : rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 ;
    public final void rule__STCallNamedOutputArgument__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5468:1: ( rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3 )
            // InternalSTFunctionParser.g:5469:2: rule__STCallNamedOutputArgument__Group__2__Impl rule__STCallNamedOutputArgument__Group__3
            {
            pushFollow(FOLLOW_6);
            rule__STCallNamedOutputArgument__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__2__Impl"
    // InternalSTFunctionParser.g:5476:1: rule__STCallNamedOutputArgument__Group__2__Impl : ( EqualsSignGreaterThanSign ) ;
    public final void rule__STCallNamedOutputArgument__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5480:1: ( ( EqualsSignGreaterThanSign ) )
            // InternalSTFunctionParser.g:5481:1: ( EqualsSignGreaterThanSign )
            {
            // InternalSTFunctionParser.g:5481:1: ( EqualsSignGreaterThanSign )
            // InternalSTFunctionParser.g:5482:2: EqualsSignGreaterThanSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }
            match(input,EqualsSignGreaterThanSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getEqualsSignGreaterThanSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__2__Impl"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3"
    // InternalSTFunctionParser.g:5491:1: rule__STCallNamedOutputArgument__Group__3 : rule__STCallNamedOutputArgument__Group__3__Impl ;
    public final void rule__STCallNamedOutputArgument__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5495:1: ( rule__STCallNamedOutputArgument__Group__3__Impl )
            // InternalSTFunctionParser.g:5496:2: rule__STCallNamedOutputArgument__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3"


    // $ANTLR start "rule__STCallNamedOutputArgument__Group__3__Impl"
    // InternalSTFunctionParser.g:5502:1: rule__STCallNamedOutputArgument__Group__3__Impl : ( ( rule__STCallNamedOutputArgument__TargetAssignment_3 ) ) ;
    public final void rule__STCallNamedOutputArgument__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5506:1: ( ( ( rule__STCallNamedOutputArgument__TargetAssignment_3 ) ) )
            // InternalSTFunctionParser.g:5507:1: ( ( rule__STCallNamedOutputArgument__TargetAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:5507:1: ( ( rule__STCallNamedOutputArgument__TargetAssignment_3 ) )
            // InternalSTFunctionParser.g:5508:2: ( rule__STCallNamedOutputArgument__TargetAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5509:2: ( rule__STCallNamedOutputArgument__TargetAssignment_3 )
            // InternalSTFunctionParser.g:5509:3: rule__STCallNamedOutputArgument__TargetAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STCallNamedOutputArgument__TargetAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__0"
    // InternalSTFunctionParser.g:5518:1: rule__STIfStatement__Group__0 : rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 ;
    public final void rule__STIfStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5522:1: ( rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1 )
            // InternalSTFunctionParser.g:5523:2: rule__STIfStatement__Group__0__Impl rule__STIfStatement__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__STIfStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0"


    // $ANTLR start "rule__STIfStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5530:1: rule__STIfStatement__Group__0__Impl : ( IF ) ;
    public final void rule__STIfStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5534:1: ( ( IF ) )
            // InternalSTFunctionParser.g:5535:1: ( IF )
            {
            // InternalSTFunctionParser.g:5535:1: ( IF )
            // InternalSTFunctionParser.g:5536:2: IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }
            match(input,IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__0__Impl"


    // $ANTLR start "rule__STIfStatement__Group__1"
    // InternalSTFunctionParser.g:5545:1: rule__STIfStatement__Group__1 : rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 ;
    public final void rule__STIfStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5549:1: ( rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2 )
            // InternalSTFunctionParser.g:5550:2: rule__STIfStatement__Group__1__Impl rule__STIfStatement__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__STIfStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1"


    // $ANTLR start "rule__STIfStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5557:1: rule__STIfStatement__Group__1__Impl : ( ( rule__STIfStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STIfStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5561:1: ( ( ( rule__STIfStatement__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5562:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5562:1: ( ( rule__STIfStatement__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:5563:2: ( rule__STIfStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5564:2: ( rule__STIfStatement__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:5564:3: rule__STIfStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__1__Impl"


    // $ANTLR start "rule__STIfStatement__Group__2"
    // InternalSTFunctionParser.g:5572:1: rule__STIfStatement__Group__2 : rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 ;
    public final void rule__STIfStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5576:1: ( rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3 )
            // InternalSTFunctionParser.g:5577:2: rule__STIfStatement__Group__2__Impl rule__STIfStatement__Group__3
            {
            pushFollow(FOLLOW_37);
            rule__STIfStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2"


    // $ANTLR start "rule__STIfStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5584:1: rule__STIfStatement__Group__2__Impl : ( THEN ) ;
    public final void rule__STIfStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5588:1: ( ( THEN ) )
            // InternalSTFunctionParser.g:5589:1: ( THEN )
            {
            // InternalSTFunctionParser.g:5589:1: ( THEN )
            // InternalSTFunctionParser.g:5590:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__2__Impl"


    // $ANTLR start "rule__STIfStatement__Group__3"
    // InternalSTFunctionParser.g:5599:1: rule__STIfStatement__Group__3 : rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 ;
    public final void rule__STIfStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5603:1: ( rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4 )
            // InternalSTFunctionParser.g:5604:2: rule__STIfStatement__Group__3__Impl rule__STIfStatement__Group__4
            {
            pushFollow(FOLLOW_37);
            rule__STIfStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3"


    // $ANTLR start "rule__STIfStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5611:1: rule__STIfStatement__Group__3__Impl : ( ( rule__STIfStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STIfStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5615:1: ( ( ( rule__STIfStatement__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:5616:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:5616:1: ( ( rule__STIfStatement__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:5617:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5618:2: ( rule__STIfStatement__StatementsAssignment_3 )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( ((LA60_0>=LDATE_AND_TIME && LA60_0<=DATE_AND_TIME)||(LA60_0>=LTIME_OF_DAY && LA60_0<=TIME_OF_DAY)||LA60_0==CONTINUE||LA60_0==WSTRING||(LA60_0>=REPEAT && LA60_0<=STRING)||LA60_0==DWORD||(LA60_0>=FALSE && LA60_0<=ULINT)||(LA60_0>=USINT && LA60_0<=DINT)||(LA60_0>=EXIT && LA60_0<=SINT)||(LA60_0>=TIME && LA60_0<=WORD)||(LA60_0>=FOR && LA60_0<=LDT)||LA60_0==TOD||(LA60_0>=DT && LA60_0<=LT)||LA60_0==LeftParenthesis||LA60_0==PlusSign||LA60_0==HyphenMinus||LA60_0==Semicolon||LA60_0==D||LA60_0==T||(LA60_0>=RULE_NON_DECIMAL && LA60_0<=RULE_INT)||(LA60_0>=RULE_ID && LA60_0<=RULE_WSTRING)) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5618:3: rule__STIfStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STIfStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__3__Impl"


    // $ANTLR start "rule__STIfStatement__Group__4"
    // InternalSTFunctionParser.g:5626:1: rule__STIfStatement__Group__4 : rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 ;
    public final void rule__STIfStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5630:1: ( rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5 )
            // InternalSTFunctionParser.g:5631:2: rule__STIfStatement__Group__4__Impl rule__STIfStatement__Group__5
            {
            pushFollow(FOLLOW_37);
            rule__STIfStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4"


    // $ANTLR start "rule__STIfStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5638:1: rule__STIfStatement__Group__4__Impl : ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) ;
    public final void rule__STIfStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5642:1: ( ( ( rule__STIfStatement__ElseifsAssignment_4 )* ) )
            // InternalSTFunctionParser.g:5643:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            {
            // InternalSTFunctionParser.g:5643:1: ( ( rule__STIfStatement__ElseifsAssignment_4 )* )
            // InternalSTFunctionParser.g:5644:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }
            // InternalSTFunctionParser.g:5645:2: ( rule__STIfStatement__ElseifsAssignment_4 )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==ELSIF) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5645:3: rule__STIfStatement__ElseifsAssignment_4
            	    {
            	    pushFollow(FOLLOW_38);
            	    rule__STIfStatement__ElseifsAssignment_4();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__4__Impl"


    // $ANTLR start "rule__STIfStatement__Group__5"
    // InternalSTFunctionParser.g:5653:1: rule__STIfStatement__Group__5 : rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 ;
    public final void rule__STIfStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5657:1: ( rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6 )
            // InternalSTFunctionParser.g:5658:2: rule__STIfStatement__Group__5__Impl rule__STIfStatement__Group__6
            {
            pushFollow(FOLLOW_37);
            rule__STIfStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5"


    // $ANTLR start "rule__STIfStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:5665:1: rule__STIfStatement__Group__5__Impl : ( ( rule__STIfStatement__ElseAssignment_5 )? ) ;
    public final void rule__STIfStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5669:1: ( ( ( rule__STIfStatement__ElseAssignment_5 )? ) )
            // InternalSTFunctionParser.g:5670:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            {
            // InternalSTFunctionParser.g:5670:1: ( ( rule__STIfStatement__ElseAssignment_5 )? )
            // InternalSTFunctionParser.g:5671:2: ( rule__STIfStatement__ElseAssignment_5 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }
            // InternalSTFunctionParser.g:5672:2: ( rule__STIfStatement__ElseAssignment_5 )?
            int alt62=2;
            int LA62_0 = input.LA(1);

            if ( (LA62_0==ELSE) ) {
                alt62=1;
            }
            switch (alt62) {
                case 1 :
                    // InternalSTFunctionParser.g:5672:3: rule__STIfStatement__ElseAssignment_5
                    {
                    pushFollow(FOLLOW_2);
                    rule__STIfStatement__ElseAssignment_5();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__5__Impl"


    // $ANTLR start "rule__STIfStatement__Group__6"
    // InternalSTFunctionParser.g:5680:1: rule__STIfStatement__Group__6 : rule__STIfStatement__Group__6__Impl ;
    public final void rule__STIfStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5684:1: ( rule__STIfStatement__Group__6__Impl )
            // InternalSTFunctionParser.g:5685:2: rule__STIfStatement__Group__6__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STIfStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6"


    // $ANTLR start "rule__STIfStatement__Group__6__Impl"
    // InternalSTFunctionParser.g:5691:1: rule__STIfStatement__Group__6__Impl : ( END_IF ) ;
    public final void rule__STIfStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5695:1: ( ( END_IF ) )
            // InternalSTFunctionParser.g:5696:1: ( END_IF )
            {
            // InternalSTFunctionParser.g:5696:1: ( END_IF )
            // InternalSTFunctionParser.g:5697:2: END_IF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }
            match(input,END_IF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getEND_IFKeyword_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__Group__6__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__0"
    // InternalSTFunctionParser.g:5707:1: rule__STElseIfPart__Group__0 : rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 ;
    public final void rule__STElseIfPart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5711:1: ( rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1 )
            // InternalSTFunctionParser.g:5712:2: rule__STElseIfPart__Group__0__Impl rule__STElseIfPart__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__STElseIfPart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0"


    // $ANTLR start "rule__STElseIfPart__Group__0__Impl"
    // InternalSTFunctionParser.g:5719:1: rule__STElseIfPart__Group__0__Impl : ( ELSIF ) ;
    public final void rule__STElseIfPart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5723:1: ( ( ELSIF ) )
            // InternalSTFunctionParser.g:5724:1: ( ELSIF )
            {
            // InternalSTFunctionParser.g:5724:1: ( ELSIF )
            // InternalSTFunctionParser.g:5725:2: ELSIF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }
            match(input,ELSIF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getELSIFKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__0__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__1"
    // InternalSTFunctionParser.g:5734:1: rule__STElseIfPart__Group__1 : rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 ;
    public final void rule__STElseIfPart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5738:1: ( rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2 )
            // InternalSTFunctionParser.g:5739:2: rule__STElseIfPart__Group__1__Impl rule__STElseIfPart__Group__2
            {
            pushFollow(FOLLOW_36);
            rule__STElseIfPart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1"


    // $ANTLR start "rule__STElseIfPart__Group__1__Impl"
    // InternalSTFunctionParser.g:5746:1: rule__STElseIfPart__Group__1__Impl : ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) ;
    public final void rule__STElseIfPart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5750:1: ( ( ( rule__STElseIfPart__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5751:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5751:1: ( ( rule__STElseIfPart__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:5752:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5753:2: ( rule__STElseIfPart__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:5753:3: rule__STElseIfPart__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__1__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__2"
    // InternalSTFunctionParser.g:5761:1: rule__STElseIfPart__Group__2 : rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 ;
    public final void rule__STElseIfPart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5765:1: ( rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3 )
            // InternalSTFunctionParser.g:5766:2: rule__STElseIfPart__Group__2__Impl rule__STElseIfPart__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__STElseIfPart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2"


    // $ANTLR start "rule__STElseIfPart__Group__2__Impl"
    // InternalSTFunctionParser.g:5773:1: rule__STElseIfPart__Group__2__Impl : ( THEN ) ;
    public final void rule__STElseIfPart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5777:1: ( ( THEN ) )
            // InternalSTFunctionParser.g:5778:1: ( THEN )
            {
            // InternalSTFunctionParser.g:5778:1: ( THEN )
            // InternalSTFunctionParser.g:5779:2: THEN
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }
            match(input,THEN,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getTHENKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__2__Impl"


    // $ANTLR start "rule__STElseIfPart__Group__3"
    // InternalSTFunctionParser.g:5788:1: rule__STElseIfPart__Group__3 : rule__STElseIfPart__Group__3__Impl ;
    public final void rule__STElseIfPart__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5792:1: ( rule__STElseIfPart__Group__3__Impl )
            // InternalSTFunctionParser.g:5793:2: rule__STElseIfPart__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElseIfPart__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3"


    // $ANTLR start "rule__STElseIfPart__Group__3__Impl"
    // InternalSTFunctionParser.g:5799:1: rule__STElseIfPart__Group__3__Impl : ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) ;
    public final void rule__STElseIfPart__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5803:1: ( ( ( rule__STElseIfPart__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:5804:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:5804:1: ( ( rule__STElseIfPart__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:5805:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5806:2: ( rule__STElseIfPart__StatementsAssignment_3 )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( ((LA63_0>=LDATE_AND_TIME && LA63_0<=DATE_AND_TIME)||(LA63_0>=LTIME_OF_DAY && LA63_0<=TIME_OF_DAY)||LA63_0==CONTINUE||LA63_0==WSTRING||(LA63_0>=REPEAT && LA63_0<=STRING)||LA63_0==DWORD||(LA63_0>=FALSE && LA63_0<=ULINT)||(LA63_0>=USINT && LA63_0<=DINT)||(LA63_0>=EXIT && LA63_0<=SINT)||(LA63_0>=TIME && LA63_0<=WORD)||(LA63_0>=FOR && LA63_0<=LDT)||LA63_0==TOD||(LA63_0>=DT && LA63_0<=LT)||LA63_0==LeftParenthesis||LA63_0==PlusSign||LA63_0==HyphenMinus||LA63_0==Semicolon||LA63_0==D||LA63_0==T||(LA63_0>=RULE_NON_DECIMAL && LA63_0<=RULE_INT)||(LA63_0>=RULE_ID && LA63_0<=RULE_WSTRING)) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5806:3: rule__STElseIfPart__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STElseIfPart__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__0"
    // InternalSTFunctionParser.g:5815:1: rule__STCaseStatement__Group__0 : rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 ;
    public final void rule__STCaseStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5819:1: ( rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1 )
            // InternalSTFunctionParser.g:5820:2: rule__STCaseStatement__Group__0__Impl rule__STCaseStatement__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__STCaseStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0"


    // $ANTLR start "rule__STCaseStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:5827:1: rule__STCaseStatement__Group__0__Impl : ( CASE ) ;
    public final void rule__STCaseStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5831:1: ( ( CASE ) )
            // InternalSTFunctionParser.g:5832:1: ( CASE )
            {
            // InternalSTFunctionParser.g:5832:1: ( CASE )
            // InternalSTFunctionParser.g:5833:2: CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }
            match(input,CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCASEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__0__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__1"
    // InternalSTFunctionParser.g:5842:1: rule__STCaseStatement__Group__1 : rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 ;
    public final void rule__STCaseStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5846:1: ( rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2 )
            // InternalSTFunctionParser.g:5847:2: rule__STCaseStatement__Group__1__Impl rule__STCaseStatement__Group__2
            {
            pushFollow(FOLLOW_20);
            rule__STCaseStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1"


    // $ANTLR start "rule__STCaseStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:5854:1: rule__STCaseStatement__Group__1__Impl : ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) ;
    public final void rule__STCaseStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5858:1: ( ( ( rule__STCaseStatement__SelectorAssignment_1 ) ) )
            // InternalSTFunctionParser.g:5859:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:5859:1: ( ( rule__STCaseStatement__SelectorAssignment_1 ) )
            // InternalSTFunctionParser.g:5860:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }
            // InternalSTFunctionParser.g:5861:2: ( rule__STCaseStatement__SelectorAssignment_1 )
            // InternalSTFunctionParser.g:5861:3: rule__STCaseStatement__SelectorAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__SelectorAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__1__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__2"
    // InternalSTFunctionParser.g:5869:1: rule__STCaseStatement__Group__2 : rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 ;
    public final void rule__STCaseStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5873:1: ( rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3 )
            // InternalSTFunctionParser.g:5874:2: rule__STCaseStatement__Group__2__Impl rule__STCaseStatement__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__STCaseStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2"


    // $ANTLR start "rule__STCaseStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:5881:1: rule__STCaseStatement__Group__2__Impl : ( OF ) ;
    public final void rule__STCaseStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5885:1: ( ( OF ) )
            // InternalSTFunctionParser.g:5886:1: ( OF )
            {
            // InternalSTFunctionParser.g:5886:1: ( OF )
            // InternalSTFunctionParser.g:5887:2: OF
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }
            match(input,OF,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getOFKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__2__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__3"
    // InternalSTFunctionParser.g:5896:1: rule__STCaseStatement__Group__3 : rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 ;
    public final void rule__STCaseStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5900:1: ( rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4 )
            // InternalSTFunctionParser.g:5901:2: rule__STCaseStatement__Group__3__Impl rule__STCaseStatement__Group__4
            {
            pushFollow(FOLLOW_39);
            rule__STCaseStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3"


    // $ANTLR start "rule__STCaseStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:5908:1: rule__STCaseStatement__Group__3__Impl : ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) ;
    public final void rule__STCaseStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5912:1: ( ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) ) )
            // InternalSTFunctionParser.g:5913:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            {
            // InternalSTFunctionParser.g:5913:1: ( ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* ) )
            // InternalSTFunctionParser.g:5914:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) ) ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:5914:2: ( ( rule__STCaseStatement__CasesAssignment_3 ) )
            // InternalSTFunctionParser.g:5915:3: ( rule__STCaseStatement__CasesAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5916:3: ( rule__STCaseStatement__CasesAssignment_3 )
            // InternalSTFunctionParser.g:5916:4: rule__STCaseStatement__CasesAssignment_3
            {
            pushFollow(FOLLOW_40);
            rule__STCaseStatement__CasesAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }

            // InternalSTFunctionParser.g:5919:2: ( ( rule__STCaseStatement__CasesAssignment_3 )* )
            // InternalSTFunctionParser.g:5920:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }
            // InternalSTFunctionParser.g:5921:3: ( rule__STCaseStatement__CasesAssignment_3 )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( ((LA64_0>=LDATE_AND_TIME && LA64_0<=DATE_AND_TIME)||(LA64_0>=LTIME_OF_DAY && LA64_0<=TIME_OF_DAY)||LA64_0==WSTRING||LA64_0==STRING||LA64_0==DWORD||(LA64_0>=FALSE && LA64_0<=ULINT)||(LA64_0>=USINT && LA64_0<=WCHAR)||(LA64_0>=BOOL && LA64_0<=BYTE)||(LA64_0>=CHAR && LA64_0<=DINT)||(LA64_0>=LINT && LA64_0<=SINT)||(LA64_0>=TIME && LA64_0<=WORD)||(LA64_0>=INT && LA64_0<=LDT)||(LA64_0>=NOT && LA64_0<=TOD)||LA64_0==DT||(LA64_0>=LD && LA64_0<=LT)||LA64_0==LeftParenthesis||LA64_0==PlusSign||LA64_0==HyphenMinus||LA64_0==D||LA64_0==T||(LA64_0>=RULE_NON_DECIMAL && LA64_0<=RULE_INT)||(LA64_0>=RULE_ID && LA64_0<=RULE_WSTRING)) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // InternalSTFunctionParser.g:5921:4: rule__STCaseStatement__CasesAssignment_3
            	    {
            	    pushFollow(FOLLOW_40);
            	    rule__STCaseStatement__CasesAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesAssignment_3()); 
            }

            }


            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__3__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__4"
    // InternalSTFunctionParser.g:5930:1: rule__STCaseStatement__Group__4 : rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 ;
    public final void rule__STCaseStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5934:1: ( rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5 )
            // InternalSTFunctionParser.g:5935:2: rule__STCaseStatement__Group__4__Impl rule__STCaseStatement__Group__5
            {
            pushFollow(FOLLOW_39);
            rule__STCaseStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4"


    // $ANTLR start "rule__STCaseStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:5942:1: rule__STCaseStatement__Group__4__Impl : ( ( rule__STCaseStatement__ElseAssignment_4 )? ) ;
    public final void rule__STCaseStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5946:1: ( ( ( rule__STCaseStatement__ElseAssignment_4 )? ) )
            // InternalSTFunctionParser.g:5947:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            {
            // InternalSTFunctionParser.g:5947:1: ( ( rule__STCaseStatement__ElseAssignment_4 )? )
            // InternalSTFunctionParser.g:5948:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }
            // InternalSTFunctionParser.g:5949:2: ( rule__STCaseStatement__ElseAssignment_4 )?
            int alt65=2;
            int LA65_0 = input.LA(1);

            if ( (LA65_0==ELSE) ) {
                alt65=1;
            }
            switch (alt65) {
                case 1 :
                    // InternalSTFunctionParser.g:5949:3: rule__STCaseStatement__ElseAssignment_4
                    {
                    pushFollow(FOLLOW_2);
                    rule__STCaseStatement__ElseAssignment_4();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__4__Impl"


    // $ANTLR start "rule__STCaseStatement__Group__5"
    // InternalSTFunctionParser.g:5957:1: rule__STCaseStatement__Group__5 : rule__STCaseStatement__Group__5__Impl ;
    public final void rule__STCaseStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5961:1: ( rule__STCaseStatement__Group__5__Impl )
            // InternalSTFunctionParser.g:5962:2: rule__STCaseStatement__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5"


    // $ANTLR start "rule__STCaseStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:5968:1: rule__STCaseStatement__Group__5__Impl : ( END_CASE ) ;
    public final void rule__STCaseStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5972:1: ( ( END_CASE ) )
            // InternalSTFunctionParser.g:5973:1: ( END_CASE )
            {
            // InternalSTFunctionParser.g:5973:1: ( END_CASE )
            // InternalSTFunctionParser.g:5974:2: END_CASE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }
            match(input,END_CASE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getEND_CASEKeyword_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__Group__5__Impl"


    // $ANTLR start "rule__STCaseCases__Group__0"
    // InternalSTFunctionParser.g:5984:1: rule__STCaseCases__Group__0 : rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 ;
    public final void rule__STCaseCases__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:5988:1: ( rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1 )
            // InternalSTFunctionParser.g:5989:2: rule__STCaseCases__Group__0__Impl rule__STCaseCases__Group__1
            {
            pushFollow(FOLLOW_41);
            rule__STCaseCases__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0"


    // $ANTLR start "rule__STCaseCases__Group__0__Impl"
    // InternalSTFunctionParser.g:5996:1: rule__STCaseCases__Group__0__Impl : ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) ;
    public final void rule__STCaseCases__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6000:1: ( ( ( rule__STCaseCases__ConditionsAssignment_0 ) ) )
            // InternalSTFunctionParser.g:6001:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:6001:1: ( ( rule__STCaseCases__ConditionsAssignment_0 ) )
            // InternalSTFunctionParser.g:6002:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }
            // InternalSTFunctionParser.g:6003:2: ( rule__STCaseCases__ConditionsAssignment_0 )
            // InternalSTFunctionParser.g:6003:3: rule__STCaseCases__ConditionsAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group__1"
    // InternalSTFunctionParser.g:6011:1: rule__STCaseCases__Group__1 : rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 ;
    public final void rule__STCaseCases__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6015:1: ( rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2 )
            // InternalSTFunctionParser.g:6016:2: rule__STCaseCases__Group__1__Impl rule__STCaseCases__Group__2
            {
            pushFollow(FOLLOW_41);
            rule__STCaseCases__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1"


    // $ANTLR start "rule__STCaseCases__Group__1__Impl"
    // InternalSTFunctionParser.g:6023:1: rule__STCaseCases__Group__1__Impl : ( ( rule__STCaseCases__Group_1__0 )* ) ;
    public final void rule__STCaseCases__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6027:1: ( ( ( rule__STCaseCases__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6028:1: ( ( rule__STCaseCases__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6028:1: ( ( rule__STCaseCases__Group_1__0 )* )
            // InternalSTFunctionParser.g:6029:2: ( rule__STCaseCases__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6030:2: ( rule__STCaseCases__Group_1__0 )*
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( (LA66_0==Comma) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6030:3: rule__STCaseCases__Group_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__STCaseCases__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop66;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__1__Impl"


    // $ANTLR start "rule__STCaseCases__Group__2"
    // InternalSTFunctionParser.g:6038:1: rule__STCaseCases__Group__2 : rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 ;
    public final void rule__STCaseCases__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6042:1: ( rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3 )
            // InternalSTFunctionParser.g:6043:2: rule__STCaseCases__Group__2__Impl rule__STCaseCases__Group__3
            {
            pushFollow(FOLLOW_33);
            rule__STCaseCases__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2"


    // $ANTLR start "rule__STCaseCases__Group__2__Impl"
    // InternalSTFunctionParser.g:6050:1: rule__STCaseCases__Group__2__Impl : ( Colon ) ;
    public final void rule__STCaseCases__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6054:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:6055:1: ( Colon )
            {
            // InternalSTFunctionParser.g:6055:1: ( Colon )
            // InternalSTFunctionParser.g:6056:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getColonKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__2__Impl"


    // $ANTLR start "rule__STCaseCases__Group__3"
    // InternalSTFunctionParser.g:6065:1: rule__STCaseCases__Group__3 : rule__STCaseCases__Group__3__Impl ;
    public final void rule__STCaseCases__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6069:1: ( rule__STCaseCases__Group__3__Impl )
            // InternalSTFunctionParser.g:6070:2: rule__STCaseCases__Group__3__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3"


    // $ANTLR start "rule__STCaseCases__Group__3__Impl"
    // InternalSTFunctionParser.g:6076:1: rule__STCaseCases__Group__3__Impl : ( ( rule__STCaseCases__StatementsAssignment_3 )* ) ;
    public final void rule__STCaseCases__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6080:1: ( ( ( rule__STCaseCases__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:6081:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:6081:1: ( ( rule__STCaseCases__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:6082:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:6083:2: ( rule__STCaseCases__StatementsAssignment_3 )*
            loop67:
            do {
                int alt67=2;
                alt67 = dfa67.predict(input);
                switch (alt67) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6083:3: rule__STCaseCases__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STCaseCases__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group__3__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__0"
    // InternalSTFunctionParser.g:6092:1: rule__STCaseCases__Group_1__0 : rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 ;
    public final void rule__STCaseCases__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6096:1: ( rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1 )
            // InternalSTFunctionParser.g:6097:2: rule__STCaseCases__Group_1__0__Impl rule__STCaseCases__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STCaseCases__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0"


    // $ANTLR start "rule__STCaseCases__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6104:1: rule__STCaseCases__Group_1__0__Impl : ( Comma ) ;
    public final void rule__STCaseCases__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6108:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:6109:1: ( Comma )
            {
            // InternalSTFunctionParser.g:6109:1: ( Comma )
            // InternalSTFunctionParser.g:6110:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getCommaKeyword_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__0__Impl"


    // $ANTLR start "rule__STCaseCases__Group_1__1"
    // InternalSTFunctionParser.g:6119:1: rule__STCaseCases__Group_1__1 : rule__STCaseCases__Group_1__1__Impl ;
    public final void rule__STCaseCases__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6123:1: ( rule__STCaseCases__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6124:2: rule__STCaseCases__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1"


    // $ANTLR start "rule__STCaseCases__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6130:1: rule__STCaseCases__Group_1__1__Impl : ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) ;
    public final void rule__STCaseCases__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6134:1: ( ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6135:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6135:1: ( ( rule__STCaseCases__ConditionsAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6136:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6137:2: ( rule__STCaseCases__ConditionsAssignment_1_1 )
            // InternalSTFunctionParser.g:6137:3: rule__STCaseCases__ConditionsAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STCaseCases__ConditionsAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__Group_1__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__0"
    // InternalSTFunctionParser.g:6146:1: rule__STElsePart__Group__0 : rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 ;
    public final void rule__STElsePart__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6150:1: ( rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1 )
            // InternalSTFunctionParser.g:6151:2: rule__STElsePart__Group__0__Impl rule__STElsePart__Group__1
            {
            pushFollow(FOLLOW_42);
            rule__STElsePart__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0"


    // $ANTLR start "rule__STElsePart__Group__0__Impl"
    // InternalSTFunctionParser.g:6158:1: rule__STElsePart__Group__0__Impl : ( () ) ;
    public final void rule__STElsePart__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6162:1: ( ( () ) )
            // InternalSTFunctionParser.g:6163:1: ( () )
            {
            // InternalSTFunctionParser.g:6163:1: ( () )
            // InternalSTFunctionParser.g:6164:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }
            // InternalSTFunctionParser.g:6165:2: ()
            // InternalSTFunctionParser.g:6165:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getSTElsePartAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__0__Impl"


    // $ANTLR start "rule__STElsePart__Group__1"
    // InternalSTFunctionParser.g:6173:1: rule__STElsePart__Group__1 : rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 ;
    public final void rule__STElsePart__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6177:1: ( rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2 )
            // InternalSTFunctionParser.g:6178:2: rule__STElsePart__Group__1__Impl rule__STElsePart__Group__2
            {
            pushFollow(FOLLOW_33);
            rule__STElsePart__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1"


    // $ANTLR start "rule__STElsePart__Group__1__Impl"
    // InternalSTFunctionParser.g:6185:1: rule__STElsePart__Group__1__Impl : ( ELSE ) ;
    public final void rule__STElsePart__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6189:1: ( ( ELSE ) )
            // InternalSTFunctionParser.g:6190:1: ( ELSE )
            {
            // InternalSTFunctionParser.g:6190:1: ( ELSE )
            // InternalSTFunctionParser.g:6191:2: ELSE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }
            match(input,ELSE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getELSEKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__1__Impl"


    // $ANTLR start "rule__STElsePart__Group__2"
    // InternalSTFunctionParser.g:6200:1: rule__STElsePart__Group__2 : rule__STElsePart__Group__2__Impl ;
    public final void rule__STElsePart__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6204:1: ( rule__STElsePart__Group__2__Impl )
            // InternalSTFunctionParser.g:6205:2: rule__STElsePart__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STElsePart__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2"


    // $ANTLR start "rule__STElsePart__Group__2__Impl"
    // InternalSTFunctionParser.g:6211:1: rule__STElsePart__Group__2__Impl : ( ( rule__STElsePart__StatementsAssignment_2 )* ) ;
    public final void rule__STElsePart__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6215:1: ( ( ( rule__STElsePart__StatementsAssignment_2 )* ) )
            // InternalSTFunctionParser.g:6216:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            {
            // InternalSTFunctionParser.g:6216:1: ( ( rule__STElsePart__StatementsAssignment_2 )* )
            // InternalSTFunctionParser.g:6217:2: ( rule__STElsePart__StatementsAssignment_2 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }
            // InternalSTFunctionParser.g:6218:2: ( rule__STElsePart__StatementsAssignment_2 )*
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( ((LA68_0>=LDATE_AND_TIME && LA68_0<=DATE_AND_TIME)||(LA68_0>=LTIME_OF_DAY && LA68_0<=TIME_OF_DAY)||LA68_0==CONTINUE||LA68_0==WSTRING||(LA68_0>=REPEAT && LA68_0<=STRING)||LA68_0==DWORD||(LA68_0>=FALSE && LA68_0<=ULINT)||(LA68_0>=USINT && LA68_0<=DINT)||(LA68_0>=EXIT && LA68_0<=SINT)||(LA68_0>=TIME && LA68_0<=WORD)||(LA68_0>=FOR && LA68_0<=LDT)||LA68_0==TOD||(LA68_0>=DT && LA68_0<=LT)||LA68_0==LeftParenthesis||LA68_0==PlusSign||LA68_0==HyphenMinus||LA68_0==Semicolon||LA68_0==D||LA68_0==T||(LA68_0>=RULE_NON_DECIMAL && LA68_0<=RULE_INT)||(LA68_0>=RULE_ID && LA68_0<=RULE_WSTRING)) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6218:3: rule__STElsePart__StatementsAssignment_2
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STElsePart__StatementsAssignment_2();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop68;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__0"
    // InternalSTFunctionParser.g:6227:1: rule__STForStatement__Group__0 : rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 ;
    public final void rule__STForStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6231:1: ( rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1 )
            // InternalSTFunctionParser.g:6232:2: rule__STForStatement__Group__0__Impl rule__STForStatement__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STForStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0"


    // $ANTLR start "rule__STForStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:6239:1: rule__STForStatement__Group__0__Impl : ( FOR ) ;
    public final void rule__STForStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6243:1: ( ( FOR ) )
            // InternalSTFunctionParser.g:6244:1: ( FOR )
            {
            // InternalSTFunctionParser.g:6244:1: ( FOR )
            // InternalSTFunctionParser.g:6245:2: FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }
            match(input,FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFORKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__0__Impl"


    // $ANTLR start "rule__STForStatement__Group__1"
    // InternalSTFunctionParser.g:6254:1: rule__STForStatement__Group__1 : rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 ;
    public final void rule__STForStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6258:1: ( rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2 )
            // InternalSTFunctionParser.g:6259:2: rule__STForStatement__Group__1__Impl rule__STForStatement__Group__2
            {
            pushFollow(FOLLOW_34);
            rule__STForStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1"


    // $ANTLR start "rule__STForStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:6266:1: rule__STForStatement__Group__1__Impl : ( ( rule__STForStatement__VariableAssignment_1 ) ) ;
    public final void rule__STForStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6270:1: ( ( ( rule__STForStatement__VariableAssignment_1 ) ) )
            // InternalSTFunctionParser.g:6271:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:6271:1: ( ( rule__STForStatement__VariableAssignment_1 ) )
            // InternalSTFunctionParser.g:6272:2: ( rule__STForStatement__VariableAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }
            // InternalSTFunctionParser.g:6273:2: ( rule__STForStatement__VariableAssignment_1 )
            // InternalSTFunctionParser.g:6273:3: rule__STForStatement__VariableAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__VariableAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__1__Impl"


    // $ANTLR start "rule__STForStatement__Group__2"
    // InternalSTFunctionParser.g:6281:1: rule__STForStatement__Group__2 : rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 ;
    public final void rule__STForStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6285:1: ( rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3 )
            // InternalSTFunctionParser.g:6286:2: rule__STForStatement__Group__2__Impl rule__STForStatement__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__STForStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2"


    // $ANTLR start "rule__STForStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:6293:1: rule__STForStatement__Group__2__Impl : ( ColonEqualsSign ) ;
    public final void rule__STForStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6297:1: ( ( ColonEqualsSign ) )
            // InternalSTFunctionParser.g:6298:1: ( ColonEqualsSign )
            {
            // InternalSTFunctionParser.g:6298:1: ( ColonEqualsSign )
            // InternalSTFunctionParser.g:6299:2: ColonEqualsSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }
            match(input,ColonEqualsSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getColonEqualsSignKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__2__Impl"


    // $ANTLR start "rule__STForStatement__Group__3"
    // InternalSTFunctionParser.g:6308:1: rule__STForStatement__Group__3 : rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 ;
    public final void rule__STForStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6312:1: ( rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4 )
            // InternalSTFunctionParser.g:6313:2: rule__STForStatement__Group__3__Impl rule__STForStatement__Group__4
            {
            pushFollow(FOLLOW_43);
            rule__STForStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3"


    // $ANTLR start "rule__STForStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:6320:1: rule__STForStatement__Group__3__Impl : ( ( rule__STForStatement__FromAssignment_3 ) ) ;
    public final void rule__STForStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6324:1: ( ( ( rule__STForStatement__FromAssignment_3 ) ) )
            // InternalSTFunctionParser.g:6325:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:6325:1: ( ( rule__STForStatement__FromAssignment_3 ) )
            // InternalSTFunctionParser.g:6326:2: ( rule__STForStatement__FromAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }
            // InternalSTFunctionParser.g:6327:2: ( rule__STForStatement__FromAssignment_3 )
            // InternalSTFunctionParser.g:6327:3: rule__STForStatement__FromAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__FromAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__3__Impl"


    // $ANTLR start "rule__STForStatement__Group__4"
    // InternalSTFunctionParser.g:6335:1: rule__STForStatement__Group__4 : rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 ;
    public final void rule__STForStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6339:1: ( rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5 )
            // InternalSTFunctionParser.g:6340:2: rule__STForStatement__Group__4__Impl rule__STForStatement__Group__5
            {
            pushFollow(FOLLOW_21);
            rule__STForStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4"


    // $ANTLR start "rule__STForStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:6347:1: rule__STForStatement__Group__4__Impl : ( TO ) ;
    public final void rule__STForStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6351:1: ( ( TO ) )
            // InternalSTFunctionParser.g:6352:1: ( TO )
            {
            // InternalSTFunctionParser.g:6352:1: ( TO )
            // InternalSTFunctionParser.g:6353:2: TO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }
            match(input,TO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getTOKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__4__Impl"


    // $ANTLR start "rule__STForStatement__Group__5"
    // InternalSTFunctionParser.g:6362:1: rule__STForStatement__Group__5 : rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 ;
    public final void rule__STForStatement__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6366:1: ( rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6 )
            // InternalSTFunctionParser.g:6367:2: rule__STForStatement__Group__5__Impl rule__STForStatement__Group__6
            {
            pushFollow(FOLLOW_44);
            rule__STForStatement__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__6();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5"


    // $ANTLR start "rule__STForStatement__Group__5__Impl"
    // InternalSTFunctionParser.g:6374:1: rule__STForStatement__Group__5__Impl : ( ( rule__STForStatement__ToAssignment_5 ) ) ;
    public final void rule__STForStatement__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6378:1: ( ( ( rule__STForStatement__ToAssignment_5 ) ) )
            // InternalSTFunctionParser.g:6379:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            {
            // InternalSTFunctionParser.g:6379:1: ( ( rule__STForStatement__ToAssignment_5 ) )
            // InternalSTFunctionParser.g:6380:2: ( rule__STForStatement__ToAssignment_5 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }
            // InternalSTFunctionParser.g:6381:2: ( rule__STForStatement__ToAssignment_5 )
            // InternalSTFunctionParser.g:6381:3: rule__STForStatement__ToAssignment_5
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ToAssignment_5();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToAssignment_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__5__Impl"


    // $ANTLR start "rule__STForStatement__Group__6"
    // InternalSTFunctionParser.g:6389:1: rule__STForStatement__Group__6 : rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 ;
    public final void rule__STForStatement__Group__6() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6393:1: ( rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7 )
            // InternalSTFunctionParser.g:6394:2: rule__STForStatement__Group__6__Impl rule__STForStatement__Group__7
            {
            pushFollow(FOLLOW_44);
            rule__STForStatement__Group__6__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__7();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6"


    // $ANTLR start "rule__STForStatement__Group__6__Impl"
    // InternalSTFunctionParser.g:6401:1: rule__STForStatement__Group__6__Impl : ( ( rule__STForStatement__Group_6__0 )? ) ;
    public final void rule__STForStatement__Group__6__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6405:1: ( ( ( rule__STForStatement__Group_6__0 )? ) )
            // InternalSTFunctionParser.g:6406:1: ( ( rule__STForStatement__Group_6__0 )? )
            {
            // InternalSTFunctionParser.g:6406:1: ( ( rule__STForStatement__Group_6__0 )? )
            // InternalSTFunctionParser.g:6407:2: ( rule__STForStatement__Group_6__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }
            // InternalSTFunctionParser.g:6408:2: ( rule__STForStatement__Group_6__0 )?
            int alt69=2;
            int LA69_0 = input.LA(1);

            if ( (LA69_0==BY) ) {
                alt69=1;
            }
            switch (alt69) {
                case 1 :
                    // InternalSTFunctionParser.g:6408:3: rule__STForStatement__Group_6__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STForStatement__Group_6__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getGroup_6()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__6__Impl"


    // $ANTLR start "rule__STForStatement__Group__7"
    // InternalSTFunctionParser.g:6416:1: rule__STForStatement__Group__7 : rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 ;
    public final void rule__STForStatement__Group__7() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6420:1: ( rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8 )
            // InternalSTFunctionParser.g:6421:2: rule__STForStatement__Group__7__Impl rule__STForStatement__Group__8
            {
            pushFollow(FOLLOW_45);
            rule__STForStatement__Group__7__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__8();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7"


    // $ANTLR start "rule__STForStatement__Group__7__Impl"
    // InternalSTFunctionParser.g:6428:1: rule__STForStatement__Group__7__Impl : ( DO ) ;
    public final void rule__STForStatement__Group__7__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6432:1: ( ( DO ) )
            // InternalSTFunctionParser.g:6433:1: ( DO )
            {
            // InternalSTFunctionParser.g:6433:1: ( DO )
            // InternalSTFunctionParser.g:6434:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getDOKeyword_7()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__7__Impl"


    // $ANTLR start "rule__STForStatement__Group__8"
    // InternalSTFunctionParser.g:6443:1: rule__STForStatement__Group__8 : rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 ;
    public final void rule__STForStatement__Group__8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6447:1: ( rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9 )
            // InternalSTFunctionParser.g:6448:2: rule__STForStatement__Group__8__Impl rule__STForStatement__Group__9
            {
            pushFollow(FOLLOW_45);
            rule__STForStatement__Group__8__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8"


    // $ANTLR start "rule__STForStatement__Group__8__Impl"
    // InternalSTFunctionParser.g:6455:1: rule__STForStatement__Group__8__Impl : ( ( rule__STForStatement__StatementsAssignment_8 )* ) ;
    public final void rule__STForStatement__Group__8__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6459:1: ( ( ( rule__STForStatement__StatementsAssignment_8 )* ) )
            // InternalSTFunctionParser.g:6460:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            {
            // InternalSTFunctionParser.g:6460:1: ( ( rule__STForStatement__StatementsAssignment_8 )* )
            // InternalSTFunctionParser.g:6461:2: ( rule__STForStatement__StatementsAssignment_8 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }
            // InternalSTFunctionParser.g:6462:2: ( rule__STForStatement__StatementsAssignment_8 )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( ((LA70_0>=LDATE_AND_TIME && LA70_0<=DATE_AND_TIME)||(LA70_0>=LTIME_OF_DAY && LA70_0<=TIME_OF_DAY)||LA70_0==CONTINUE||LA70_0==WSTRING||(LA70_0>=REPEAT && LA70_0<=STRING)||LA70_0==DWORD||(LA70_0>=FALSE && LA70_0<=ULINT)||(LA70_0>=USINT && LA70_0<=DINT)||(LA70_0>=EXIT && LA70_0<=SINT)||(LA70_0>=TIME && LA70_0<=WORD)||(LA70_0>=FOR && LA70_0<=LDT)||LA70_0==TOD||(LA70_0>=DT && LA70_0<=LT)||LA70_0==LeftParenthesis||LA70_0==PlusSign||LA70_0==HyphenMinus||LA70_0==Semicolon||LA70_0==D||LA70_0==T||(LA70_0>=RULE_NON_DECIMAL && LA70_0<=RULE_INT)||(LA70_0>=RULE_ID && LA70_0<=RULE_WSTRING)) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6462:3: rule__STForStatement__StatementsAssignment_8
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STForStatement__StatementsAssignment_8();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsAssignment_8()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__8__Impl"


    // $ANTLR start "rule__STForStatement__Group__9"
    // InternalSTFunctionParser.g:6470:1: rule__STForStatement__Group__9 : rule__STForStatement__Group__9__Impl ;
    public final void rule__STForStatement__Group__9() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6474:1: ( rule__STForStatement__Group__9__Impl )
            // InternalSTFunctionParser.g:6475:2: rule__STForStatement__Group__9__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group__9__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9"


    // $ANTLR start "rule__STForStatement__Group__9__Impl"
    // InternalSTFunctionParser.g:6481:1: rule__STForStatement__Group__9__Impl : ( END_FOR ) ;
    public final void rule__STForStatement__Group__9__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6485:1: ( ( END_FOR ) )
            // InternalSTFunctionParser.g:6486:1: ( END_FOR )
            {
            // InternalSTFunctionParser.g:6486:1: ( END_FOR )
            // InternalSTFunctionParser.g:6487:2: END_FOR
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }
            match(input,END_FOR,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getEND_FORKeyword_9()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group__9__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__0"
    // InternalSTFunctionParser.g:6497:1: rule__STForStatement__Group_6__0 : rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 ;
    public final void rule__STForStatement__Group_6__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6501:1: ( rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1 )
            // InternalSTFunctionParser.g:6502:2: rule__STForStatement__Group_6__0__Impl rule__STForStatement__Group_6__1
            {
            pushFollow(FOLLOW_21);
            rule__STForStatement__Group_6__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0"


    // $ANTLR start "rule__STForStatement__Group_6__0__Impl"
    // InternalSTFunctionParser.g:6509:1: rule__STForStatement__Group_6__0__Impl : ( BY ) ;
    public final void rule__STForStatement__Group_6__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6513:1: ( ( BY ) )
            // InternalSTFunctionParser.g:6514:1: ( BY )
            {
            // InternalSTFunctionParser.g:6514:1: ( BY )
            // InternalSTFunctionParser.g:6515:2: BY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }
            match(input,BY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBYKeyword_6_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__0__Impl"


    // $ANTLR start "rule__STForStatement__Group_6__1"
    // InternalSTFunctionParser.g:6524:1: rule__STForStatement__Group_6__1 : rule__STForStatement__Group_6__1__Impl ;
    public final void rule__STForStatement__Group_6__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6528:1: ( rule__STForStatement__Group_6__1__Impl )
            // InternalSTFunctionParser.g:6529:2: rule__STForStatement__Group_6__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__Group_6__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1"


    // $ANTLR start "rule__STForStatement__Group_6__1__Impl"
    // InternalSTFunctionParser.g:6535:1: rule__STForStatement__Group_6__1__Impl : ( ( rule__STForStatement__ByAssignment_6_1 ) ) ;
    public final void rule__STForStatement__Group_6__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6539:1: ( ( ( rule__STForStatement__ByAssignment_6_1 ) ) )
            // InternalSTFunctionParser.g:6540:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            {
            // InternalSTFunctionParser.g:6540:1: ( ( rule__STForStatement__ByAssignment_6_1 ) )
            // InternalSTFunctionParser.g:6541:2: ( rule__STForStatement__ByAssignment_6_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }
            // InternalSTFunctionParser.g:6542:2: ( rule__STForStatement__ByAssignment_6_1 )
            // InternalSTFunctionParser.g:6542:3: rule__STForStatement__ByAssignment_6_1
            {
            pushFollow(FOLLOW_2);
            rule__STForStatement__ByAssignment_6_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getByAssignment_6_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__Group_6__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__0"
    // InternalSTFunctionParser.g:6551:1: rule__STWhileStatement__Group__0 : rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 ;
    public final void rule__STWhileStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6555:1: ( rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1 )
            // InternalSTFunctionParser.g:6556:2: rule__STWhileStatement__Group__0__Impl rule__STWhileStatement__Group__1
            {
            pushFollow(FOLLOW_21);
            rule__STWhileStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0"


    // $ANTLR start "rule__STWhileStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:6563:1: rule__STWhileStatement__Group__0__Impl : ( WHILE ) ;
    public final void rule__STWhileStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6567:1: ( ( WHILE ) )
            // InternalSTFunctionParser.g:6568:1: ( WHILE )
            {
            // InternalSTFunctionParser.g:6568:1: ( WHILE )
            // InternalSTFunctionParser.g:6569:2: WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }
            match(input,WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getWHILEKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__0__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__1"
    // InternalSTFunctionParser.g:6578:1: rule__STWhileStatement__Group__1 : rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 ;
    public final void rule__STWhileStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6582:1: ( rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2 )
            // InternalSTFunctionParser.g:6583:2: rule__STWhileStatement__Group__1__Impl rule__STWhileStatement__Group__2
            {
            pushFollow(FOLLOW_46);
            rule__STWhileStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1"


    // $ANTLR start "rule__STWhileStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:6590:1: rule__STWhileStatement__Group__1__Impl : ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) ;
    public final void rule__STWhileStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6594:1: ( ( ( rule__STWhileStatement__ConditionAssignment_1 ) ) )
            // InternalSTFunctionParser.g:6595:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:6595:1: ( ( rule__STWhileStatement__ConditionAssignment_1 ) )
            // InternalSTFunctionParser.g:6596:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }
            // InternalSTFunctionParser.g:6597:2: ( rule__STWhileStatement__ConditionAssignment_1 )
            // InternalSTFunctionParser.g:6597:3: rule__STWhileStatement__ConditionAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__ConditionAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__1__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__2"
    // InternalSTFunctionParser.g:6605:1: rule__STWhileStatement__Group__2 : rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 ;
    public final void rule__STWhileStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6609:1: ( rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3 )
            // InternalSTFunctionParser.g:6610:2: rule__STWhileStatement__Group__2__Impl rule__STWhileStatement__Group__3
            {
            pushFollow(FOLLOW_47);
            rule__STWhileStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2"


    // $ANTLR start "rule__STWhileStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:6617:1: rule__STWhileStatement__Group__2__Impl : ( DO ) ;
    public final void rule__STWhileStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6621:1: ( ( DO ) )
            // InternalSTFunctionParser.g:6622:1: ( DO )
            {
            // InternalSTFunctionParser.g:6622:1: ( DO )
            // InternalSTFunctionParser.g:6623:2: DO
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }
            match(input,DO,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getDOKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__2__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__3"
    // InternalSTFunctionParser.g:6632:1: rule__STWhileStatement__Group__3 : rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 ;
    public final void rule__STWhileStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6636:1: ( rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4 )
            // InternalSTFunctionParser.g:6637:2: rule__STWhileStatement__Group__3__Impl rule__STWhileStatement__Group__4
            {
            pushFollow(FOLLOW_47);
            rule__STWhileStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3"


    // $ANTLR start "rule__STWhileStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:6644:1: rule__STWhileStatement__Group__3__Impl : ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) ;
    public final void rule__STWhileStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6648:1: ( ( ( rule__STWhileStatement__StatementsAssignment_3 )* ) )
            // InternalSTFunctionParser.g:6649:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            {
            // InternalSTFunctionParser.g:6649:1: ( ( rule__STWhileStatement__StatementsAssignment_3 )* )
            // InternalSTFunctionParser.g:6650:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }
            // InternalSTFunctionParser.g:6651:2: ( rule__STWhileStatement__StatementsAssignment_3 )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( ((LA71_0>=LDATE_AND_TIME && LA71_0<=DATE_AND_TIME)||(LA71_0>=LTIME_OF_DAY && LA71_0<=TIME_OF_DAY)||LA71_0==CONTINUE||LA71_0==WSTRING||(LA71_0>=REPEAT && LA71_0<=STRING)||LA71_0==DWORD||(LA71_0>=FALSE && LA71_0<=ULINT)||(LA71_0>=USINT && LA71_0<=DINT)||(LA71_0>=EXIT && LA71_0<=SINT)||(LA71_0>=TIME && LA71_0<=WORD)||(LA71_0>=FOR && LA71_0<=LDT)||LA71_0==TOD||(LA71_0>=DT && LA71_0<=LT)||LA71_0==LeftParenthesis||LA71_0==PlusSign||LA71_0==HyphenMinus||LA71_0==Semicolon||LA71_0==D||LA71_0==T||(LA71_0>=RULE_NON_DECIMAL && LA71_0<=RULE_INT)||(LA71_0>=RULE_ID && LA71_0<=RULE_WSTRING)) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6651:3: rule__STWhileStatement__StatementsAssignment_3
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STWhileStatement__StatementsAssignment_3();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__3__Impl"


    // $ANTLR start "rule__STWhileStatement__Group__4"
    // InternalSTFunctionParser.g:6659:1: rule__STWhileStatement__Group__4 : rule__STWhileStatement__Group__4__Impl ;
    public final void rule__STWhileStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6663:1: ( rule__STWhileStatement__Group__4__Impl )
            // InternalSTFunctionParser.g:6664:2: rule__STWhileStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STWhileStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4"


    // $ANTLR start "rule__STWhileStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:6670:1: rule__STWhileStatement__Group__4__Impl : ( END_WHILE ) ;
    public final void rule__STWhileStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6674:1: ( ( END_WHILE ) )
            // InternalSTFunctionParser.g:6675:1: ( END_WHILE )
            {
            // InternalSTFunctionParser.g:6675:1: ( END_WHILE )
            // InternalSTFunctionParser.g:6676:2: END_WHILE
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }
            match(input,END_WHILE,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getEND_WHILEKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__Group__4__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__0"
    // InternalSTFunctionParser.g:6686:1: rule__STRepeatStatement__Group__0 : rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 ;
    public final void rule__STRepeatStatement__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6690:1: ( rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1 )
            // InternalSTFunctionParser.g:6691:2: rule__STRepeatStatement__Group__0__Impl rule__STRepeatStatement__Group__1
            {
            pushFollow(FOLLOW_48);
            rule__STRepeatStatement__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0"


    // $ANTLR start "rule__STRepeatStatement__Group__0__Impl"
    // InternalSTFunctionParser.g:6698:1: rule__STRepeatStatement__Group__0__Impl : ( REPEAT ) ;
    public final void rule__STRepeatStatement__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6702:1: ( ( REPEAT ) )
            // InternalSTFunctionParser.g:6703:1: ( REPEAT )
            {
            // InternalSTFunctionParser.g:6703:1: ( REPEAT )
            // InternalSTFunctionParser.g:6704:2: REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }
            match(input,REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getREPEATKeyword_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__0__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__1"
    // InternalSTFunctionParser.g:6713:1: rule__STRepeatStatement__Group__1 : rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 ;
    public final void rule__STRepeatStatement__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6717:1: ( rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2 )
            // InternalSTFunctionParser.g:6718:2: rule__STRepeatStatement__Group__1__Impl rule__STRepeatStatement__Group__2
            {
            pushFollow(FOLLOW_48);
            rule__STRepeatStatement__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1"


    // $ANTLR start "rule__STRepeatStatement__Group__1__Impl"
    // InternalSTFunctionParser.g:6725:1: rule__STRepeatStatement__Group__1__Impl : ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) ;
    public final void rule__STRepeatStatement__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6729:1: ( ( ( rule__STRepeatStatement__StatementsAssignment_1 )* ) )
            // InternalSTFunctionParser.g:6730:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            {
            // InternalSTFunctionParser.g:6730:1: ( ( rule__STRepeatStatement__StatementsAssignment_1 )* )
            // InternalSTFunctionParser.g:6731:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }
            // InternalSTFunctionParser.g:6732:2: ( rule__STRepeatStatement__StatementsAssignment_1 )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( ((LA72_0>=LDATE_AND_TIME && LA72_0<=DATE_AND_TIME)||(LA72_0>=LTIME_OF_DAY && LA72_0<=TIME_OF_DAY)||LA72_0==CONTINUE||LA72_0==WSTRING||(LA72_0>=REPEAT && LA72_0<=STRING)||LA72_0==DWORD||(LA72_0>=FALSE && LA72_0<=ULINT)||(LA72_0>=USINT && LA72_0<=DINT)||(LA72_0>=EXIT && LA72_0<=SINT)||(LA72_0>=TIME && LA72_0<=WORD)||(LA72_0>=FOR && LA72_0<=LDT)||LA72_0==TOD||(LA72_0>=DT && LA72_0<=LT)||LA72_0==LeftParenthesis||LA72_0==PlusSign||LA72_0==HyphenMinus||LA72_0==Semicolon||LA72_0==D||LA72_0==T||(LA72_0>=RULE_NON_DECIMAL && LA72_0<=RULE_INT)||(LA72_0>=RULE_ID && LA72_0<=RULE_WSTRING)) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6732:3: rule__STRepeatStatement__StatementsAssignment_1
            	    {
            	    pushFollow(FOLLOW_9);
            	    rule__STRepeatStatement__StatementsAssignment_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__1__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__2"
    // InternalSTFunctionParser.g:6740:1: rule__STRepeatStatement__Group__2 : rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 ;
    public final void rule__STRepeatStatement__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6744:1: ( rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3 )
            // InternalSTFunctionParser.g:6745:2: rule__STRepeatStatement__Group__2__Impl rule__STRepeatStatement__Group__3
            {
            pushFollow(FOLLOW_21);
            rule__STRepeatStatement__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2"


    // $ANTLR start "rule__STRepeatStatement__Group__2__Impl"
    // InternalSTFunctionParser.g:6752:1: rule__STRepeatStatement__Group__2__Impl : ( UNTIL ) ;
    public final void rule__STRepeatStatement__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6756:1: ( ( UNTIL ) )
            // InternalSTFunctionParser.g:6757:1: ( UNTIL )
            {
            // InternalSTFunctionParser.g:6757:1: ( UNTIL )
            // InternalSTFunctionParser.g:6758:2: UNTIL
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }
            match(input,UNTIL,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getUNTILKeyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__2__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__3"
    // InternalSTFunctionParser.g:6767:1: rule__STRepeatStatement__Group__3 : rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 ;
    public final void rule__STRepeatStatement__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6771:1: ( rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4 )
            // InternalSTFunctionParser.g:6772:2: rule__STRepeatStatement__Group__3__Impl rule__STRepeatStatement__Group__4
            {
            pushFollow(FOLLOW_49);
            rule__STRepeatStatement__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3"


    // $ANTLR start "rule__STRepeatStatement__Group__3__Impl"
    // InternalSTFunctionParser.g:6779:1: rule__STRepeatStatement__Group__3__Impl : ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) ;
    public final void rule__STRepeatStatement__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6783:1: ( ( ( rule__STRepeatStatement__ConditionAssignment_3 ) ) )
            // InternalSTFunctionParser.g:6784:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            {
            // InternalSTFunctionParser.g:6784:1: ( ( rule__STRepeatStatement__ConditionAssignment_3 ) )
            // InternalSTFunctionParser.g:6785:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }
            // InternalSTFunctionParser.g:6786:2: ( rule__STRepeatStatement__ConditionAssignment_3 )
            // InternalSTFunctionParser.g:6786:3: rule__STRepeatStatement__ConditionAssignment_3
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__ConditionAssignment_3();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionAssignment_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__3__Impl"


    // $ANTLR start "rule__STRepeatStatement__Group__4"
    // InternalSTFunctionParser.g:6794:1: rule__STRepeatStatement__Group__4 : rule__STRepeatStatement__Group__4__Impl ;
    public final void rule__STRepeatStatement__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6798:1: ( rule__STRepeatStatement__Group__4__Impl )
            // InternalSTFunctionParser.g:6799:2: rule__STRepeatStatement__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STRepeatStatement__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4"


    // $ANTLR start "rule__STRepeatStatement__Group__4__Impl"
    // InternalSTFunctionParser.g:6805:1: rule__STRepeatStatement__Group__4__Impl : ( END_REPEAT ) ;
    public final void rule__STRepeatStatement__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6809:1: ( ( END_REPEAT ) )
            // InternalSTFunctionParser.g:6810:1: ( END_REPEAT )
            {
            // InternalSTFunctionParser.g:6810:1: ( END_REPEAT )
            // InternalSTFunctionParser.g:6811:2: END_REPEAT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }
            match(input,END_REPEAT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getEND_REPEATKeyword_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__Group__4__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__0"
    // InternalSTFunctionParser.g:6821:1: rule__STSubrangeExpression__Group__0 : rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 ;
    public final void rule__STSubrangeExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6825:1: ( rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1 )
            // InternalSTFunctionParser.g:6826:2: rule__STSubrangeExpression__Group__0__Impl rule__STSubrangeExpression__Group__1
            {
            pushFollow(FOLLOW_50);
            rule__STSubrangeExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0"


    // $ANTLR start "rule__STSubrangeExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6833:1: rule__STSubrangeExpression__Group__0__Impl : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6837:1: ( ( ruleSTOrExpression ) )
            // InternalSTFunctionParser.g:6838:1: ( ruleSTOrExpression )
            {
            // InternalSTFunctionParser.g:6838:1: ( ruleSTOrExpression )
            // InternalSTFunctionParser.g:6839:2: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTOrExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group__1"
    // InternalSTFunctionParser.g:6848:1: rule__STSubrangeExpression__Group__1 : rule__STSubrangeExpression__Group__1__Impl ;
    public final void rule__STSubrangeExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6852:1: ( rule__STSubrangeExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:6853:2: rule__STSubrangeExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1"


    // $ANTLR start "rule__STSubrangeExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:6859:1: rule__STSubrangeExpression__Group__1__Impl : ( ( rule__STSubrangeExpression__Group_1__0 )* ) ;
    public final void rule__STSubrangeExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6863:1: ( ( ( rule__STSubrangeExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:6864:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:6864:1: ( ( rule__STSubrangeExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:6865:2: ( rule__STSubrangeExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:6866:2: ( rule__STSubrangeExpression__Group_1__0 )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==FullStopFullStop) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // InternalSTFunctionParser.g:6866:3: rule__STSubrangeExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_51);
            	    rule__STSubrangeExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0"
    // InternalSTFunctionParser.g:6875:1: rule__STSubrangeExpression__Group_1__0 : rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 ;
    public final void rule__STSubrangeExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6879:1: ( rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1 )
            // InternalSTFunctionParser.g:6880:2: rule__STSubrangeExpression__Group_1__0__Impl rule__STSubrangeExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STSubrangeExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:6887:1: rule__STSubrangeExpression__Group_1__0__Impl : ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6891:1: ( ( ( rule__STSubrangeExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:6892:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:6892:1: ( ( rule__STSubrangeExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:6893:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:6894:2: ( rule__STSubrangeExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:6894:3: rule__STSubrangeExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1"
    // InternalSTFunctionParser.g:6902:1: rule__STSubrangeExpression__Group_1__1 : rule__STSubrangeExpression__Group_1__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6906:1: ( rule__STSubrangeExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:6907:2: rule__STSubrangeExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:6913:1: rule__STSubrangeExpression__Group_1__1__Impl : ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6917:1: ( ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:6918:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:6918:1: ( ( rule__STSubrangeExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:6919:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:6920:2: ( rule__STSubrangeExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:6920:3: rule__STSubrangeExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:6929:1: rule__STSubrangeExpression__Group_1_0__0 : rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 ;
    public final void rule__STSubrangeExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6933:1: ( rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:6934:2: rule__STSubrangeExpression__Group_1_0__0__Impl rule__STSubrangeExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_50);
            rule__STSubrangeExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:6941:1: rule__STSubrangeExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STSubrangeExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6945:1: ( ( () ) )
            // InternalSTFunctionParser.g:6946:1: ( () )
            {
            // InternalSTFunctionParser.g:6946:1: ( () )
            // InternalSTFunctionParser.g:6947:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:6948:2: ()
            // InternalSTFunctionParser.g:6948:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:6956:1: rule__STSubrangeExpression__Group_1_0__1 : rule__STSubrangeExpression__Group_1_0__1__Impl ;
    public final void rule__STSubrangeExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6960:1: ( rule__STSubrangeExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:6961:2: rule__STSubrangeExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1"


    // $ANTLR start "rule__STSubrangeExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:6967:1: rule__STSubrangeExpression__Group_1_0__1__Impl : ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STSubrangeExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6971:1: ( ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:6972:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:6972:1: ( ( rule__STSubrangeExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:6973:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:6974:2: ( rule__STSubrangeExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:6974:3: rule__STSubrangeExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STSubrangeExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group__0"
    // InternalSTFunctionParser.g:6983:1: rule__STOrExpression__Group__0 : rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 ;
    public final void rule__STOrExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6987:1: ( rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1 )
            // InternalSTFunctionParser.g:6988:2: rule__STOrExpression__Group__0__Impl rule__STOrExpression__Group__1
            {
            pushFollow(FOLLOW_52);
            rule__STOrExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0"


    // $ANTLR start "rule__STOrExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:6995:1: rule__STOrExpression__Group__0__Impl : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:6999:1: ( ( ruleSTXorExpression ) )
            // InternalSTFunctionParser.g:7000:1: ( ruleSTXorExpression )
            {
            // InternalSTFunctionParser.g:7000:1: ( ruleSTXorExpression )
            // InternalSTFunctionParser.g:7001:2: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTXorExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group__1"
    // InternalSTFunctionParser.g:7010:1: rule__STOrExpression__Group__1 : rule__STOrExpression__Group__1__Impl ;
    public final void rule__STOrExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7014:1: ( rule__STOrExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7015:2: rule__STOrExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1"


    // $ANTLR start "rule__STOrExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7021:1: rule__STOrExpression__Group__1__Impl : ( ( rule__STOrExpression__Group_1__0 )* ) ;
    public final void rule__STOrExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7025:1: ( ( ( rule__STOrExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7026:1: ( ( rule__STOrExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7026:1: ( ( rule__STOrExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7027:2: ( rule__STOrExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7028:2: ( rule__STOrExpression__Group_1__0 )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( (LA74_0==OR) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7028:3: rule__STOrExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_53);
            	    rule__STOrExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__0"
    // InternalSTFunctionParser.g:7037:1: rule__STOrExpression__Group_1__0 : rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 ;
    public final void rule__STOrExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7041:1: ( rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7042:2: rule__STOrExpression__Group_1__0__Impl rule__STOrExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STOrExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0"


    // $ANTLR start "rule__STOrExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7049:1: rule__STOrExpression__Group_1__0__Impl : ( ( rule__STOrExpression__Group_1_0__0 ) ) ;
    public final void rule__STOrExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7053:1: ( ( ( rule__STOrExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7054:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7054:1: ( ( rule__STOrExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7055:2: ( rule__STOrExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7056:2: ( rule__STOrExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7056:3: rule__STOrExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1__1"
    // InternalSTFunctionParser.g:7064:1: rule__STOrExpression__Group_1__1 : rule__STOrExpression__Group_1__1__Impl ;
    public final void rule__STOrExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7068:1: ( rule__STOrExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7069:2: rule__STOrExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1"


    // $ANTLR start "rule__STOrExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7075:1: rule__STOrExpression__Group_1__1__Impl : ( ( rule__STOrExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STOrExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7079:1: ( ( ( rule__STOrExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7080:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7080:1: ( ( rule__STOrExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7081:2: ( rule__STOrExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7082:2: ( rule__STOrExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7082:3: rule__STOrExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7091:1: rule__STOrExpression__Group_1_0__0 : rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 ;
    public final void rule__STOrExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7095:1: ( rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7096:2: rule__STOrExpression__Group_1_0__0__Impl rule__STOrExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_52);
            rule__STOrExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0"


    // $ANTLR start "rule__STOrExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7103:1: rule__STOrExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STOrExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7107:1: ( ( () ) )
            // InternalSTFunctionParser.g:7108:1: ( () )
            {
            // InternalSTFunctionParser.g:7108:1: ( () )
            // InternalSTFunctionParser.g:7109:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7110:2: ()
            // InternalSTFunctionParser.g:7110:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7118:1: rule__STOrExpression__Group_1_0__1 : rule__STOrExpression__Group_1_0__1__Impl ;
    public final void rule__STOrExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7122:1: ( rule__STOrExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7123:2: rule__STOrExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1"


    // $ANTLR start "rule__STOrExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7129:1: rule__STOrExpression__Group_1_0__1__Impl : ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STOrExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7133:1: ( ( ( rule__STOrExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7134:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7134:1: ( ( rule__STOrExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7135:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7136:2: ( rule__STOrExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7136:3: rule__STOrExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STOrExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group__0"
    // InternalSTFunctionParser.g:7145:1: rule__STXorExpression__Group__0 : rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 ;
    public final void rule__STXorExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7149:1: ( rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1 )
            // InternalSTFunctionParser.g:7150:2: rule__STXorExpression__Group__0__Impl rule__STXorExpression__Group__1
            {
            pushFollow(FOLLOW_54);
            rule__STXorExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0"


    // $ANTLR start "rule__STXorExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7157:1: rule__STXorExpression__Group__0__Impl : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7161:1: ( ( ruleSTAndExpression ) )
            // InternalSTFunctionParser.g:7162:1: ( ruleSTAndExpression )
            {
            // InternalSTFunctionParser.g:7162:1: ( ruleSTAndExpression )
            // InternalSTFunctionParser.g:7163:2: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTAndExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group__1"
    // InternalSTFunctionParser.g:7172:1: rule__STXorExpression__Group__1 : rule__STXorExpression__Group__1__Impl ;
    public final void rule__STXorExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7176:1: ( rule__STXorExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7177:2: rule__STXorExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1"


    // $ANTLR start "rule__STXorExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7183:1: rule__STXorExpression__Group__1__Impl : ( ( rule__STXorExpression__Group_1__0 )* ) ;
    public final void rule__STXorExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7187:1: ( ( ( rule__STXorExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7188:1: ( ( rule__STXorExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7188:1: ( ( rule__STXorExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7189:2: ( rule__STXorExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7190:2: ( rule__STXorExpression__Group_1__0 )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( (LA75_0==XOR) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7190:3: rule__STXorExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_55);
            	    rule__STXorExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__0"
    // InternalSTFunctionParser.g:7199:1: rule__STXorExpression__Group_1__0 : rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 ;
    public final void rule__STXorExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7203:1: ( rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7204:2: rule__STXorExpression__Group_1__0__Impl rule__STXorExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STXorExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0"


    // $ANTLR start "rule__STXorExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7211:1: rule__STXorExpression__Group_1__0__Impl : ( ( rule__STXorExpression__Group_1_0__0 ) ) ;
    public final void rule__STXorExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7215:1: ( ( ( rule__STXorExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7216:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7216:1: ( ( rule__STXorExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7217:2: ( rule__STXorExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7218:2: ( rule__STXorExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7218:3: rule__STXorExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1__1"
    // InternalSTFunctionParser.g:7226:1: rule__STXorExpression__Group_1__1 : rule__STXorExpression__Group_1__1__Impl ;
    public final void rule__STXorExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7230:1: ( rule__STXorExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7231:2: rule__STXorExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1"


    // $ANTLR start "rule__STXorExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7237:1: rule__STXorExpression__Group_1__1__Impl : ( ( rule__STXorExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STXorExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7241:1: ( ( ( rule__STXorExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7242:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7242:1: ( ( rule__STXorExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7243:2: ( rule__STXorExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7244:2: ( rule__STXorExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7244:3: rule__STXorExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7253:1: rule__STXorExpression__Group_1_0__0 : rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 ;
    public final void rule__STXorExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7257:1: ( rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7258:2: rule__STXorExpression__Group_1_0__0__Impl rule__STXorExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_54);
            rule__STXorExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0"


    // $ANTLR start "rule__STXorExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7265:1: rule__STXorExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STXorExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7269:1: ( ( () ) )
            // InternalSTFunctionParser.g:7270:1: ( () )
            {
            // InternalSTFunctionParser.g:7270:1: ( () )
            // InternalSTFunctionParser.g:7271:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7272:2: ()
            // InternalSTFunctionParser.g:7272:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7280:1: rule__STXorExpression__Group_1_0__1 : rule__STXorExpression__Group_1_0__1__Impl ;
    public final void rule__STXorExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7284:1: ( rule__STXorExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7285:2: rule__STXorExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1"


    // $ANTLR start "rule__STXorExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7291:1: rule__STXorExpression__Group_1_0__1__Impl : ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STXorExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7295:1: ( ( ( rule__STXorExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7296:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7296:1: ( ( rule__STXorExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7297:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7298:2: ( rule__STXorExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7298:3: rule__STXorExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STXorExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group__0"
    // InternalSTFunctionParser.g:7307:1: rule__STAndExpression__Group__0 : rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 ;
    public final void rule__STAndExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7311:1: ( rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1 )
            // InternalSTFunctionParser.g:7312:2: rule__STAndExpression__Group__0__Impl rule__STAndExpression__Group__1
            {
            pushFollow(FOLLOW_56);
            rule__STAndExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0"


    // $ANTLR start "rule__STAndExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7319:1: rule__STAndExpression__Group__0__Impl : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7323:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTFunctionParser.g:7324:1: ( ruleSTEqualityExpression )
            {
            // InternalSTFunctionParser.g:7324:1: ( ruleSTEqualityExpression )
            // InternalSTFunctionParser.g:7325:2: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTEqualityExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group__1"
    // InternalSTFunctionParser.g:7334:1: rule__STAndExpression__Group__1 : rule__STAndExpression__Group__1__Impl ;
    public final void rule__STAndExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7338:1: ( rule__STAndExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7339:2: rule__STAndExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1"


    // $ANTLR start "rule__STAndExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7345:1: rule__STAndExpression__Group__1__Impl : ( ( rule__STAndExpression__Group_1__0 )* ) ;
    public final void rule__STAndExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7349:1: ( ( ( rule__STAndExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7350:1: ( ( rule__STAndExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7350:1: ( ( rule__STAndExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7351:2: ( rule__STAndExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7352:2: ( rule__STAndExpression__Group_1__0 )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==AND||LA76_0==Ampersand) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7352:3: rule__STAndExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_57);
            	    rule__STAndExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__0"
    // InternalSTFunctionParser.g:7361:1: rule__STAndExpression__Group_1__0 : rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 ;
    public final void rule__STAndExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7365:1: ( rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7366:2: rule__STAndExpression__Group_1__0__Impl rule__STAndExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STAndExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0"


    // $ANTLR start "rule__STAndExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7373:1: rule__STAndExpression__Group_1__0__Impl : ( ( rule__STAndExpression__Group_1_0__0 ) ) ;
    public final void rule__STAndExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7377:1: ( ( ( rule__STAndExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7378:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7378:1: ( ( rule__STAndExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7379:2: ( rule__STAndExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7380:2: ( rule__STAndExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7380:3: rule__STAndExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1__1"
    // InternalSTFunctionParser.g:7388:1: rule__STAndExpression__Group_1__1 : rule__STAndExpression__Group_1__1__Impl ;
    public final void rule__STAndExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7392:1: ( rule__STAndExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7393:2: rule__STAndExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1"


    // $ANTLR start "rule__STAndExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7399:1: rule__STAndExpression__Group_1__1__Impl : ( ( rule__STAndExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAndExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7403:1: ( ( ( rule__STAndExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7404:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7404:1: ( ( rule__STAndExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7405:2: ( rule__STAndExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7406:2: ( rule__STAndExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7406:3: rule__STAndExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7415:1: rule__STAndExpression__Group_1_0__0 : rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 ;
    public final void rule__STAndExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7419:1: ( rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7420:2: rule__STAndExpression__Group_1_0__0__Impl rule__STAndExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_56);
            rule__STAndExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0"


    // $ANTLR start "rule__STAndExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7427:1: rule__STAndExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAndExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7431:1: ( ( () ) )
            // InternalSTFunctionParser.g:7432:1: ( () )
            {
            // InternalSTFunctionParser.g:7432:1: ( () )
            // InternalSTFunctionParser.g:7433:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7434:2: ()
            // InternalSTFunctionParser.g:7434:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7442:1: rule__STAndExpression__Group_1_0__1 : rule__STAndExpression__Group_1_0__1__Impl ;
    public final void rule__STAndExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7446:1: ( rule__STAndExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7447:2: rule__STAndExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1"


    // $ANTLR start "rule__STAndExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7453:1: rule__STAndExpression__Group_1_0__1__Impl : ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAndExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7457:1: ( ( ( rule__STAndExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7458:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7458:1: ( ( rule__STAndExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7459:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7460:2: ( rule__STAndExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7460:3: rule__STAndExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAndExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__0"
    // InternalSTFunctionParser.g:7469:1: rule__STEqualityExpression__Group__0 : rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 ;
    public final void rule__STEqualityExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7473:1: ( rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1 )
            // InternalSTFunctionParser.g:7474:2: rule__STEqualityExpression__Group__0__Impl rule__STEqualityExpression__Group__1
            {
            pushFollow(FOLLOW_58);
            rule__STEqualityExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0"


    // $ANTLR start "rule__STEqualityExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7481:1: rule__STEqualityExpression__Group__0__Impl : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7485:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTFunctionParser.g:7486:1: ( ruleSTComparisonExpression )
            {
            // InternalSTFunctionParser.g:7486:1: ( ruleSTComparisonExpression )
            // InternalSTFunctionParser.g:7487:2: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTComparisonExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group__1"
    // InternalSTFunctionParser.g:7496:1: rule__STEqualityExpression__Group__1 : rule__STEqualityExpression__Group__1__Impl ;
    public final void rule__STEqualityExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7500:1: ( rule__STEqualityExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7501:2: rule__STEqualityExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1"


    // $ANTLR start "rule__STEqualityExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7507:1: rule__STEqualityExpression__Group__1__Impl : ( ( rule__STEqualityExpression__Group_1__0 )* ) ;
    public final void rule__STEqualityExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7511:1: ( ( ( rule__STEqualityExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7512:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7512:1: ( ( rule__STEqualityExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7513:2: ( rule__STEqualityExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7514:2: ( rule__STEqualityExpression__Group_1__0 )*
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( (LA77_0==LessThanSignGreaterThanSign||LA77_0==EqualsSign) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7514:3: rule__STEqualityExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_59);
            	    rule__STEqualityExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop77;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0"
    // InternalSTFunctionParser.g:7523:1: rule__STEqualityExpression__Group_1__0 : rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 ;
    public final void rule__STEqualityExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7527:1: ( rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7528:2: rule__STEqualityExpression__Group_1__0__Impl rule__STEqualityExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STEqualityExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7535:1: rule__STEqualityExpression__Group_1__0__Impl : ( ( rule__STEqualityExpression__Group_1_0__0 ) ) ;
    public final void rule__STEqualityExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7539:1: ( ( ( rule__STEqualityExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7540:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7540:1: ( ( rule__STEqualityExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7541:2: ( rule__STEqualityExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7542:2: ( rule__STEqualityExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7542:3: rule__STEqualityExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1"
    // InternalSTFunctionParser.g:7550:1: rule__STEqualityExpression__Group_1__1 : rule__STEqualityExpression__Group_1__1__Impl ;
    public final void rule__STEqualityExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7554:1: ( rule__STEqualityExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7555:2: rule__STEqualityExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7561:1: rule__STEqualityExpression__Group_1__1__Impl : ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7565:1: ( ( ( rule__STEqualityExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7566:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7566:1: ( ( rule__STEqualityExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7567:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7568:2: ( rule__STEqualityExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7568:3: rule__STEqualityExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7577:1: rule__STEqualityExpression__Group_1_0__0 : rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 ;
    public final void rule__STEqualityExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7581:1: ( rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7582:2: rule__STEqualityExpression__Group_1_0__0__Impl rule__STEqualityExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_58);
            rule__STEqualityExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7589:1: rule__STEqualityExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STEqualityExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7593:1: ( ( () ) )
            // InternalSTFunctionParser.g:7594:1: ( () )
            {
            // InternalSTFunctionParser.g:7594:1: ( () )
            // InternalSTFunctionParser.g:7595:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7596:2: ()
            // InternalSTFunctionParser.g:7596:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7604:1: rule__STEqualityExpression__Group_1_0__1 : rule__STEqualityExpression__Group_1_0__1__Impl ;
    public final void rule__STEqualityExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7608:1: ( rule__STEqualityExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7609:2: rule__STEqualityExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1"


    // $ANTLR start "rule__STEqualityExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7615:1: rule__STEqualityExpression__Group_1_0__1__Impl : ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STEqualityExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7619:1: ( ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7620:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7620:1: ( ( rule__STEqualityExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7621:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7622:2: ( rule__STEqualityExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7622:3: rule__STEqualityExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STEqualityExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__0"
    // InternalSTFunctionParser.g:7631:1: rule__STComparisonExpression__Group__0 : rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 ;
    public final void rule__STComparisonExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7635:1: ( rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1 )
            // InternalSTFunctionParser.g:7636:2: rule__STComparisonExpression__Group__0__Impl rule__STComparisonExpression__Group__1
            {
            pushFollow(FOLLOW_60);
            rule__STComparisonExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0"


    // $ANTLR start "rule__STComparisonExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7643:1: rule__STComparisonExpression__Group__0__Impl : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7647:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTFunctionParser.g:7648:1: ( ruleSTAddSubExpression )
            {
            // InternalSTFunctionParser.g:7648:1: ( ruleSTAddSubExpression )
            // InternalSTFunctionParser.g:7649:2: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTAddSubExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group__1"
    // InternalSTFunctionParser.g:7658:1: rule__STComparisonExpression__Group__1 : rule__STComparisonExpression__Group__1__Impl ;
    public final void rule__STComparisonExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7662:1: ( rule__STComparisonExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7663:2: rule__STComparisonExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1"


    // $ANTLR start "rule__STComparisonExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7669:1: rule__STComparisonExpression__Group__1__Impl : ( ( rule__STComparisonExpression__Group_1__0 )* ) ;
    public final void rule__STComparisonExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7673:1: ( ( ( rule__STComparisonExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7674:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7674:1: ( ( rule__STComparisonExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7675:2: ( rule__STComparisonExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7676:2: ( rule__STComparisonExpression__Group_1__0 )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==LessThanSignEqualsSign||LA78_0==GreaterThanSignEqualsSign||LA78_0==LessThanSign||LA78_0==GreaterThanSign) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7676:3: rule__STComparisonExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_61);
            	    rule__STComparisonExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0"
    // InternalSTFunctionParser.g:7685:1: rule__STComparisonExpression__Group_1__0 : rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 ;
    public final void rule__STComparisonExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7689:1: ( rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7690:2: rule__STComparisonExpression__Group_1__0__Impl rule__STComparisonExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STComparisonExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7697:1: rule__STComparisonExpression__Group_1__0__Impl : ( ( rule__STComparisonExpression__Group_1_0__0 ) ) ;
    public final void rule__STComparisonExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7701:1: ( ( ( rule__STComparisonExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7702:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7702:1: ( ( rule__STComparisonExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7703:2: ( rule__STComparisonExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7704:2: ( rule__STComparisonExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7704:3: rule__STComparisonExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1"
    // InternalSTFunctionParser.g:7712:1: rule__STComparisonExpression__Group_1__1 : rule__STComparisonExpression__Group_1__1__Impl ;
    public final void rule__STComparisonExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7716:1: ( rule__STComparisonExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7717:2: rule__STComparisonExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7723:1: rule__STComparisonExpression__Group_1__1__Impl : ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7727:1: ( ( ( rule__STComparisonExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7728:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7728:1: ( ( rule__STComparisonExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7729:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7730:2: ( rule__STComparisonExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7730:3: rule__STComparisonExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7739:1: rule__STComparisonExpression__Group_1_0__0 : rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 ;
    public final void rule__STComparisonExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7743:1: ( rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7744:2: rule__STComparisonExpression__Group_1_0__0__Impl rule__STComparisonExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_60);
            rule__STComparisonExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7751:1: rule__STComparisonExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STComparisonExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7755:1: ( ( () ) )
            // InternalSTFunctionParser.g:7756:1: ( () )
            {
            // InternalSTFunctionParser.g:7756:1: ( () )
            // InternalSTFunctionParser.g:7757:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7758:2: ()
            // InternalSTFunctionParser.g:7758:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7766:1: rule__STComparisonExpression__Group_1_0__1 : rule__STComparisonExpression__Group_1_0__1__Impl ;
    public final void rule__STComparisonExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7770:1: ( rule__STComparisonExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7771:2: rule__STComparisonExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1"


    // $ANTLR start "rule__STComparisonExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7777:1: rule__STComparisonExpression__Group_1_0__1__Impl : ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STComparisonExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7781:1: ( ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7782:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7782:1: ( ( rule__STComparisonExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7783:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7784:2: ( rule__STComparisonExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7784:3: rule__STComparisonExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STComparisonExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__0"
    // InternalSTFunctionParser.g:7793:1: rule__STAddSubExpression__Group__0 : rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 ;
    public final void rule__STAddSubExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7797:1: ( rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1 )
            // InternalSTFunctionParser.g:7798:2: rule__STAddSubExpression__Group__0__Impl rule__STAddSubExpression__Group__1
            {
            pushFollow(FOLLOW_62);
            rule__STAddSubExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0"


    // $ANTLR start "rule__STAddSubExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7805:1: rule__STAddSubExpression__Group__0__Impl : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7809:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTFunctionParser.g:7810:1: ( ruleSTMulDivModExpression )
            {
            // InternalSTFunctionParser.g:7810:1: ( ruleSTMulDivModExpression )
            // InternalSTFunctionParser.g:7811:2: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTMulDivModExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group__1"
    // InternalSTFunctionParser.g:7820:1: rule__STAddSubExpression__Group__1 : rule__STAddSubExpression__Group__1__Impl ;
    public final void rule__STAddSubExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7824:1: ( rule__STAddSubExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7825:2: rule__STAddSubExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1"


    // $ANTLR start "rule__STAddSubExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7831:1: rule__STAddSubExpression__Group__1__Impl : ( ( rule__STAddSubExpression__Group_1__0 )* ) ;
    public final void rule__STAddSubExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7835:1: ( ( ( rule__STAddSubExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7836:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7836:1: ( ( rule__STAddSubExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7837:2: ( rule__STAddSubExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:7838:2: ( rule__STAddSubExpression__Group_1__0 )*
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( (LA79_0==PlusSign||LA79_0==HyphenMinus) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // InternalSTFunctionParser.g:7838:3: rule__STAddSubExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_63);
            	    rule__STAddSubExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop79;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0"
    // InternalSTFunctionParser.g:7847:1: rule__STAddSubExpression__Group_1__0 : rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 ;
    public final void rule__STAddSubExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7851:1: ( rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1 )
            // InternalSTFunctionParser.g:7852:2: rule__STAddSubExpression__Group_1__0__Impl rule__STAddSubExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STAddSubExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:7859:1: rule__STAddSubExpression__Group_1__0__Impl : ( ( rule__STAddSubExpression__Group_1_0__0 ) ) ;
    public final void rule__STAddSubExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7863:1: ( ( ( rule__STAddSubExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:7864:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:7864:1: ( ( rule__STAddSubExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:7865:2: ( rule__STAddSubExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:7866:2: ( rule__STAddSubExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:7866:3: rule__STAddSubExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1"
    // InternalSTFunctionParser.g:7874:1: rule__STAddSubExpression__Group_1__1 : rule__STAddSubExpression__Group_1__1__Impl ;
    public final void rule__STAddSubExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7878:1: ( rule__STAddSubExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:7879:2: rule__STAddSubExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:7885:1: rule__STAddSubExpression__Group_1__1__Impl : ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7889:1: ( ( ( rule__STAddSubExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:7890:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:7890:1: ( ( rule__STAddSubExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:7891:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:7892:2: ( rule__STAddSubExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:7892:3: rule__STAddSubExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:7901:1: rule__STAddSubExpression__Group_1_0__0 : rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 ;
    public final void rule__STAddSubExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7905:1: ( rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:7906:2: rule__STAddSubExpression__Group_1_0__0__Impl rule__STAddSubExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_62);
            rule__STAddSubExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:7913:1: rule__STAddSubExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAddSubExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7917:1: ( ( () ) )
            // InternalSTFunctionParser.g:7918:1: ( () )
            {
            // InternalSTFunctionParser.g:7918:1: ( () )
            // InternalSTFunctionParser.g:7919:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:7920:2: ()
            // InternalSTFunctionParser.g:7920:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:7928:1: rule__STAddSubExpression__Group_1_0__1 : rule__STAddSubExpression__Group_1_0__1__Impl ;
    public final void rule__STAddSubExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7932:1: ( rule__STAddSubExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:7933:2: rule__STAddSubExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1"


    // $ANTLR start "rule__STAddSubExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:7939:1: rule__STAddSubExpression__Group_1_0__1__Impl : ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STAddSubExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7943:1: ( ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:7944:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:7944:1: ( ( rule__STAddSubExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:7945:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:7946:2: ( rule__STAddSubExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:7946:3: rule__STAddSubExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STAddSubExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__0"
    // InternalSTFunctionParser.g:7955:1: rule__STMulDivModExpression__Group__0 : rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 ;
    public final void rule__STMulDivModExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7959:1: ( rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1 )
            // InternalSTFunctionParser.g:7960:2: rule__STMulDivModExpression__Group__0__Impl rule__STMulDivModExpression__Group__1
            {
            pushFollow(FOLLOW_64);
            rule__STMulDivModExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0"


    // $ANTLR start "rule__STMulDivModExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:7967:1: rule__STMulDivModExpression__Group__0__Impl : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7971:1: ( ( ruleSTPowerExpression ) )
            // InternalSTFunctionParser.g:7972:1: ( ruleSTPowerExpression )
            {
            // InternalSTFunctionParser.g:7972:1: ( ruleSTPowerExpression )
            // InternalSTFunctionParser.g:7973:2: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTPowerExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group__1"
    // InternalSTFunctionParser.g:7982:1: rule__STMulDivModExpression__Group__1 : rule__STMulDivModExpression__Group__1__Impl ;
    public final void rule__STMulDivModExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7986:1: ( rule__STMulDivModExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:7987:2: rule__STMulDivModExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1"


    // $ANTLR start "rule__STMulDivModExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:7993:1: rule__STMulDivModExpression__Group__1__Impl : ( ( rule__STMulDivModExpression__Group_1__0 )* ) ;
    public final void rule__STMulDivModExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:7997:1: ( ( ( rule__STMulDivModExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:7998:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:7998:1: ( ( rule__STMulDivModExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:7999:2: ( rule__STMulDivModExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:8000:2: ( rule__STMulDivModExpression__Group_1__0 )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==MOD||LA80_0==Asterisk||LA80_0==Solidus) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8000:3: rule__STMulDivModExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_65);
            	    rule__STMulDivModExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0"
    // InternalSTFunctionParser.g:8009:1: rule__STMulDivModExpression__Group_1__0 : rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 ;
    public final void rule__STMulDivModExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8013:1: ( rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1 )
            // InternalSTFunctionParser.g:8014:2: rule__STMulDivModExpression__Group_1__0__Impl rule__STMulDivModExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STMulDivModExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:8021:1: rule__STMulDivModExpression__Group_1__0__Impl : ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8025:1: ( ( ( rule__STMulDivModExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:8026:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:8026:1: ( ( rule__STMulDivModExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:8027:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:8028:2: ( rule__STMulDivModExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:8028:3: rule__STMulDivModExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1"
    // InternalSTFunctionParser.g:8036:1: rule__STMulDivModExpression__Group_1__1 : rule__STMulDivModExpression__Group_1__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8040:1: ( rule__STMulDivModExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:8041:2: rule__STMulDivModExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:8047:1: rule__STMulDivModExpression__Group_1__1__Impl : ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8051:1: ( ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:8052:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:8052:1: ( ( rule__STMulDivModExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:8053:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:8054:2: ( rule__STMulDivModExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:8054:3: rule__STMulDivModExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:8063:1: rule__STMulDivModExpression__Group_1_0__0 : rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 ;
    public final void rule__STMulDivModExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8067:1: ( rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:8068:2: rule__STMulDivModExpression__Group_1_0__0__Impl rule__STMulDivModExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_64);
            rule__STMulDivModExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:8075:1: rule__STMulDivModExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STMulDivModExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8079:1: ( ( () ) )
            // InternalSTFunctionParser.g:8080:1: ( () )
            {
            // InternalSTFunctionParser.g:8080:1: ( () )
            // InternalSTFunctionParser.g:8081:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:8082:2: ()
            // InternalSTFunctionParser.g:8082:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:8090:1: rule__STMulDivModExpression__Group_1_0__1 : rule__STMulDivModExpression__Group_1_0__1__Impl ;
    public final void rule__STMulDivModExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8094:1: ( rule__STMulDivModExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:8095:2: rule__STMulDivModExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1"


    // $ANTLR start "rule__STMulDivModExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:8101:1: rule__STMulDivModExpression__Group_1_0__1__Impl : ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STMulDivModExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8105:1: ( ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:8106:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:8106:1: ( ( rule__STMulDivModExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:8107:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:8108:2: ( rule__STMulDivModExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:8108:3: rule__STMulDivModExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STMulDivModExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__0"
    // InternalSTFunctionParser.g:8117:1: rule__STPowerExpression__Group__0 : rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 ;
    public final void rule__STPowerExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8121:1: ( rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1 )
            // InternalSTFunctionParser.g:8122:2: rule__STPowerExpression__Group__0__Impl rule__STPowerExpression__Group__1
            {
            pushFollow(FOLLOW_66);
            rule__STPowerExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0"


    // $ANTLR start "rule__STPowerExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:8129:1: rule__STPowerExpression__Group__0__Impl : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8133:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:8134:1: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:8134:1: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:8135:2: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTUnaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group__1"
    // InternalSTFunctionParser.g:8144:1: rule__STPowerExpression__Group__1 : rule__STPowerExpression__Group__1__Impl ;
    public final void rule__STPowerExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8148:1: ( rule__STPowerExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:8149:2: rule__STPowerExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1"


    // $ANTLR start "rule__STPowerExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:8155:1: rule__STPowerExpression__Group__1__Impl : ( ( rule__STPowerExpression__Group_1__0 )* ) ;
    public final void rule__STPowerExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8159:1: ( ( ( rule__STPowerExpression__Group_1__0 )* ) )
            // InternalSTFunctionParser.g:8160:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            {
            // InternalSTFunctionParser.g:8160:1: ( ( rule__STPowerExpression__Group_1__0 )* )
            // InternalSTFunctionParser.g:8161:2: ( rule__STPowerExpression__Group_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }
            // InternalSTFunctionParser.g:8162:2: ( rule__STPowerExpression__Group_1__0 )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==AsteriskAsterisk) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8162:3: rule__STPowerExpression__Group_1__0
            	    {
            	    pushFollow(FOLLOW_67);
            	    rule__STPowerExpression__Group_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__0"
    // InternalSTFunctionParser.g:8171:1: rule__STPowerExpression__Group_1__0 : rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 ;
    public final void rule__STPowerExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8175:1: ( rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1 )
            // InternalSTFunctionParser.g:8176:2: rule__STPowerExpression__Group_1__0__Impl rule__STPowerExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STPowerExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0"


    // $ANTLR start "rule__STPowerExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:8183:1: rule__STPowerExpression__Group_1__0__Impl : ( ( rule__STPowerExpression__Group_1_0__0 ) ) ;
    public final void rule__STPowerExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8187:1: ( ( ( rule__STPowerExpression__Group_1_0__0 ) ) )
            // InternalSTFunctionParser.g:8188:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            {
            // InternalSTFunctionParser.g:8188:1: ( ( rule__STPowerExpression__Group_1_0__0 ) )
            // InternalSTFunctionParser.g:8189:2: ( rule__STPowerExpression__Group_1_0__0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }
            // InternalSTFunctionParser.g:8190:2: ( rule__STPowerExpression__Group_1_0__0 )
            // InternalSTFunctionParser.g:8190:3: rule__STPowerExpression__Group_1_0__0
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getGroup_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1__1"
    // InternalSTFunctionParser.g:8198:1: rule__STPowerExpression__Group_1__1 : rule__STPowerExpression__Group_1__1__Impl ;
    public final void rule__STPowerExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8202:1: ( rule__STPowerExpression__Group_1__1__Impl )
            // InternalSTFunctionParser.g:8203:2: rule__STPowerExpression__Group_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1"


    // $ANTLR start "rule__STPowerExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:8209:1: rule__STPowerExpression__Group_1__1__Impl : ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) ;
    public final void rule__STPowerExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8213:1: ( ( ( rule__STPowerExpression__RightAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:8214:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:8214:1: ( ( rule__STPowerExpression__RightAssignment_1_1 ) )
            // InternalSTFunctionParser.g:8215:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:8216:2: ( rule__STPowerExpression__RightAssignment_1_1 )
            // InternalSTFunctionParser.g:8216:3: rule__STPowerExpression__RightAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__RightAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:8225:1: rule__STPowerExpression__Group_1_0__0 : rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 ;
    public final void rule__STPowerExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8229:1: ( rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:8230:2: rule__STPowerExpression__Group_1_0__0__Impl rule__STPowerExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_66);
            rule__STPowerExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:8237:1: rule__STPowerExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STPowerExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8241:1: ( ( () ) )
            // InternalSTFunctionParser.g:8242:1: ( () )
            {
            // InternalSTFunctionParser.g:8242:1: ( () )
            // InternalSTFunctionParser.g:8243:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:8244:2: ()
            // InternalSTFunctionParser.g:8244:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getSTBinaryExpressionLeftAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:8252:1: rule__STPowerExpression__Group_1_0__1 : rule__STPowerExpression__Group_1_0__1__Impl ;
    public final void rule__STPowerExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8256:1: ( rule__STPowerExpression__Group_1_0__1__Impl )
            // InternalSTFunctionParser.g:8257:2: rule__STPowerExpression__Group_1_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1"


    // $ANTLR start "rule__STPowerExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:8263:1: rule__STPowerExpression__Group_1_0__1__Impl : ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) ;
    public final void rule__STPowerExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8267:1: ( ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) ) )
            // InternalSTFunctionParser.g:8268:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            {
            // InternalSTFunctionParser.g:8268:1: ( ( rule__STPowerExpression__OpAssignment_1_0_1 ) )
            // InternalSTFunctionParser.g:8269:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }
            // InternalSTFunctionParser.g:8270:2: ( rule__STPowerExpression__OpAssignment_1_0_1 )
            // InternalSTFunctionParser.g:8270:3: rule__STPowerExpression__OpAssignment_1_0_1
            {
            pushFollow(FOLLOW_2);
            rule__STPowerExpression__OpAssignment_1_0_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpAssignment_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0"
    // InternalSTFunctionParser.g:8279:1: rule__STUnaryExpression__Group_1__0 : rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 ;
    public final void rule__STUnaryExpression__Group_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8283:1: ( rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1 )
            // InternalSTFunctionParser.g:8284:2: rule__STUnaryExpression__Group_1__0__Impl rule__STUnaryExpression__Group_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STUnaryExpression__Group_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0"


    // $ANTLR start "rule__STUnaryExpression__Group_1__0__Impl"
    // InternalSTFunctionParser.g:8291:1: rule__STUnaryExpression__Group_1__0__Impl : ( () ) ;
    public final void rule__STUnaryExpression__Group_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8295:1: ( ( () ) )
            // InternalSTFunctionParser.g:8296:1: ( () )
            {
            // InternalSTFunctionParser.g:8296:1: ( () )
            // InternalSTFunctionParser.g:8297:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }
            // InternalSTFunctionParser.g:8298:2: ()
            // InternalSTFunctionParser.g:8298:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getSTUnaryExpressionAction_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__0__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1"
    // InternalSTFunctionParser.g:8306:1: rule__STUnaryExpression__Group_1__1 : rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 ;
    public final void rule__STUnaryExpression__Group_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8310:1: ( rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2 )
            // InternalSTFunctionParser.g:8311:2: rule__STUnaryExpression__Group_1__1__Impl rule__STUnaryExpression__Group_1__2
            {
            pushFollow(FOLLOW_21);
            rule__STUnaryExpression__Group_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1"


    // $ANTLR start "rule__STUnaryExpression__Group_1__1__Impl"
    // InternalSTFunctionParser.g:8318:1: rule__STUnaryExpression__Group_1__1__Impl : ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) ;
    public final void rule__STUnaryExpression__Group_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8322:1: ( ( ( rule__STUnaryExpression__OpAssignment_1_1 ) ) )
            // InternalSTFunctionParser.g:8323:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            {
            // InternalSTFunctionParser.g:8323:1: ( ( rule__STUnaryExpression__OpAssignment_1_1 ) )
            // InternalSTFunctionParser.g:8324:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }
            // InternalSTFunctionParser.g:8325:2: ( rule__STUnaryExpression__OpAssignment_1_1 )
            // InternalSTFunctionParser.g:8325:3: rule__STUnaryExpression__OpAssignment_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__OpAssignment_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpAssignment_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__1__Impl"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2"
    // InternalSTFunctionParser.g:8333:1: rule__STUnaryExpression__Group_1__2 : rule__STUnaryExpression__Group_1__2__Impl ;
    public final void rule__STUnaryExpression__Group_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8337:1: ( rule__STUnaryExpression__Group_1__2__Impl )
            // InternalSTFunctionParser.g:8338:2: rule__STUnaryExpression__Group_1__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__Group_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2"


    // $ANTLR start "rule__STUnaryExpression__Group_1__2__Impl"
    // InternalSTFunctionParser.g:8344:1: rule__STUnaryExpression__Group_1__2__Impl : ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) ;
    public final void rule__STUnaryExpression__Group_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8348:1: ( ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) ) )
            // InternalSTFunctionParser.g:8349:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            {
            // InternalSTFunctionParser.g:8349:1: ( ( rule__STUnaryExpression__ExpressionAssignment_1_2 ) )
            // InternalSTFunctionParser.g:8350:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }
            // InternalSTFunctionParser.g:8351:2: ( rule__STUnaryExpression__ExpressionAssignment_1_2 )
            // InternalSTFunctionParser.g:8351:3: rule__STUnaryExpression__ExpressionAssignment_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STUnaryExpression__ExpressionAssignment_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionAssignment_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__Group_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__0"
    // InternalSTFunctionParser.g:8360:1: rule__STAccessExpression__Group__0 : rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 ;
    public final void rule__STAccessExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8364:1: ( rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1 )
            // InternalSTFunctionParser.g:8365:2: rule__STAccessExpression__Group__0__Impl rule__STAccessExpression__Group__1
            {
            pushFollow(FOLLOW_68);
            rule__STAccessExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0"


    // $ANTLR start "rule__STAccessExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:8372:1: rule__STAccessExpression__Group__0__Impl : ( ruleSTPrimaryExpression ) ;
    public final void rule__STAccessExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8376:1: ( ( ruleSTPrimaryExpression ) )
            // InternalSTFunctionParser.g:8377:1: ( ruleSTPrimaryExpression )
            {
            // InternalSTFunctionParser.g:8377:1: ( ruleSTPrimaryExpression )
            // InternalSTFunctionParser.g:8378:2: ruleSTPrimaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPrimaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTPrimaryExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group__1"
    // InternalSTFunctionParser.g:8387:1: rule__STAccessExpression__Group__1 : rule__STAccessExpression__Group__1__Impl ;
    public final void rule__STAccessExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8391:1: ( rule__STAccessExpression__Group__1__Impl )
            // InternalSTFunctionParser.g:8392:2: rule__STAccessExpression__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1"


    // $ANTLR start "rule__STAccessExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:8398:1: rule__STAccessExpression__Group__1__Impl : ( ( rule__STAccessExpression__Alternatives_1 )* ) ;
    public final void rule__STAccessExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8402:1: ( ( ( rule__STAccessExpression__Alternatives_1 )* ) )
            // InternalSTFunctionParser.g:8403:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            {
            // InternalSTFunctionParser.g:8403:1: ( ( rule__STAccessExpression__Alternatives_1 )* )
            // InternalSTFunctionParser.g:8404:2: ( rule__STAccessExpression__Alternatives_1 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }
            // InternalSTFunctionParser.g:8405:2: ( rule__STAccessExpression__Alternatives_1 )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==FullStop||LA82_0==LeftSquareBracket) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8405:3: rule__STAccessExpression__Alternatives_1
            	    {
            	    pushFollow(FOLLOW_69);
            	    rule__STAccessExpression__Alternatives_1();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0"
    // InternalSTFunctionParser.g:8414:1: rule__STAccessExpression__Group_1_0__0 : rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 ;
    public final void rule__STAccessExpression__Group_1_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8418:1: ( rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1 )
            // InternalSTFunctionParser.g:8419:2: rule__STAccessExpression__Group_1_0__0__Impl rule__STAccessExpression__Group_1_0__1
            {
            pushFollow(FOLLOW_70);
            rule__STAccessExpression__Group_1_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__0__Impl"
    // InternalSTFunctionParser.g:8426:1: rule__STAccessExpression__Group_1_0__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8430:1: ( ( () ) )
            // InternalSTFunctionParser.g:8431:1: ( () )
            {
            // InternalSTFunctionParser.g:8431:1: ( () )
            // InternalSTFunctionParser.g:8432:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }
            // InternalSTFunctionParser.g:8433:2: ()
            // InternalSTFunctionParser.g:8433:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTMemberAccessExpressionReceiverAction_1_0_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1"
    // InternalSTFunctionParser.g:8441:1: rule__STAccessExpression__Group_1_0__1 : rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 ;
    public final void rule__STAccessExpression__Group_1_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8445:1: ( rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2 )
            // InternalSTFunctionParser.g:8446:2: rule__STAccessExpression__Group_1_0__1__Impl rule__STAccessExpression__Group_1_0__2
            {
            pushFollow(FOLLOW_71);
            rule__STAccessExpression__Group_1_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__1__Impl"
    // InternalSTFunctionParser.g:8453:1: rule__STAccessExpression__Group_1_0__1__Impl : ( FullStop ) ;
    public final void rule__STAccessExpression__Group_1_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8457:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:8458:1: ( FullStop )
            {
            // InternalSTFunctionParser.g:8458:1: ( FullStop )
            // InternalSTFunctionParser.g:8459:2: FullStop
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getFullStopKeyword_1_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2"
    // InternalSTFunctionParser.g:8468:1: rule__STAccessExpression__Group_1_0__2 : rule__STAccessExpression__Group_1_0__2__Impl ;
    public final void rule__STAccessExpression__Group_1_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8472:1: ( rule__STAccessExpression__Group_1_0__2__Impl )
            // InternalSTFunctionParser.g:8473:2: rule__STAccessExpression__Group_1_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_0__2__Impl"
    // InternalSTFunctionParser.g:8479:1: rule__STAccessExpression__Group_1_0__2__Impl : ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8483:1: ( ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) ) )
            // InternalSTFunctionParser.g:8484:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            {
            // InternalSTFunctionParser.g:8484:1: ( ( rule__STAccessExpression__MemberAssignment_1_0_2 ) )
            // InternalSTFunctionParser.g:8485:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }
            // InternalSTFunctionParser.g:8486:2: ( rule__STAccessExpression__MemberAssignment_1_0_2 )
            // InternalSTFunctionParser.g:8486:3: rule__STAccessExpression__MemberAssignment_1_0_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAssignment_1_0_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAssignment_1_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_0__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0"
    // InternalSTFunctionParser.g:8495:1: rule__STAccessExpression__Group_1_1__0 : rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 ;
    public final void rule__STAccessExpression__Group_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8499:1: ( rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1 )
            // InternalSTFunctionParser.g:8500:2: rule__STAccessExpression__Group_1_1__0__Impl rule__STAccessExpression__Group_1_1__1
            {
            pushFollow(FOLLOW_68);
            rule__STAccessExpression__Group_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__0__Impl"
    // InternalSTFunctionParser.g:8507:1: rule__STAccessExpression__Group_1_1__0__Impl : ( () ) ;
    public final void rule__STAccessExpression__Group_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8511:1: ( ( () ) )
            // InternalSTFunctionParser.g:8512:1: ( () )
            {
            // InternalSTFunctionParser.g:8512:1: ( () )
            // InternalSTFunctionParser.g:8513:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }
            // InternalSTFunctionParser.g:8514:2: ()
            // InternalSTFunctionParser.g:8514:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getSTArrayAccessExpressionReceiverAction_1_1_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1"
    // InternalSTFunctionParser.g:8522:1: rule__STAccessExpression__Group_1_1__1 : rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 ;
    public final void rule__STAccessExpression__Group_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8526:1: ( rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2 )
            // InternalSTFunctionParser.g:8527:2: rule__STAccessExpression__Group_1_1__1__Impl rule__STAccessExpression__Group_1_1__2
            {
            pushFollow(FOLLOW_21);
            rule__STAccessExpression__Group_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__1__Impl"
    // InternalSTFunctionParser.g:8534:1: rule__STAccessExpression__Group_1_1__1__Impl : ( LeftSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8538:1: ( ( LeftSquareBracket ) )
            // InternalSTFunctionParser.g:8539:1: ( LeftSquareBracket )
            {
            // InternalSTFunctionParser.g:8539:1: ( LeftSquareBracket )
            // InternalSTFunctionParser.g:8540:2: LeftSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }
            match(input,LeftSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getLeftSquareBracketKeyword_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__1__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2"
    // InternalSTFunctionParser.g:8549:1: rule__STAccessExpression__Group_1_1__2 : rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 ;
    public final void rule__STAccessExpression__Group_1_1__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8553:1: ( rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3 )
            // InternalSTFunctionParser.g:8554:2: rule__STAccessExpression__Group_1_1__2__Impl rule__STAccessExpression__Group_1_1__3
            {
            pushFollow(FOLLOW_22);
            rule__STAccessExpression__Group_1_1__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__2__Impl"
    // InternalSTFunctionParser.g:8561:1: rule__STAccessExpression__Group_1_1__2__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) ;
    public final void rule__STAccessExpression__Group_1_1__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8565:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) ) )
            // InternalSTFunctionParser.g:8566:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            {
            // InternalSTFunctionParser.g:8566:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_2 ) )
            // InternalSTFunctionParser.g:8567:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }
            // InternalSTFunctionParser.g:8568:2: ( rule__STAccessExpression__IndexAssignment_1_1_2 )
            // InternalSTFunctionParser.g:8568:3: rule__STAccessExpression__IndexAssignment_1_1_2
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__2__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3"
    // InternalSTFunctionParser.g:8576:1: rule__STAccessExpression__Group_1_1__3 : rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 ;
    public final void rule__STAccessExpression__Group_1_1__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8580:1: ( rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4 )
            // InternalSTFunctionParser.g:8581:2: rule__STAccessExpression__Group_1_1__3__Impl rule__STAccessExpression__Group_1_1__4
            {
            pushFollow(FOLLOW_22);
            rule__STAccessExpression__Group_1_1__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__3__Impl"
    // InternalSTFunctionParser.g:8588:1: rule__STAccessExpression__Group_1_1__3__Impl : ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) ;
    public final void rule__STAccessExpression__Group_1_1__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8592:1: ( ( ( rule__STAccessExpression__Group_1_1_3__0 )* ) )
            // InternalSTFunctionParser.g:8593:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            {
            // InternalSTFunctionParser.g:8593:1: ( ( rule__STAccessExpression__Group_1_1_3__0 )* )
            // InternalSTFunctionParser.g:8594:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }
            // InternalSTFunctionParser.g:8595:2: ( rule__STAccessExpression__Group_1_1_3__0 )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==Comma) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8595:3: rule__STAccessExpression__Group_1_1_3__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__STAccessExpression__Group_1_1_3__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getGroup_1_1_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__3__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4"
    // InternalSTFunctionParser.g:8603:1: rule__STAccessExpression__Group_1_1__4 : rule__STAccessExpression__Group_1_1__4__Impl ;
    public final void rule__STAccessExpression__Group_1_1__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8607:1: ( rule__STAccessExpression__Group_1_1__4__Impl )
            // InternalSTFunctionParser.g:8608:2: rule__STAccessExpression__Group_1_1__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4"


    // $ANTLR start "rule__STAccessExpression__Group_1_1__4__Impl"
    // InternalSTFunctionParser.g:8614:1: rule__STAccessExpression__Group_1_1__4__Impl : ( RightSquareBracket ) ;
    public final void rule__STAccessExpression__Group_1_1__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8618:1: ( ( RightSquareBracket ) )
            // InternalSTFunctionParser.g:8619:1: ( RightSquareBracket )
            {
            // InternalSTFunctionParser.g:8619:1: ( RightSquareBracket )
            // InternalSTFunctionParser.g:8620:2: RightSquareBracket
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }
            match(input,RightSquareBracket,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getRightSquareBracketKeyword_1_1_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1__4__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0"
    // InternalSTFunctionParser.g:8630:1: rule__STAccessExpression__Group_1_1_3__0 : rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 ;
    public final void rule__STAccessExpression__Group_1_1_3__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8634:1: ( rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1 )
            // InternalSTFunctionParser.g:8635:2: rule__STAccessExpression__Group_1_1_3__0__Impl rule__STAccessExpression__Group_1_1_3__1
            {
            pushFollow(FOLLOW_21);
            rule__STAccessExpression__Group_1_1_3__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__0__Impl"
    // InternalSTFunctionParser.g:8642:1: rule__STAccessExpression__Group_1_1_3__0__Impl : ( Comma ) ;
    public final void rule__STAccessExpression__Group_1_1_3__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8646:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:8647:1: ( Comma )
            {
            // InternalSTFunctionParser.g:8647:1: ( Comma )
            // InternalSTFunctionParser.g:8648:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getCommaKeyword_1_1_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__0__Impl"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1"
    // InternalSTFunctionParser.g:8657:1: rule__STAccessExpression__Group_1_1_3__1 : rule__STAccessExpression__Group_1_1_3__1__Impl ;
    public final void rule__STAccessExpression__Group_1_1_3__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8661:1: ( rule__STAccessExpression__Group_1_1_3__1__Impl )
            // InternalSTFunctionParser.g:8662:2: rule__STAccessExpression__Group_1_1_3__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__Group_1_1_3__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1"


    // $ANTLR start "rule__STAccessExpression__Group_1_1_3__1__Impl"
    // InternalSTFunctionParser.g:8668:1: rule__STAccessExpression__Group_1_1_3__1__Impl : ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) ;
    public final void rule__STAccessExpression__Group_1_1_3__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8672:1: ( ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) ) )
            // InternalSTFunctionParser.g:8673:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            {
            // InternalSTFunctionParser.g:8673:1: ( ( rule__STAccessExpression__IndexAssignment_1_1_3_1 ) )
            // InternalSTFunctionParser.g:8674:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }
            // InternalSTFunctionParser.g:8675:2: ( rule__STAccessExpression__IndexAssignment_1_1_3_1 )
            // InternalSTFunctionParser.g:8675:3: rule__STAccessExpression__IndexAssignment_1_1_3_1
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__IndexAssignment_1_1_3_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexAssignment_1_1_3_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__Group_1_1_3__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0"
    // InternalSTFunctionParser.g:8684:1: rule__STPrimaryExpression__Group_0__0 : rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 ;
    public final void rule__STPrimaryExpression__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8688:1: ( rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1 )
            // InternalSTFunctionParser.g:8689:2: rule__STPrimaryExpression__Group_0__0__Impl rule__STPrimaryExpression__Group_0__1
            {
            pushFollow(FOLLOW_21);
            rule__STPrimaryExpression__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__0__Impl"
    // InternalSTFunctionParser.g:8696:1: rule__STPrimaryExpression__Group_0__0__Impl : ( LeftParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8700:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:8701:1: ( LeftParenthesis )
            {
            // InternalSTFunctionParser.g:8701:1: ( LeftParenthesis )
            // InternalSTFunctionParser.g:8702:2: LeftParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getLeftParenthesisKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__0__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1"
    // InternalSTFunctionParser.g:8711:1: rule__STPrimaryExpression__Group_0__1 : rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 ;
    public final void rule__STPrimaryExpression__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8715:1: ( rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2 )
            // InternalSTFunctionParser.g:8716:2: rule__STPrimaryExpression__Group_0__1__Impl rule__STPrimaryExpression__Group_0__2
            {
            pushFollow(FOLLOW_28);
            rule__STPrimaryExpression__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__1__Impl"
    // InternalSTFunctionParser.g:8723:1: rule__STPrimaryExpression__Group_0__1__Impl : ( ruleSTExpression ) ;
    public final void rule__STPrimaryExpression__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8727:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:8728:1: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:8728:1: ( ruleSTExpression )
            // InternalSTFunctionParser.g:8729:2: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getSTExpressionParserRuleCall_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__1__Impl"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2"
    // InternalSTFunctionParser.g:8738:1: rule__STPrimaryExpression__Group_0__2 : rule__STPrimaryExpression__Group_0__2__Impl ;
    public final void rule__STPrimaryExpression__Group_0__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8742:1: ( rule__STPrimaryExpression__Group_0__2__Impl )
            // InternalSTFunctionParser.g:8743:2: rule__STPrimaryExpression__Group_0__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STPrimaryExpression__Group_0__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2"


    // $ANTLR start "rule__STPrimaryExpression__Group_0__2__Impl"
    // InternalSTFunctionParser.g:8749:1: rule__STPrimaryExpression__Group_0__2__Impl : ( RightParenthesis ) ;
    public final void rule__STPrimaryExpression__Group_0__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8753:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:8754:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:8754:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:8755:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPrimaryExpressionAccess().getRightParenthesisKeyword_0_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPrimaryExpression__Group_0__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__0"
    // InternalSTFunctionParser.g:8765:1: rule__STFeatureExpression__Group__0 : rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 ;
    public final void rule__STFeatureExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8769:1: ( rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1 )
            // InternalSTFunctionParser.g:8770:2: rule__STFeatureExpression__Group__0__Impl rule__STFeatureExpression__Group__1
            {
            pushFollow(FOLLOW_6);
            rule__STFeatureExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0"


    // $ANTLR start "rule__STFeatureExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:8777:1: rule__STFeatureExpression__Group__0__Impl : ( () ) ;
    public final void rule__STFeatureExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8781:1: ( ( () ) )
            // InternalSTFunctionParser.g:8782:1: ( () )
            {
            // InternalSTFunctionParser.g:8782:1: ( () )
            // InternalSTFunctionParser.g:8783:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }
            // InternalSTFunctionParser.g:8784:2: ()
            // InternalSTFunctionParser.g:8784:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getSTFeatureExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__1"
    // InternalSTFunctionParser.g:8792:1: rule__STFeatureExpression__Group__1 : rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 ;
    public final void rule__STFeatureExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8796:1: ( rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2 )
            // InternalSTFunctionParser.g:8797:2: rule__STFeatureExpression__Group__1__Impl rule__STFeatureExpression__Group__2
            {
            pushFollow(FOLLOW_27);
            rule__STFeatureExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1"


    // $ANTLR start "rule__STFeatureExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:8804:1: rule__STFeatureExpression__Group__1__Impl : ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) ;
    public final void rule__STFeatureExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8808:1: ( ( ( rule__STFeatureExpression__FeatureAssignment_1 ) ) )
            // InternalSTFunctionParser.g:8809:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:8809:1: ( ( rule__STFeatureExpression__FeatureAssignment_1 ) )
            // InternalSTFunctionParser.g:8810:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }
            // InternalSTFunctionParser.g:8811:2: ( rule__STFeatureExpression__FeatureAssignment_1 )
            // InternalSTFunctionParser.g:8811:3: rule__STFeatureExpression__FeatureAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__FeatureAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group__2"
    // InternalSTFunctionParser.g:8819:1: rule__STFeatureExpression__Group__2 : rule__STFeatureExpression__Group__2__Impl ;
    public final void rule__STFeatureExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8823:1: ( rule__STFeatureExpression__Group__2__Impl )
            // InternalSTFunctionParser.g:8824:2: rule__STFeatureExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2"


    // $ANTLR start "rule__STFeatureExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:8830:1: rule__STFeatureExpression__Group__2__Impl : ( ( rule__STFeatureExpression__Group_2__0 )? ) ;
    public final void rule__STFeatureExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8834:1: ( ( ( rule__STFeatureExpression__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:8835:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:8835:1: ( ( rule__STFeatureExpression__Group_2__0 )? )
            // InternalSTFunctionParser.g:8836:2: ( rule__STFeatureExpression__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:8837:2: ( rule__STFeatureExpression__Group_2__0 )?
            int alt84=2;
            alt84 = dfa84.predict(input);
            switch (alt84) {
                case 1 :
                    // InternalSTFunctionParser.g:8837:3: rule__STFeatureExpression__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0"
    // InternalSTFunctionParser.g:8846:1: rule__STFeatureExpression__Group_2__0 : rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 ;
    public final void rule__STFeatureExpression__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8850:1: ( rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1 )
            // InternalSTFunctionParser.g:8851:2: rule__STFeatureExpression__Group_2__0__Impl rule__STFeatureExpression__Group_2__1
            {
            pushFollow(FOLLOW_72);
            rule__STFeatureExpression__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2__0__Impl"
    // InternalSTFunctionParser.g:8858:1: rule__STFeatureExpression__Group_2__0__Impl : ( ( LeftParenthesis ) ) ;
    public final void rule__STFeatureExpression__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8862:1: ( ( ( LeftParenthesis ) ) )
            // InternalSTFunctionParser.g:8863:1: ( ( LeftParenthesis ) )
            {
            // InternalSTFunctionParser.g:8863:1: ( ( LeftParenthesis ) )
            // InternalSTFunctionParser.g:8864:2: ( LeftParenthesis )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getLeftParenthesisKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:8865:2: ( LeftParenthesis )
            // InternalSTFunctionParser.g:8865:3: LeftParenthesis
            {
            match(input,LeftParenthesis,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getLeftParenthesisKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1"
    // InternalSTFunctionParser.g:8873:1: rule__STFeatureExpression__Group_2__1 : rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 ;
    public final void rule__STFeatureExpression__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8877:1: ( rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2 )
            // InternalSTFunctionParser.g:8878:2: rule__STFeatureExpression__Group_2__1__Impl rule__STFeatureExpression__Group_2__2
            {
            pushFollow(FOLLOW_72);
            rule__STFeatureExpression__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2__1__Impl"
    // InternalSTFunctionParser.g:8885:1: rule__STFeatureExpression__Group_2__1__Impl : ( ( rule__STFeatureExpression__Group_2_1__0 )? ) ;
    public final void rule__STFeatureExpression__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8889:1: ( ( ( rule__STFeatureExpression__Group_2_1__0 )? ) )
            // InternalSTFunctionParser.g:8890:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            {
            // InternalSTFunctionParser.g:8890:1: ( ( rule__STFeatureExpression__Group_2_1__0 )? )
            // InternalSTFunctionParser.g:8891:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }
            // InternalSTFunctionParser.g:8892:2: ( rule__STFeatureExpression__Group_2_1__0 )?
            int alt85=2;
            int LA85_0 = input.LA(1);

            if ( ((LA85_0>=LDATE_AND_TIME && LA85_0<=DATE_AND_TIME)||(LA85_0>=LTIME_OF_DAY && LA85_0<=TIME_OF_DAY)||LA85_0==WSTRING||LA85_0==STRING||LA85_0==DWORD||(LA85_0>=FALSE && LA85_0<=ULINT)||(LA85_0>=USINT && LA85_0<=WCHAR)||(LA85_0>=BOOL && LA85_0<=BYTE)||(LA85_0>=CHAR && LA85_0<=DINT)||(LA85_0>=LINT && LA85_0<=SINT)||(LA85_0>=TIME && LA85_0<=WORD)||(LA85_0>=INT && LA85_0<=LDT)||(LA85_0>=NOT && LA85_0<=TOD)||LA85_0==DT||(LA85_0>=LD && LA85_0<=LT)||LA85_0==LeftParenthesis||LA85_0==PlusSign||LA85_0==HyphenMinus||LA85_0==D||LA85_0==T||(LA85_0>=RULE_NON_DECIMAL && LA85_0<=RULE_INT)||(LA85_0>=RULE_ID && LA85_0<=RULE_WSTRING)) ) {
                alt85=1;
            }
            switch (alt85) {
                case 1 :
                    // InternalSTFunctionParser.g:8892:3: rule__STFeatureExpression__Group_2_1__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STFeatureExpression__Group_2_1__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2"
    // InternalSTFunctionParser.g:8900:1: rule__STFeatureExpression__Group_2__2 : rule__STFeatureExpression__Group_2__2__Impl ;
    public final void rule__STFeatureExpression__Group_2__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8904:1: ( rule__STFeatureExpression__Group_2__2__Impl )
            // InternalSTFunctionParser.g:8905:2: rule__STFeatureExpression__Group_2__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2"


    // $ANTLR start "rule__STFeatureExpression__Group_2__2__Impl"
    // InternalSTFunctionParser.g:8911:1: rule__STFeatureExpression__Group_2__2__Impl : ( RightParenthesis ) ;
    public final void rule__STFeatureExpression__Group_2__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8915:1: ( ( RightParenthesis ) )
            // InternalSTFunctionParser.g:8916:1: ( RightParenthesis )
            {
            // InternalSTFunctionParser.g:8916:1: ( RightParenthesis )
            // InternalSTFunctionParser.g:8917:2: RightParenthesis
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }
            match(input,RightParenthesis,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getRightParenthesisKeyword_2_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2__2__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0"
    // InternalSTFunctionParser.g:8927:1: rule__STFeatureExpression__Group_2_1__0 : rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8931:1: ( rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1 )
            // InternalSTFunctionParser.g:8932:2: rule__STFeatureExpression__Group_2_1__0__Impl rule__STFeatureExpression__Group_2_1__1
            {
            pushFollow(FOLLOW_73);
            rule__STFeatureExpression__Group_2_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__0__Impl"
    // InternalSTFunctionParser.g:8939:1: rule__STFeatureExpression__Group_2_1__0__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8943:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) ) )
            // InternalSTFunctionParser.g:8944:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            {
            // InternalSTFunctionParser.g:8944:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_0 ) )
            // InternalSTFunctionParser.g:8945:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }
            // InternalSTFunctionParser.g:8946:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_0 )
            // InternalSTFunctionParser.g:8946:3: rule__STFeatureExpression__ParametersAssignment_2_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1"
    // InternalSTFunctionParser.g:8954:1: rule__STFeatureExpression__Group_2_1__1 : rule__STFeatureExpression__Group_2_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8958:1: ( rule__STFeatureExpression__Group_2_1__1__Impl )
            // InternalSTFunctionParser.g:8959:2: rule__STFeatureExpression__Group_2_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1__1__Impl"
    // InternalSTFunctionParser.g:8965:1: rule__STFeatureExpression__Group_2_1__1__Impl : ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) ;
    public final void rule__STFeatureExpression__Group_2_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8969:1: ( ( ( rule__STFeatureExpression__Group_2_1_1__0 )* ) )
            // InternalSTFunctionParser.g:8970:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            {
            // InternalSTFunctionParser.g:8970:1: ( ( rule__STFeatureExpression__Group_2_1_1__0 )* )
            // InternalSTFunctionParser.g:8971:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }
            // InternalSTFunctionParser.g:8972:2: ( rule__STFeatureExpression__Group_2_1_1__0 )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( (LA86_0==Comma) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // InternalSTFunctionParser.g:8972:3: rule__STFeatureExpression__Group_2_1_1__0
            	    {
            	    pushFollow(FOLLOW_23);
            	    rule__STFeatureExpression__Group_2_1_1__0();

            	    state._fsp--;
            	    if (state.failed) return ;

            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getGroup_2_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1__1__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0"
    // InternalSTFunctionParser.g:8981:1: rule__STFeatureExpression__Group_2_1_1__0 : rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 ;
    public final void rule__STFeatureExpression__Group_2_1_1__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8985:1: ( rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1 )
            // InternalSTFunctionParser.g:8986:2: rule__STFeatureExpression__Group_2_1_1__0__Impl rule__STFeatureExpression__Group_2_1_1__1
            {
            pushFollow(FOLLOW_21);
            rule__STFeatureExpression__Group_2_1_1__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__0__Impl"
    // InternalSTFunctionParser.g:8993:1: rule__STFeatureExpression__Group_2_1_1__0__Impl : ( Comma ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:8997:1: ( ( Comma ) )
            // InternalSTFunctionParser.g:8998:1: ( Comma )
            {
            // InternalSTFunctionParser.g:8998:1: ( Comma )
            // InternalSTFunctionParser.g:8999:2: Comma
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }
            match(input,Comma,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getCommaKeyword_2_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__0__Impl"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1"
    // InternalSTFunctionParser.g:9008:1: rule__STFeatureExpression__Group_2_1_1__1 : rule__STFeatureExpression__Group_2_1_1__1__Impl ;
    public final void rule__STFeatureExpression__Group_2_1_1__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9012:1: ( rule__STFeatureExpression__Group_2_1_1__1__Impl )
            // InternalSTFunctionParser.g:9013:2: rule__STFeatureExpression__Group_2_1_1__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__Group_2_1_1__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1"


    // $ANTLR start "rule__STFeatureExpression__Group_2_1_1__1__Impl"
    // InternalSTFunctionParser.g:9019:1: rule__STFeatureExpression__Group_2_1_1__1__Impl : ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) ;
    public final void rule__STFeatureExpression__Group_2_1_1__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9023:1: ( ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) ) )
            // InternalSTFunctionParser.g:9024:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            {
            // InternalSTFunctionParser.g:9024:1: ( ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 ) )
            // InternalSTFunctionParser.g:9025:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }
            // InternalSTFunctionParser.g:9026:2: ( rule__STFeatureExpression__ParametersAssignment_2_1_1_1 )
            // InternalSTFunctionParser.g:9026:3: rule__STFeatureExpression__ParametersAssignment_2_1_1_1
            {
            pushFollow(FOLLOW_2);
            rule__STFeatureExpression__ParametersAssignment_2_1_1_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersAssignment_2_1_1_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__Group_2_1_1__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0"
    // InternalSTFunctionParser.g:9035:1: rule__STMultibitPartialExpression__Group__0 : rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 ;
    public final void rule__STMultibitPartialExpression__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9039:1: ( rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1 )
            // InternalSTFunctionParser.g:9040:2: rule__STMultibitPartialExpression__Group__0__Impl rule__STMultibitPartialExpression__Group__1
            {
            pushFollow(FOLLOW_71);
            rule__STMultibitPartialExpression__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__0__Impl"
    // InternalSTFunctionParser.g:9047:1: rule__STMultibitPartialExpression__Group__0__Impl : ( () ) ;
    public final void rule__STMultibitPartialExpression__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9051:1: ( ( () ) )
            // InternalSTFunctionParser.g:9052:1: ( () )
            {
            // InternalSTFunctionParser.g:9052:1: ( () )
            // InternalSTFunctionParser.g:9053:2: ()
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }
            // InternalSTFunctionParser.g:9054:2: ()
            // InternalSTFunctionParser.g:9054:3: 
            {
            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSTMultibitPartialExpressionAction_0()); 
            }

            }


            }

        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__0__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1"
    // InternalSTFunctionParser.g:9062:1: rule__STMultibitPartialExpression__Group__1 : rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 ;
    public final void rule__STMultibitPartialExpression__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9066:1: ( rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2 )
            // InternalSTFunctionParser.g:9067:2: rule__STMultibitPartialExpression__Group__1__Impl rule__STMultibitPartialExpression__Group__2
            {
            pushFollow(FOLLOW_71);
            rule__STMultibitPartialExpression__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__1__Impl"
    // InternalSTFunctionParser.g:9074:1: rule__STMultibitPartialExpression__Group__1__Impl : ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) ;
    public final void rule__STMultibitPartialExpression__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9078:1: ( ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? ) )
            // InternalSTFunctionParser.g:9079:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            {
            // InternalSTFunctionParser.g:9079:1: ( ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )? )
            // InternalSTFunctionParser.g:9080:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }
            // InternalSTFunctionParser.g:9081:2: ( rule__STMultibitPartialExpression__SpecifierAssignment_1 )?
            int alt87=2;
            int LA87_0 = input.LA(1);

            if ( ((LA87_0>=B && LA87_0<=X)) ) {
                alt87=1;
            }
            switch (alt87) {
                case 1 :
                    // InternalSTFunctionParser.g:9081:3: rule__STMultibitPartialExpression__SpecifierAssignment_1
                    {
                    pushFollow(FOLLOW_2);
                    rule__STMultibitPartialExpression__SpecifierAssignment_1();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__1__Impl"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2"
    // InternalSTFunctionParser.g:9089:1: rule__STMultibitPartialExpression__Group__2 : rule__STMultibitPartialExpression__Group__2__Impl ;
    public final void rule__STMultibitPartialExpression__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9093:1: ( rule__STMultibitPartialExpression__Group__2__Impl )
            // InternalSTFunctionParser.g:9094:2: rule__STMultibitPartialExpression__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2"


    // $ANTLR start "rule__STMultibitPartialExpression__Group__2__Impl"
    // InternalSTFunctionParser.g:9100:1: rule__STMultibitPartialExpression__Group__2__Impl : ( ( rule__STMultibitPartialExpression__IndexAssignment_2 ) ) ;
    public final void rule__STMultibitPartialExpression__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9104:1: ( ( ( rule__STMultibitPartialExpression__IndexAssignment_2 ) ) )
            // InternalSTFunctionParser.g:9105:1: ( ( rule__STMultibitPartialExpression__IndexAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:9105:1: ( ( rule__STMultibitPartialExpression__IndexAssignment_2 ) )
            // InternalSTFunctionParser.g:9106:2: ( rule__STMultibitPartialExpression__IndexAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2()); 
            }
            // InternalSTFunctionParser.g:9107:2: ( rule__STMultibitPartialExpression__IndexAssignment_2 )
            // InternalSTFunctionParser.g:9107:3: rule__STMultibitPartialExpression__IndexAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STMultibitPartialExpression__IndexAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__Group__2__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__0"
    // InternalSTFunctionParser.g:9116:1: rule__STNumericLiteral__Group__0 : rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 ;
    public final void rule__STNumericLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9120:1: ( rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1 )
            // InternalSTFunctionParser.g:9121:2: rule__STNumericLiteral__Group__0__Impl rule__STNumericLiteral__Group__1
            {
            pushFollow(FOLLOW_74);
            rule__STNumericLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0"


    // $ANTLR start "rule__STNumericLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:9128:1: rule__STNumericLiteral__Group__0__Impl : ( ( rule__STNumericLiteral__Group_0__0 )? ) ;
    public final void rule__STNumericLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9132:1: ( ( ( rule__STNumericLiteral__Group_0__0 )? ) )
            // InternalSTFunctionParser.g:9133:1: ( ( rule__STNumericLiteral__Group_0__0 )? )
            {
            // InternalSTFunctionParser.g:9133:1: ( ( rule__STNumericLiteral__Group_0__0 )? )
            // InternalSTFunctionParser.g:9134:2: ( rule__STNumericLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
            }
            // InternalSTFunctionParser.g:9135:2: ( rule__STNumericLiteral__Group_0__0 )?
            int alt88=2;
            int LA88_0 = input.LA(1);

            if ( (LA88_0==DWORD||LA88_0==LREAL||(LA88_0>=LWORD && LA88_0<=ULINT)||LA88_0==USINT||(LA88_0>=BOOL && LA88_0<=BYTE)||LA88_0==DINT||LA88_0==LINT||(LA88_0>=REAL && LA88_0<=SINT)||(LA88_0>=UINT && LA88_0<=WORD)||LA88_0==INT) ) {
                alt88=1;
            }
            switch (alt88) {
                case 1 :
                    // InternalSTFunctionParser.g:9135:3: rule__STNumericLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STNumericLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group__1"
    // InternalSTFunctionParser.g:9143:1: rule__STNumericLiteral__Group__1 : rule__STNumericLiteral__Group__1__Impl ;
    public final void rule__STNumericLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9147:1: ( rule__STNumericLiteral__Group__1__Impl )
            // InternalSTFunctionParser.g:9148:2: rule__STNumericLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1"


    // $ANTLR start "rule__STNumericLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:9154:1: rule__STNumericLiteral__Group__1__Impl : ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STNumericLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9158:1: ( ( ( rule__STNumericLiteral__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:9159:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:9159:1: ( ( rule__STNumericLiteral__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:9160:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:9161:2: ( rule__STNumericLiteral__ValueAssignment_1 )
            // InternalSTFunctionParser.g:9161:3: rule__STNumericLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group__1__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0"
    // InternalSTFunctionParser.g:9170:1: rule__STNumericLiteral__Group_0__0 : rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 ;
    public final void rule__STNumericLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9174:1: ( rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1 )
            // InternalSTFunctionParser.g:9175:2: rule__STNumericLiteral__Group_0__0__Impl rule__STNumericLiteral__Group_0__1
            {
            pushFollow(FOLLOW_75);
            rule__STNumericLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0"


    // $ANTLR start "rule__STNumericLiteral__Group_0__0__Impl"
    // InternalSTFunctionParser.g:9182:1: rule__STNumericLiteral__Group_0__0__Impl : ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STNumericLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9186:1: ( ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) ) )
            // InternalSTFunctionParser.g:9187:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            {
            // InternalSTFunctionParser.g:9187:1: ( ( rule__STNumericLiteral__TypeAssignment_0_0 ) )
            // InternalSTFunctionParser.g:9188:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTFunctionParser.g:9189:2: ( rule__STNumericLiteral__TypeAssignment_0_0 )
            // InternalSTFunctionParser.g:9189:3: rule__STNumericLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1"
    // InternalSTFunctionParser.g:9197:1: rule__STNumericLiteral__Group_0__1 : rule__STNumericLiteral__Group_0__1__Impl ;
    public final void rule__STNumericLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9201:1: ( rule__STNumericLiteral__Group_0__1__Impl )
            // InternalSTFunctionParser.g:9202:2: rule__STNumericLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1"


    // $ANTLR start "rule__STNumericLiteral__Group_0__1__Impl"
    // InternalSTFunctionParser.g:9208:1: rule__STNumericLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STNumericLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9212:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:9213:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:9213:1: ( NumberSign )
            // InternalSTFunctionParser.g:9214:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__0"
    // InternalSTFunctionParser.g:9224:1: rule__STDateLiteral__Group__0 : rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 ;
    public final void rule__STDateLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9228:1: ( rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1 )
            // InternalSTFunctionParser.g:9229:2: rule__STDateLiteral__Group__0__Impl rule__STDateLiteral__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__STDateLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0"


    // $ANTLR start "rule__STDateLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:9236:1: rule__STDateLiteral__Group__0__Impl : ( ( rule__STDateLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9240:1: ( ( ( rule__STDateLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:9241:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:9241:1: ( ( rule__STDateLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:9242:2: ( rule__STDateLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:9243:2: ( rule__STDateLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:9243:3: rule__STDateLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__1"
    // InternalSTFunctionParser.g:9251:1: rule__STDateLiteral__Group__1 : rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 ;
    public final void rule__STDateLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9255:1: ( rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2 )
            // InternalSTFunctionParser.g:9256:2: rule__STDateLiteral__Group__1__Impl rule__STDateLiteral__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__STDateLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1"


    // $ANTLR start "rule__STDateLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:9263:1: rule__STDateLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9267:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:9268:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:9268:1: ( NumberSign )
            // InternalSTFunctionParser.g:9269:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateLiteral__Group__2"
    // InternalSTFunctionParser.g:9278:1: rule__STDateLiteral__Group__2 : rule__STDateLiteral__Group__2__Impl ;
    public final void rule__STDateLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9282:1: ( rule__STDateLiteral__Group__2__Impl )
            // InternalSTFunctionParser.g:9283:2: rule__STDateLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2"


    // $ANTLR start "rule__STDateLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:9289:1: rule__STDateLiteral__Group__2__Impl : ( ( rule__STDateLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STDateLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9293:1: ( ( ( rule__STDateLiteral__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:9294:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:9294:1: ( ( rule__STDateLiteral__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:9295:2: ( rule__STDateLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:9296:2: ( rule__STDateLiteral__ValueAssignment_2 )
            // InternalSTFunctionParser.g:9296:3: rule__STDateLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__0"
    // InternalSTFunctionParser.g:9305:1: rule__STTimeLiteral__Group__0 : rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 ;
    public final void rule__STTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9309:1: ( rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1 )
            // InternalSTFunctionParser.g:9310:2: rule__STTimeLiteral__Group__0__Impl rule__STTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__STTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0"


    // $ANTLR start "rule__STTimeLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:9317:1: rule__STTimeLiteral__Group__0__Impl : ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9321:1: ( ( ( rule__STTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:9322:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:9322:1: ( ( rule__STTimeLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:9323:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:9324:2: ( rule__STTimeLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:9324:3: rule__STTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__1"
    // InternalSTFunctionParser.g:9332:1: rule__STTimeLiteral__Group__1 : rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 ;
    public final void rule__STTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9336:1: ( rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2 )
            // InternalSTFunctionParser.g:9337:2: rule__STTimeLiteral__Group__1__Impl rule__STTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_77);
            rule__STTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1"


    // $ANTLR start "rule__STTimeLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:9344:1: rule__STTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9348:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:9349:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:9349:1: ( NumberSign )
            // InternalSTFunctionParser.g:9350:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeLiteral__Group__2"
    // InternalSTFunctionParser.g:9359:1: rule__STTimeLiteral__Group__2 : rule__STTimeLiteral__Group__2__Impl ;
    public final void rule__STTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9363:1: ( rule__STTimeLiteral__Group__2__Impl )
            // InternalSTFunctionParser.g:9364:2: rule__STTimeLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2"


    // $ANTLR start "rule__STTimeLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:9370:1: rule__STTimeLiteral__Group__2__Impl : ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9374:1: ( ( ( rule__STTimeLiteral__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:9375:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:9375:1: ( ( rule__STTimeLiteral__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:9376:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:9377:2: ( rule__STTimeLiteral__ValueAssignment_2 )
            // InternalSTFunctionParser.g:9377:3: rule__STTimeLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0"
    // InternalSTFunctionParser.g:9386:1: rule__STTimeOfDayLiteral__Group__0 : rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 ;
    public final void rule__STTimeOfDayLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9390:1: ( rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1 )
            // InternalSTFunctionParser.g:9391:2: rule__STTimeOfDayLiteral__Group__0__Impl rule__STTimeOfDayLiteral__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__STTimeOfDayLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:9398:1: rule__STTimeOfDayLiteral__Group__0__Impl : ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9402:1: ( ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:9403:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:9403:1: ( ( rule__STTimeOfDayLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:9404:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:9405:2: ( rule__STTimeOfDayLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:9405:3: rule__STTimeOfDayLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__0__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1"
    // InternalSTFunctionParser.g:9413:1: rule__STTimeOfDayLiteral__Group__1 : rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 ;
    public final void rule__STTimeOfDayLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9417:1: ( rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2 )
            // InternalSTFunctionParser.g:9418:2: rule__STTimeOfDayLiteral__Group__1__Impl rule__STTimeOfDayLiteral__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__STTimeOfDayLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:9425:1: rule__STTimeOfDayLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STTimeOfDayLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9429:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:9430:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:9430:1: ( NumberSign )
            // InternalSTFunctionParser.g:9431:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__1__Impl"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2"
    // InternalSTFunctionParser.g:9440:1: rule__STTimeOfDayLiteral__Group__2 : rule__STTimeOfDayLiteral__Group__2__Impl ;
    public final void rule__STTimeOfDayLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9444:1: ( rule__STTimeOfDayLiteral__Group__2__Impl )
            // InternalSTFunctionParser.g:9445:2: rule__STTimeOfDayLiteral__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2"


    // $ANTLR start "rule__STTimeOfDayLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:9451:1: rule__STTimeOfDayLiteral__Group__2__Impl : ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) ;
    public final void rule__STTimeOfDayLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9455:1: ( ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:9456:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:9456:1: ( ( rule__STTimeOfDayLiteral__ValueAssignment_2 ) )
            // InternalSTFunctionParser.g:9457:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:9458:2: ( rule__STTimeOfDayLiteral__ValueAssignment_2 )
            // InternalSTFunctionParser.g:9458:3: rule__STTimeOfDayLiteral__ValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STTimeOfDayLiteral__ValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__Group__2__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0"
    // InternalSTFunctionParser.g:9467:1: rule__STDateAndTimeLiteral__Group__0 : rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 ;
    public final void rule__STDateAndTimeLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9471:1: ( rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1 )
            // InternalSTFunctionParser.g:9472:2: rule__STDateAndTimeLiteral__Group__0__Impl rule__STDateAndTimeLiteral__Group__1
            {
            pushFollow(FOLLOW_75);
            rule__STDateAndTimeLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:9479:1: rule__STDateAndTimeLiteral__Group__0__Impl : ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9483:1: ( ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) ) )
            // InternalSTFunctionParser.g:9484:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            {
            // InternalSTFunctionParser.g:9484:1: ( ( rule__STDateAndTimeLiteral__TypeAssignment_0 ) )
            // InternalSTFunctionParser.g:9485:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }
            // InternalSTFunctionParser.g:9486:2: ( rule__STDateAndTimeLiteral__TypeAssignment_0 )
            // InternalSTFunctionParser.g:9486:3: rule__STDateAndTimeLiteral__TypeAssignment_0
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__TypeAssignment_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeAssignment_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__0__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1"
    // InternalSTFunctionParser.g:9494:1: rule__STDateAndTimeLiteral__Group__1 : rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 ;
    public final void rule__STDateAndTimeLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9498:1: ( rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2 )
            // InternalSTFunctionParser.g:9499:2: rule__STDateAndTimeLiteral__Group__1__Impl rule__STDateAndTimeLiteral__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__STDateAndTimeLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:9506:1: rule__STDateAndTimeLiteral__Group__1__Impl : ( NumberSign ) ;
    public final void rule__STDateAndTimeLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9510:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:9511:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:9511:1: ( NumberSign )
            // InternalSTFunctionParser.g:9512:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getNumberSignKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__1__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2"
    // InternalSTFunctionParser.g:9521:1: rule__STDateAndTimeLiteral__Group__2 : rule__STDateAndTimeLiteral__Group__2__Impl rule__STDateAndTimeLiteral__Group__3 ;
    public final void rule__STDateAndTimeLiteral__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9525:1: ( rule__STDateAndTimeLiteral__Group__2__Impl rule__STDateAndTimeLiteral__Group__3 )
            // InternalSTFunctionParser.g:9526:2: rule__STDateAndTimeLiteral__Group__2__Impl rule__STDateAndTimeLiteral__Group__3
            {
            pushFollow(FOLLOW_78);
            rule__STDateAndTimeLiteral__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__2__Impl"
    // InternalSTFunctionParser.g:9533:1: rule__STDateAndTimeLiteral__Group__2__Impl : ( ( rule__STDateAndTimeLiteral__DateValueAssignment_2 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9537:1: ( ( ( rule__STDateAndTimeLiteral__DateValueAssignment_2 ) ) )
            // InternalSTFunctionParser.g:9538:1: ( ( rule__STDateAndTimeLiteral__DateValueAssignment_2 ) )
            {
            // InternalSTFunctionParser.g:9538:1: ( ( rule__STDateAndTimeLiteral__DateValueAssignment_2 ) )
            // InternalSTFunctionParser.g:9539:2: ( rule__STDateAndTimeLiteral__DateValueAssignment_2 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getDateValueAssignment_2()); 
            }
            // InternalSTFunctionParser.g:9540:2: ( rule__STDateAndTimeLiteral__DateValueAssignment_2 )
            // InternalSTFunctionParser.g:9540:3: rule__STDateAndTimeLiteral__DateValueAssignment_2
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__DateValueAssignment_2();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getDateValueAssignment_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__2__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__3"
    // InternalSTFunctionParser.g:9548:1: rule__STDateAndTimeLiteral__Group__3 : rule__STDateAndTimeLiteral__Group__3__Impl rule__STDateAndTimeLiteral__Group__4 ;
    public final void rule__STDateAndTimeLiteral__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9552:1: ( rule__STDateAndTimeLiteral__Group__3__Impl rule__STDateAndTimeLiteral__Group__4 )
            // InternalSTFunctionParser.g:9553:2: rule__STDateAndTimeLiteral__Group__3__Impl rule__STDateAndTimeLiteral__Group__4
            {
            pushFollow(FOLLOW_76);
            rule__STDateAndTimeLiteral__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__3"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__3__Impl"
    // InternalSTFunctionParser.g:9560:1: rule__STDateAndTimeLiteral__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__STDateAndTimeLiteral__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9564:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:9565:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:9565:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:9566:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__3__Impl"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__4"
    // InternalSTFunctionParser.g:9575:1: rule__STDateAndTimeLiteral__Group__4 : rule__STDateAndTimeLiteral__Group__4__Impl ;
    public final void rule__STDateAndTimeLiteral__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9579:1: ( rule__STDateAndTimeLiteral__Group__4__Impl )
            // InternalSTFunctionParser.g:9580:2: rule__STDateAndTimeLiteral__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__4"


    // $ANTLR start "rule__STDateAndTimeLiteral__Group__4__Impl"
    // InternalSTFunctionParser.g:9586:1: rule__STDateAndTimeLiteral__Group__4__Impl : ( ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4 ) ) ;
    public final void rule__STDateAndTimeLiteral__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9590:1: ( ( ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4 ) ) )
            // InternalSTFunctionParser.g:9591:1: ( ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4 ) )
            {
            // InternalSTFunctionParser.g:9591:1: ( ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4 ) )
            // InternalSTFunctionParser.g:9592:2: ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTimeOfDayValueAssignment_4()); 
            }
            // InternalSTFunctionParser.g:9593:2: ( rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4 )
            // InternalSTFunctionParser.g:9593:3: rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4
            {
            pushFollow(FOLLOW_2);
            rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTimeOfDayValueAssignment_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__Group__4__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__0"
    // InternalSTFunctionParser.g:9602:1: rule__STStringLiteral__Group__0 : rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 ;
    public final void rule__STStringLiteral__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9606:1: ( rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1 )
            // InternalSTFunctionParser.g:9607:2: rule__STStringLiteral__Group__0__Impl rule__STStringLiteral__Group__1
            {
            pushFollow(FOLLOW_79);
            rule__STStringLiteral__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0"


    // $ANTLR start "rule__STStringLiteral__Group__0__Impl"
    // InternalSTFunctionParser.g:9614:1: rule__STStringLiteral__Group__0__Impl : ( ( rule__STStringLiteral__Group_0__0 )? ) ;
    public final void rule__STStringLiteral__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9618:1: ( ( ( rule__STStringLiteral__Group_0__0 )? ) )
            // InternalSTFunctionParser.g:9619:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            {
            // InternalSTFunctionParser.g:9619:1: ( ( rule__STStringLiteral__Group_0__0 )? )
            // InternalSTFunctionParser.g:9620:2: ( rule__STStringLiteral__Group_0__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }
            // InternalSTFunctionParser.g:9621:2: ( rule__STStringLiteral__Group_0__0 )?
            int alt89=2;
            int LA89_0 = input.LA(1);

            if ( (LA89_0==WSTRING||LA89_0==STRING||LA89_0==WCHAR||LA89_0==CHAR) ) {
                alt89=1;
            }
            switch (alt89) {
                case 1 :
                    // InternalSTFunctionParser.g:9621:3: rule__STStringLiteral__Group_0__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__STStringLiteral__Group_0__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getGroup_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group__1"
    // InternalSTFunctionParser.g:9629:1: rule__STStringLiteral__Group__1 : rule__STStringLiteral__Group__1__Impl ;
    public final void rule__STStringLiteral__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9633:1: ( rule__STStringLiteral__Group__1__Impl )
            // InternalSTFunctionParser.g:9634:2: rule__STStringLiteral__Group__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1"


    // $ANTLR start "rule__STStringLiteral__Group__1__Impl"
    // InternalSTFunctionParser.g:9640:1: rule__STStringLiteral__Group__1__Impl : ( ( rule__STStringLiteral__ValueAssignment_1 ) ) ;
    public final void rule__STStringLiteral__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9644:1: ( ( ( rule__STStringLiteral__ValueAssignment_1 ) ) )
            // InternalSTFunctionParser.g:9645:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            {
            // InternalSTFunctionParser.g:9645:1: ( ( rule__STStringLiteral__ValueAssignment_1 ) )
            // InternalSTFunctionParser.g:9646:2: ( rule__STStringLiteral__ValueAssignment_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }
            // InternalSTFunctionParser.g:9647:2: ( rule__STStringLiteral__ValueAssignment_1 )
            // InternalSTFunctionParser.g:9647:3: rule__STStringLiteral__ValueAssignment_1
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAssignment_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAssignment_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group__1__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__0"
    // InternalSTFunctionParser.g:9656:1: rule__STStringLiteral__Group_0__0 : rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 ;
    public final void rule__STStringLiteral__Group_0__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9660:1: ( rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1 )
            // InternalSTFunctionParser.g:9661:2: rule__STStringLiteral__Group_0__0__Impl rule__STStringLiteral__Group_0__1
            {
            pushFollow(FOLLOW_75);
            rule__STStringLiteral__Group_0__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0"


    // $ANTLR start "rule__STStringLiteral__Group_0__0__Impl"
    // InternalSTFunctionParser.g:9668:1: rule__STStringLiteral__Group_0__0__Impl : ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) ;
    public final void rule__STStringLiteral__Group_0__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9672:1: ( ( ( rule__STStringLiteral__TypeAssignment_0_0 ) ) )
            // InternalSTFunctionParser.g:9673:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            {
            // InternalSTFunctionParser.g:9673:1: ( ( rule__STStringLiteral__TypeAssignment_0_0 ) )
            // InternalSTFunctionParser.g:9674:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }
            // InternalSTFunctionParser.g:9675:2: ( rule__STStringLiteral__TypeAssignment_0_0 )
            // InternalSTFunctionParser.g:9675:3: rule__STStringLiteral__TypeAssignment_0_0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__TypeAssignment_0_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeAssignment_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__0__Impl"


    // $ANTLR start "rule__STStringLiteral__Group_0__1"
    // InternalSTFunctionParser.g:9683:1: rule__STStringLiteral__Group_0__1 : rule__STStringLiteral__Group_0__1__Impl ;
    public final void rule__STStringLiteral__Group_0__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9687:1: ( rule__STStringLiteral__Group_0__1__Impl )
            // InternalSTFunctionParser.g:9688:2: rule__STStringLiteral__Group_0__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__Group_0__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1"


    // $ANTLR start "rule__STStringLiteral__Group_0__1__Impl"
    // InternalSTFunctionParser.g:9694:1: rule__STStringLiteral__Group_0__1__Impl : ( NumberSign ) ;
    public final void rule__STStringLiteral__Group_0__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9698:1: ( ( NumberSign ) )
            // InternalSTFunctionParser.g:9699:1: ( NumberSign )
            {
            // InternalSTFunctionParser.g:9699:1: ( NumberSign )
            // InternalSTFunctionParser.g:9700:2: NumberSign
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }
            match(input,NumberSign,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getNumberSignKeyword_0_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__Group_0__1__Impl"


    // $ANTLR start "rule__Number__Group__0"
    // InternalSTFunctionParser.g:9710:1: rule__Number__Group__0 : rule__Number__Group__0__Impl rule__Number__Group__1 ;
    public final void rule__Number__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9714:1: ( rule__Number__Group__0__Impl rule__Number__Group__1 )
            // InternalSTFunctionParser.g:9715:2: rule__Number__Group__0__Impl rule__Number__Group__1
            {
            pushFollow(FOLLOW_77);
            rule__Number__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0"


    // $ANTLR start "rule__Number__Group__0__Impl"
    // InternalSTFunctionParser.g:9722:1: rule__Number__Group__0__Impl : ( ( rule__Number__Alternatives_0 )? ) ;
    public final void rule__Number__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9726:1: ( ( ( rule__Number__Alternatives_0 )? ) )
            // InternalSTFunctionParser.g:9727:1: ( ( rule__Number__Alternatives_0 )? )
            {
            // InternalSTFunctionParser.g:9727:1: ( ( rule__Number__Alternatives_0 )? )
            // InternalSTFunctionParser.g:9728:2: ( rule__Number__Alternatives_0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }
            // InternalSTFunctionParser.g:9729:2: ( rule__Number__Alternatives_0 )?
            int alt90=2;
            int LA90_0 = input.LA(1);

            if ( (LA90_0==PlusSign||LA90_0==HyphenMinus) ) {
                alt90=1;
            }
            switch (alt90) {
                case 1 :
                    // InternalSTFunctionParser.g:9729:3: rule__Number__Alternatives_0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Alternatives_0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__0__Impl"


    // $ANTLR start "rule__Number__Group__1"
    // InternalSTFunctionParser.g:9737:1: rule__Number__Group__1 : rule__Number__Group__1__Impl rule__Number__Group__2 ;
    public final void rule__Number__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9741:1: ( rule__Number__Group__1__Impl rule__Number__Group__2 )
            // InternalSTFunctionParser.g:9742:2: rule__Number__Group__1__Impl rule__Number__Group__2
            {
            pushFollow(FOLLOW_70);
            rule__Number__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1"


    // $ANTLR start "rule__Number__Group__1__Impl"
    // InternalSTFunctionParser.g:9749:1: rule__Number__Group__1__Impl : ( RULE_INT ) ;
    public final void rule__Number__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9753:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9754:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9754:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9755:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getINTTerminalRuleCall_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__1__Impl"


    // $ANTLR start "rule__Number__Group__2"
    // InternalSTFunctionParser.g:9764:1: rule__Number__Group__2 : rule__Number__Group__2__Impl ;
    public final void rule__Number__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9768:1: ( rule__Number__Group__2__Impl )
            // InternalSTFunctionParser.g:9769:2: rule__Number__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2"


    // $ANTLR start "rule__Number__Group__2__Impl"
    // InternalSTFunctionParser.g:9775:1: rule__Number__Group__2__Impl : ( ( rule__Number__Group_2__0 )? ) ;
    public final void rule__Number__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9779:1: ( ( ( rule__Number__Group_2__0 )? ) )
            // InternalSTFunctionParser.g:9780:1: ( ( rule__Number__Group_2__0 )? )
            {
            // InternalSTFunctionParser.g:9780:1: ( ( rule__Number__Group_2__0 )? )
            // InternalSTFunctionParser.g:9781:2: ( rule__Number__Group_2__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getGroup_2()); 
            }
            // InternalSTFunctionParser.g:9782:2: ( rule__Number__Group_2__0 )?
            int alt91=2;
            int LA91_0 = input.LA(1);

            if ( (LA91_0==FullStop) ) {
                int LA91_1 = input.LA(2);

                if ( (LA91_1==RULE_EXT_INT) ) {
                    alt91=1;
                }
                else if ( (LA91_1==RULE_INT) ) {
                    int LA91_4 = input.LA(3);

                    if ( (synpred143_InternalSTFunctionParser()) ) {
                        alt91=1;
                    }
                }
            }
            switch (alt91) {
                case 1 :
                    // InternalSTFunctionParser.g:9782:3: rule__Number__Group_2__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__Number__Group_2__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getGroup_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group__2__Impl"


    // $ANTLR start "rule__Number__Group_2__0"
    // InternalSTFunctionParser.g:9791:1: rule__Number__Group_2__0 : rule__Number__Group_2__0__Impl rule__Number__Group_2__1 ;
    public final void rule__Number__Group_2__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9795:1: ( rule__Number__Group_2__0__Impl rule__Number__Group_2__1 )
            // InternalSTFunctionParser.g:9796:2: rule__Number__Group_2__0__Impl rule__Number__Group_2__1
            {
            pushFollow(FOLLOW_80);
            rule__Number__Group_2__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0"


    // $ANTLR start "rule__Number__Group_2__0__Impl"
    // InternalSTFunctionParser.g:9803:1: rule__Number__Group_2__0__Impl : ( ( FullStop ) ) ;
    public final void rule__Number__Group_2__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9807:1: ( ( ( FullStop ) ) )
            // InternalSTFunctionParser.g:9808:1: ( ( FullStop ) )
            {
            // InternalSTFunctionParser.g:9808:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:9809:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:9810:2: ( FullStop )
            // InternalSTFunctionParser.g:9810:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getFullStopKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__0__Impl"


    // $ANTLR start "rule__Number__Group_2__1"
    // InternalSTFunctionParser.g:9818:1: rule__Number__Group_2__1 : rule__Number__Group_2__1__Impl ;
    public final void rule__Number__Group_2__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9822:1: ( rule__Number__Group_2__1__Impl )
            // InternalSTFunctionParser.g:9823:2: rule__Number__Group_2__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Number__Group_2__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1"


    // $ANTLR start "rule__Number__Group_2__1__Impl"
    // InternalSTFunctionParser.g:9829:1: rule__Number__Group_2__1__Impl : ( ( rule__Number__Alternatives_2_1 ) ) ;
    public final void rule__Number__Group_2__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9833:1: ( ( ( rule__Number__Alternatives_2_1 ) ) )
            // InternalSTFunctionParser.g:9834:1: ( ( rule__Number__Alternatives_2_1 ) )
            {
            // InternalSTFunctionParser.g:9834:1: ( ( rule__Number__Alternatives_2_1 ) )
            // InternalSTFunctionParser.g:9835:2: ( rule__Number__Alternatives_2_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }
            // InternalSTFunctionParser.g:9836:2: ( rule__Number__Alternatives_2_1 )
            // InternalSTFunctionParser.g:9836:3: rule__Number__Alternatives_2_1
            {
            pushFollow(FOLLOW_2);
            rule__Number__Alternatives_2_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getNumberAccess().getAlternatives_2_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Number__Group_2__1__Impl"


    // $ANTLR start "rule__Date__Group__0"
    // InternalSTFunctionParser.g:9845:1: rule__Date__Group__0 : rule__Date__Group__0__Impl rule__Date__Group__1 ;
    public final void rule__Date__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9849:1: ( rule__Date__Group__0__Impl rule__Date__Group__1 )
            // InternalSTFunctionParser.g:9850:2: rule__Date__Group__0__Impl rule__Date__Group__1
            {
            pushFollow(FOLLOW_78);
            rule__Date__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0"


    // $ANTLR start "rule__Date__Group__0__Impl"
    // InternalSTFunctionParser.g:9857:1: rule__Date__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9861:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9862:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9862:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9863:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__0__Impl"


    // $ANTLR start "rule__Date__Group__1"
    // InternalSTFunctionParser.g:9872:1: rule__Date__Group__1 : rule__Date__Group__1__Impl rule__Date__Group__2 ;
    public final void rule__Date__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9876:1: ( rule__Date__Group__1__Impl rule__Date__Group__2 )
            // InternalSTFunctionParser.g:9877:2: rule__Date__Group__1__Impl rule__Date__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__Date__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1"


    // $ANTLR start "rule__Date__Group__1__Impl"
    // InternalSTFunctionParser.g:9884:1: rule__Date__Group__1__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9888:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:9889:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:9889:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:9890:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__1__Impl"


    // $ANTLR start "rule__Date__Group__2"
    // InternalSTFunctionParser.g:9899:1: rule__Date__Group__2 : rule__Date__Group__2__Impl rule__Date__Group__3 ;
    public final void rule__Date__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9903:1: ( rule__Date__Group__2__Impl rule__Date__Group__3 )
            // InternalSTFunctionParser.g:9904:2: rule__Date__Group__2__Impl rule__Date__Group__3
            {
            pushFollow(FOLLOW_78);
            rule__Date__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2"


    // $ANTLR start "rule__Date__Group__2__Impl"
    // InternalSTFunctionParser.g:9911:1: rule__Date__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9915:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9916:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9916:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9917:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__2__Impl"


    // $ANTLR start "rule__Date__Group__3"
    // InternalSTFunctionParser.g:9926:1: rule__Date__Group__3 : rule__Date__Group__3__Impl rule__Date__Group__4 ;
    public final void rule__Date__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9930:1: ( rule__Date__Group__3__Impl rule__Date__Group__4 )
            // InternalSTFunctionParser.g:9931:2: rule__Date__Group__3__Impl rule__Date__Group__4
            {
            pushFollow(FOLLOW_76);
            rule__Date__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Date__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3"


    // $ANTLR start "rule__Date__Group__3__Impl"
    // InternalSTFunctionParser.g:9938:1: rule__Date__Group__3__Impl : ( HyphenMinus ) ;
    public final void rule__Date__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9942:1: ( ( HyphenMinus ) )
            // InternalSTFunctionParser.g:9943:1: ( HyphenMinus )
            {
            // InternalSTFunctionParser.g:9943:1: ( HyphenMinus )
            // InternalSTFunctionParser.g:9944:2: HyphenMinus
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }
            match(input,HyphenMinus,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getHyphenMinusKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__3__Impl"


    // $ANTLR start "rule__Date__Group__4"
    // InternalSTFunctionParser.g:9953:1: rule__Date__Group__4 : rule__Date__Group__4__Impl ;
    public final void rule__Date__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9957:1: ( rule__Date__Group__4__Impl )
            // InternalSTFunctionParser.g:9958:2: rule__Date__Group__4__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Date__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4"


    // $ANTLR start "rule__Date__Group__4__Impl"
    // InternalSTFunctionParser.g:9964:1: rule__Date__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__Date__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9968:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9969:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9969:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9970:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getDateAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Date__Group__4__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__0"
    // InternalSTFunctionParser.g:9980:1: rule__TimeOfDay__Group__0 : rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 ;
    public final void rule__TimeOfDay__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9984:1: ( rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1 )
            // InternalSTFunctionParser.g:9985:2: rule__TimeOfDay__Group__0__Impl rule__TimeOfDay__Group__1
            {
            pushFollow(FOLLOW_81);
            rule__TimeOfDay__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0"


    // $ANTLR start "rule__TimeOfDay__Group__0__Impl"
    // InternalSTFunctionParser.g:9992:1: rule__TimeOfDay__Group__0__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:9996:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:9997:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:9997:1: ( RULE_INT )
            // InternalSTFunctionParser.g:9998:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__1"
    // InternalSTFunctionParser.g:10007:1: rule__TimeOfDay__Group__1 : rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 ;
    public final void rule__TimeOfDay__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10011:1: ( rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2 )
            // InternalSTFunctionParser.g:10012:2: rule__TimeOfDay__Group__1__Impl rule__TimeOfDay__Group__2
            {
            pushFollow(FOLLOW_76);
            rule__TimeOfDay__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1"


    // $ANTLR start "rule__TimeOfDay__Group__1__Impl"
    // InternalSTFunctionParser.g:10019:1: rule__TimeOfDay__Group__1__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10023:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:10024:1: ( Colon )
            {
            // InternalSTFunctionParser.g:10024:1: ( Colon )
            // InternalSTFunctionParser.g:10025:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__1__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__2"
    // InternalSTFunctionParser.g:10034:1: rule__TimeOfDay__Group__2 : rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 ;
    public final void rule__TimeOfDay__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10038:1: ( rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3 )
            // InternalSTFunctionParser.g:10039:2: rule__TimeOfDay__Group__2__Impl rule__TimeOfDay__Group__3
            {
            pushFollow(FOLLOW_81);
            rule__TimeOfDay__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__3();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2"


    // $ANTLR start "rule__TimeOfDay__Group__2__Impl"
    // InternalSTFunctionParser.g:10046:1: rule__TimeOfDay__Group__2__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10050:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:10051:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:10051:1: ( RULE_INT )
            // InternalSTFunctionParser.g:10052:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__2__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__3"
    // InternalSTFunctionParser.g:10061:1: rule__TimeOfDay__Group__3 : rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 ;
    public final void rule__TimeOfDay__Group__3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10065:1: ( rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4 )
            // InternalSTFunctionParser.g:10066:2: rule__TimeOfDay__Group__3__Impl rule__TimeOfDay__Group__4
            {
            pushFollow(FOLLOW_76);
            rule__TimeOfDay__Group__3__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__4();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3"


    // $ANTLR start "rule__TimeOfDay__Group__3__Impl"
    // InternalSTFunctionParser.g:10073:1: rule__TimeOfDay__Group__3__Impl : ( Colon ) ;
    public final void rule__TimeOfDay__Group__3__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10077:1: ( ( Colon ) )
            // InternalSTFunctionParser.g:10078:1: ( Colon )
            {
            // InternalSTFunctionParser.g:10078:1: ( Colon )
            // InternalSTFunctionParser.g:10079:2: Colon
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }
            match(input,Colon,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getColonKeyword_3()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__3__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__4"
    // InternalSTFunctionParser.g:10088:1: rule__TimeOfDay__Group__4 : rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 ;
    public final void rule__TimeOfDay__Group__4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10092:1: ( rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5 )
            // InternalSTFunctionParser.g:10093:2: rule__TimeOfDay__Group__4__Impl rule__TimeOfDay__Group__5
            {
            pushFollow(FOLLOW_70);
            rule__TimeOfDay__Group__4__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4"


    // $ANTLR start "rule__TimeOfDay__Group__4__Impl"
    // InternalSTFunctionParser.g:10100:1: rule__TimeOfDay__Group__4__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group__4__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10104:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:10105:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:10105:1: ( RULE_INT )
            // InternalSTFunctionParser.g:10106:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_4()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__4__Impl"


    // $ANTLR start "rule__TimeOfDay__Group__5"
    // InternalSTFunctionParser.g:10115:1: rule__TimeOfDay__Group__5 : rule__TimeOfDay__Group__5__Impl ;
    public final void rule__TimeOfDay__Group__5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10119:1: ( rule__TimeOfDay__Group__5__Impl )
            // InternalSTFunctionParser.g:10120:2: rule__TimeOfDay__Group__5__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group__5__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5"


    // $ANTLR start "rule__TimeOfDay__Group__5__Impl"
    // InternalSTFunctionParser.g:10126:1: rule__TimeOfDay__Group__5__Impl : ( ( rule__TimeOfDay__Group_5__0 )? ) ;
    public final void rule__TimeOfDay__Group__5__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10130:1: ( ( ( rule__TimeOfDay__Group_5__0 )? ) )
            // InternalSTFunctionParser.g:10131:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            {
            // InternalSTFunctionParser.g:10131:1: ( ( rule__TimeOfDay__Group_5__0 )? )
            // InternalSTFunctionParser.g:10132:2: ( rule__TimeOfDay__Group_5__0 )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }
            // InternalSTFunctionParser.g:10133:2: ( rule__TimeOfDay__Group_5__0 )?
            int alt92=2;
            int LA92_0 = input.LA(1);

            if ( (LA92_0==FullStop) ) {
                int LA92_1 = input.LA(2);

                if ( (LA92_1==RULE_INT) ) {
                    int LA92_3 = input.LA(3);

                    if ( (synpred144_InternalSTFunctionParser()) ) {
                        alt92=1;
                    }
                }
            }
            switch (alt92) {
                case 1 :
                    // InternalSTFunctionParser.g:10133:3: rule__TimeOfDay__Group_5__0
                    {
                    pushFollow(FOLLOW_2);
                    rule__TimeOfDay__Group_5__0();

                    state._fsp--;
                    if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getGroup_5()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group__5__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__0"
    // InternalSTFunctionParser.g:10142:1: rule__TimeOfDay__Group_5__0 : rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 ;
    public final void rule__TimeOfDay__Group_5__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10146:1: ( rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1 )
            // InternalSTFunctionParser.g:10147:2: rule__TimeOfDay__Group_5__0__Impl rule__TimeOfDay__Group_5__1
            {
            pushFollow(FOLLOW_76);
            rule__TimeOfDay__Group_5__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0"


    // $ANTLR start "rule__TimeOfDay__Group_5__0__Impl"
    // InternalSTFunctionParser.g:10154:1: rule__TimeOfDay__Group_5__0__Impl : ( ( FullStop ) ) ;
    public final void rule__TimeOfDay__Group_5__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10158:1: ( ( ( FullStop ) ) )
            // InternalSTFunctionParser.g:10159:1: ( ( FullStop ) )
            {
            // InternalSTFunctionParser.g:10159:1: ( ( FullStop ) )
            // InternalSTFunctionParser.g:10160:2: ( FullStop )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }
            // InternalSTFunctionParser.g:10161:2: ( FullStop )
            // InternalSTFunctionParser.g:10161:3: FullStop
            {
            match(input,FullStop,FOLLOW_2); if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getFullStopKeyword_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__0__Impl"


    // $ANTLR start "rule__TimeOfDay__Group_5__1"
    // InternalSTFunctionParser.g:10169:1: rule__TimeOfDay__Group_5__1 : rule__TimeOfDay__Group_5__1__Impl ;
    public final void rule__TimeOfDay__Group_5__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10173:1: ( rule__TimeOfDay__Group_5__1__Impl )
            // InternalSTFunctionParser.g:10174:2: rule__TimeOfDay__Group_5__1__Impl
            {
            pushFollow(FOLLOW_2);
            rule__TimeOfDay__Group_5__1__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1"


    // $ANTLR start "rule__TimeOfDay__Group_5__1__Impl"
    // InternalSTFunctionParser.g:10180:1: rule__TimeOfDay__Group_5__1__Impl : ( RULE_INT ) ;
    public final void rule__TimeOfDay__Group_5__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10184:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:10185:1: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:10185:1: ( RULE_INT )
            // InternalSTFunctionParser.g:10186:2: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeOfDayAccess().getINTTerminalRuleCall_5_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__TimeOfDay__Group_5__1__Impl"


    // $ANTLR start "rule__Time__Group__0"
    // InternalSTFunctionParser.g:10196:1: rule__Time__Group__0 : rule__Time__Group__0__Impl rule__Time__Group__1 ;
    public final void rule__Time__Group__0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10200:1: ( rule__Time__Group__0__Impl rule__Time__Group__1 )
            // InternalSTFunctionParser.g:10201:2: rule__Time__Group__0__Impl rule__Time__Group__1
            {
            pushFollow(FOLLOW_82);
            rule__Time__Group__0__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__1();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0"


    // $ANTLR start "rule__Time__Group__0__Impl"
    // InternalSTFunctionParser.g:10208:1: rule__Time__Group__0__Impl : ( ruleNumber ) ;
    public final void rule__Time__Group__0__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10212:1: ( ( ruleNumber ) )
            // InternalSTFunctionParser.g:10213:1: ( ruleNumber )
            {
            // InternalSTFunctionParser.g:10213:1: ( ruleNumber )
            // InternalSTFunctionParser.g:10214:2: ruleNumber
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getNumberParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleNumber();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getNumberParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__0__Impl"


    // $ANTLR start "rule__Time__Group__1"
    // InternalSTFunctionParser.g:10223:1: rule__Time__Group__1 : rule__Time__Group__1__Impl rule__Time__Group__2 ;
    public final void rule__Time__Group__1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10227:1: ( rule__Time__Group__1__Impl rule__Time__Group__2 )
            // InternalSTFunctionParser.g:10228:2: rule__Time__Group__1__Impl rule__Time__Group__2
            {
            pushFollow(FOLLOW_83);
            rule__Time__Group__1__Impl();

            state._fsp--;
            if (state.failed) return ;
            pushFollow(FOLLOW_2);
            rule__Time__Group__2();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1"


    // $ANTLR start "rule__Time__Group__1__Impl"
    // InternalSTFunctionParser.g:10235:1: rule__Time__Group__1__Impl : ( ( rule__Time__Alternatives_1 ) ) ;
    public final void rule__Time__Group__1__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10239:1: ( ( ( rule__Time__Alternatives_1 ) ) )
            // InternalSTFunctionParser.g:10240:1: ( ( rule__Time__Alternatives_1 ) )
            {
            // InternalSTFunctionParser.g:10240:1: ( ( rule__Time__Alternatives_1 ) )
            // InternalSTFunctionParser.g:10241:2: ( rule__Time__Alternatives_1 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().getAlternatives_1()); 
            }
            // InternalSTFunctionParser.g:10242:2: ( rule__Time__Alternatives_1 )
            // InternalSTFunctionParser.g:10242:3: rule__Time__Alternatives_1
            {
            pushFollow(FOLLOW_2);
            rule__Time__Alternatives_1();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().getAlternatives_1()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__1__Impl"


    // $ANTLR start "rule__Time__Group__2"
    // InternalSTFunctionParser.g:10250:1: rule__Time__Group__2 : rule__Time__Group__2__Impl ;
    public final void rule__Time__Group__2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10254:1: ( rule__Time__Group__2__Impl )
            // InternalSTFunctionParser.g:10255:2: rule__Time__Group__2__Impl
            {
            pushFollow(FOLLOW_2);
            rule__Time__Group__2__Impl();

            state._fsp--;
            if (state.failed) return ;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__2"


    // $ANTLR start "rule__Time__Group__2__Impl"
    // InternalSTFunctionParser.g:10261:1: rule__Time__Group__2__Impl : ( ( KW__ )? ) ;
    public final void rule__Time__Group__2__Impl() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10265:1: ( ( ( KW__ )? ) )
            // InternalSTFunctionParser.g:10266:1: ( ( KW__ )? )
            {
            // InternalSTFunctionParser.g:10266:1: ( ( KW__ )? )
            // InternalSTFunctionParser.g:10267:2: ( KW__ )?
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getTimeAccess().get_Keyword_2()); 
            }
            // InternalSTFunctionParser.g:10268:2: ( KW__ )?
            int alt93=2;
            int LA93_0 = input.LA(1);

            if ( (LA93_0==KW__) ) {
                alt93=1;
            }
            switch (alt93) {
                case 1 :
                    // InternalSTFunctionParser.g:10268:3: KW__
                    {
                    match(input,KW__,FOLLOW_2); if (state.failed) return ;

                    }
                    break;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getTimeAccess().get_Keyword_2()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__Time__Group__2__Impl"


    // $ANTLR start "rule__STFunction__FunctionsAssignment"
    // InternalSTFunctionParser.g:10277:1: rule__STFunction__FunctionsAssignment : ( ruleFunctionDefinition ) ;
    public final void rule__STFunction__FunctionsAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10281:1: ( ( ruleFunctionDefinition ) )
            // InternalSTFunctionParser.g:10282:2: ( ruleFunctionDefinition )
            {
            // InternalSTFunctionParser.g:10282:2: ( ruleFunctionDefinition )
            // InternalSTFunctionParser.g:10283:3: ruleFunctionDefinition
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFunctionAccess().getFunctionsFunctionDefinitionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleFunctionDefinition();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFunctionAccess().getFunctionsFunctionDefinitionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFunction__FunctionsAssignment"


    // $ANTLR start "rule__FunctionDefinition__NameAssignment_2"
    // InternalSTFunctionParser.g:10292:1: rule__FunctionDefinition__NameAssignment_2 : ( RULE_ID ) ;
    public final void rule__FunctionDefinition__NameAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10296:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10297:2: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:10297:2: ( RULE_ID )
            // InternalSTFunctionParser.g:10298:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getNameIDTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__NameAssignment_2"


    // $ANTLR start "rule__FunctionDefinition__ReturnTypeAssignment_3_1"
    // InternalSTFunctionParser.g:10307:1: rule__FunctionDefinition__ReturnTypeAssignment_3_1 : ( ( RULE_ID ) ) ;
    public final void rule__FunctionDefinition__ReturnTypeAssignment_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10311:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10312:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10312:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10313:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeCrossReference_3_1_0()); 
            }
            // InternalSTFunctionParser.g:10314:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10315:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeIDTerminalRuleCall_3_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeIDTerminalRuleCall_3_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getReturnTypeDataTypeCrossReference_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__ReturnTypeAssignment_3_1"


    // $ANTLR start "rule__FunctionDefinition__VarDeclarationsAssignment_4_0"
    // InternalSTFunctionParser.g:10326:1: rule__FunctionDefinition__VarDeclarationsAssignment_4_0 : ( ruleVarDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarDeclarationsAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10330:1: ( ( ruleVarDeclarationBlock ) )
            // InternalSTFunctionParser.g:10331:2: ( ruleVarDeclarationBlock )
            {
            // InternalSTFunctionParser.g:10331:2: ( ruleVarDeclarationBlock )
            // InternalSTFunctionParser.g:10332:3: ruleVarDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsVarDeclarationBlockParserRuleCall_4_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarDeclarationsVarDeclarationBlockParserRuleCall_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarDeclarationsAssignment_4_0"


    // $ANTLR start "rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1"
    // InternalSTFunctionParser.g:10341:1: rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1 : ( ruleVarTempDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10345:1: ( ( ruleVarTempDeclarationBlock ) )
            // InternalSTFunctionParser.g:10346:2: ( ruleVarTempDeclarationBlock )
            {
            // InternalSTFunctionParser.g:10346:2: ( ruleVarTempDeclarationBlock )
            // InternalSTFunctionParser.g:10347:3: ruleVarTempDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsVarTempDeclarationBlockParserRuleCall_4_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarTempDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarTempDeclarationsVarTempDeclarationBlockParserRuleCall_4_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarTempDeclarationsAssignment_4_1"


    // $ANTLR start "rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2"
    // InternalSTFunctionParser.g:10356:1: rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2 : ( ruleVarInputDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10360:1: ( ( ruleVarInputDeclarationBlock ) )
            // InternalSTFunctionParser.g:10361:2: ( ruleVarInputDeclarationBlock )
            {
            // InternalSTFunctionParser.g:10361:2: ( ruleVarInputDeclarationBlock )
            // InternalSTFunctionParser.g:10362:3: ruleVarInputDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsVarInputDeclarationBlockParserRuleCall_4_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarInputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarInpuDeclarationsVarInputDeclarationBlockParserRuleCall_4_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarInpuDeclarationsAssignment_4_2"


    // $ANTLR start "rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3"
    // InternalSTFunctionParser.g:10371:1: rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3 : ( ruleVarOutputDeclarationBlock ) ;
    public final void rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10375:1: ( ( ruleVarOutputDeclarationBlock ) )
            // InternalSTFunctionParser.g:10376:2: ( ruleVarOutputDeclarationBlock )
            {
            // InternalSTFunctionParser.g:10376:2: ( ruleVarOutputDeclarationBlock )
            // InternalSTFunctionParser.g:10377:3: ruleVarOutputDeclarationBlock
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsVarOutputDeclarationBlockParserRuleCall_4_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarOutputDeclarationBlock();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getVarOutputDeclarationsVarOutputDeclarationBlockParserRuleCall_4_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__VarOutputDeclarationsAssignment_4_3"


    // $ANTLR start "rule__FunctionDefinition__CodeAssignment_5"
    // InternalSTFunctionParser.g:10386:1: rule__FunctionDefinition__CodeAssignment_5 : ( ruleSTStatement ) ;
    public final void rule__FunctionDefinition__CodeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10390:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10391:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10391:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10392:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getFunctionDefinitionAccess().getCodeSTStatementParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getFunctionDefinitionAccess().getCodeSTStatementParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__FunctionDefinition__CodeAssignment_5"


    // $ANTLR start "rule__VarDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:10401:1: rule__VarDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10405:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:10406:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:10406:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:10407:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:10408:3: ( CONSTANT )
            // InternalSTFunctionParser.g:10409:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:10420:1: rule__VarDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10424:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:10425:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:10425:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:10426:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarTempDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:10435:1: rule__VarTempDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarTempDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10439:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:10440:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:10440:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:10441:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:10442:3: ( CONSTANT )
            // InternalSTFunctionParser.g:10443:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:10454:1: rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10458:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:10459:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:10459:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:10460:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarTempDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarTempDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarInputDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:10469:1: rule__VarInputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarInputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10473:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:10474:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:10474:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:10475:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:10476:3: ( CONSTANT )
            // InternalSTFunctionParser.g:10477:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:10488:1: rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10492:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:10493:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:10493:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:10494:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarInputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarInputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarOutputDeclarationBlock__ConstantAssignment_2"
    // InternalSTFunctionParser.g:10503:1: rule__VarOutputDeclarationBlock__ConstantAssignment_2 : ( ( CONSTANT ) ) ;
    public final void rule__VarOutputDeclarationBlock__ConstantAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10507:1: ( ( ( CONSTANT ) ) )
            // InternalSTFunctionParser.g:10508:2: ( ( CONSTANT ) )
            {
            // InternalSTFunctionParser.g:10508:2: ( ( CONSTANT ) )
            // InternalSTFunctionParser.g:10509:3: ( CONSTANT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            // InternalSTFunctionParser.g:10510:3: ( CONSTANT )
            // InternalSTFunctionParser.g:10511:4: CONSTANT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }
            match(input,CONSTANT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getConstantCONSTANTKeyword_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__ConstantAssignment_2"


    // $ANTLR start "rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3"
    // InternalSTFunctionParser.g:10522:1: rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3 : ( ruleVarDeclaration ) ;
    public final void rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10526:1: ( ( ruleVarDeclaration ) )
            // InternalSTFunctionParser.g:10527:2: ( ruleVarDeclaration )
            {
            // InternalSTFunctionParser.g:10527:2: ( ruleVarDeclaration )
            // InternalSTFunctionParser.g:10528:3: ruleVarDeclaration
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleVarDeclaration();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarOutputDeclarationBlockAccess().getVarDeclarationsVarDeclarationParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarOutputDeclarationBlock__VarDeclarationsAssignment_3"


    // $ANTLR start "rule__VarDeclaration__NameAssignment_1"
    // InternalSTFunctionParser.g:10537:1: rule__VarDeclaration__NameAssignment_1 : ( RULE_ID ) ;
    public final void rule__VarDeclaration__NameAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10541:1: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10542:2: ( RULE_ID )
            {
            // InternalSTFunctionParser.g:10542:2: ( RULE_ID )
            // InternalSTFunctionParser.g:10543:3: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getNameIDTerminalRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__NameAssignment_1"


    // $ANTLR start "rule__VarDeclaration__LocatedAtAssignment_2_1"
    // InternalSTFunctionParser.g:10552:1: rule__VarDeclaration__LocatedAtAssignment_2_1 : ( ( RULE_ID ) ) ;
    public final void rule__VarDeclaration__LocatedAtAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10556:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10557:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10557:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10558:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }
            // InternalSTFunctionParser.g:10559:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10560:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtINamedElementIDTerminalRuleCall_2_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getLocatedAtINamedElementCrossReference_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__LocatedAtAssignment_2_1"


    // $ANTLR start "rule__VarDeclaration__ArrayAssignment_4_0"
    // InternalSTFunctionParser.g:10571:1: rule__VarDeclaration__ArrayAssignment_4_0 : ( ( ARRAY ) ) ;
    public final void rule__VarDeclaration__ArrayAssignment_4_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10575:1: ( ( ( ARRAY ) ) )
            // InternalSTFunctionParser.g:10576:2: ( ( ARRAY ) )
            {
            // InternalSTFunctionParser.g:10576:2: ( ( ARRAY ) )
            // InternalSTFunctionParser.g:10577:3: ( ARRAY )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            // InternalSTFunctionParser.g:10578:3: ( ARRAY )
            // InternalSTFunctionParser.g:10579:4: ARRAY
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }
            match(input,ARRAY,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getArrayARRAYKeyword_4_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__ArrayAssignment_4_0"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_4_1_0_1"
    // InternalSTFunctionParser.g:10590:1: rule__VarDeclaration__RangesAssignment_4_1_0_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_4_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10594:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10595:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10595:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10596:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_4_1_0_1"


    // $ANTLR start "rule__VarDeclaration__RangesAssignment_4_1_0_2_1"
    // InternalSTFunctionParser.g:10605:1: rule__VarDeclaration__RangesAssignment_4_1_0_2_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__RangesAssignment_4_1_0_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10609:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10610:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10610:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10611:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getRangesSTExpressionParserRuleCall_4_1_0_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__RangesAssignment_4_1_0_2_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_4_1_1_1"
    // InternalSTFunctionParser.g:10620:1: rule__VarDeclaration__CountAssignment_4_1_1_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_4_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10624:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:10625:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:10625:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:10626:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            // InternalSTFunctionParser.g:10627:3: ( Asterisk )
            // InternalSTFunctionParser.g:10628:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_4_1_1_1"


    // $ANTLR start "rule__VarDeclaration__CountAssignment_4_1_1_2_1"
    // InternalSTFunctionParser.g:10639:1: rule__VarDeclaration__CountAssignment_4_1_1_2_1 : ( ( Asterisk ) ) ;
    public final void rule__VarDeclaration__CountAssignment_4_1_1_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10643:1: ( ( ( Asterisk ) ) )
            // InternalSTFunctionParser.g:10644:2: ( ( Asterisk ) )
            {
            // InternalSTFunctionParser.g:10644:2: ( ( Asterisk ) )
            // InternalSTFunctionParser.g:10645:3: ( Asterisk )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            // InternalSTFunctionParser.g:10646:3: ( Asterisk )
            // InternalSTFunctionParser.g:10647:4: Asterisk
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }
            match(input,Asterisk,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getCountAsteriskKeyword_4_1_1_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__CountAssignment_4_1_1_2_1"


    // $ANTLR start "rule__VarDeclaration__TypeAssignment_5"
    // InternalSTFunctionParser.g:10658:1: rule__VarDeclaration__TypeAssignment_5 : ( ( ruleSTAnyType ) ) ;
    public final void rule__VarDeclaration__TypeAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10662:1: ( ( ( ruleSTAnyType ) ) )
            // InternalSTFunctionParser.g:10663:2: ( ( ruleSTAnyType ) )
            {
            // InternalSTFunctionParser.g:10663:2: ( ( ruleSTAnyType ) )
            // InternalSTFunctionParser.g:10664:3: ( ruleSTAnyType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }
            // InternalSTFunctionParser.g:10665:3: ( ruleSTAnyType )
            // InternalSTFunctionParser.g:10666:4: ruleSTAnyType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeINamedElementSTAnyTypeParserRuleCall_5_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getTypeINamedElementCrossReference_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__TypeAssignment_5"


    // $ANTLR start "rule__VarDeclaration__MaxLengthAssignment_6_1"
    // InternalSTFunctionParser.g:10677:1: rule__VarDeclaration__MaxLengthAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__VarDeclaration__MaxLengthAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10681:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10682:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10682:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10683:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getMaxLengthSTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__MaxLengthAssignment_6_1"


    // $ANTLR start "rule__VarDeclaration__DefaultValueAssignment_7_1"
    // InternalSTFunctionParser.g:10692:1: rule__VarDeclaration__DefaultValueAssignment_7_1 : ( ruleInitializerExpression ) ;
    public final void rule__VarDeclaration__DefaultValueAssignment_7_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10696:1: ( ( ruleInitializerExpression ) )
            // InternalSTFunctionParser.g:10697:2: ( ruleInitializerExpression )
            {
            // InternalSTFunctionParser.g:10697:2: ( ruleInitializerExpression )
            // InternalSTFunctionParser.g:10698:3: ruleInitializerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_7_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleInitializerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getVarDeclarationAccess().getDefaultValueInitializerExpressionParserRuleCall_7_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__VarDeclaration__DefaultValueAssignment_7_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_1"
    // InternalSTFunctionParser.g:10707:1: rule__ArrayInitializerExpression__ValuesAssignment_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10711:1: ( ( ruleArrayInitElement ) )
            // InternalSTFunctionParser.g:10712:2: ( ruleArrayInitElement )
            {
            // InternalSTFunctionParser.g:10712:2: ( ruleArrayInitElement )
            // InternalSTFunctionParser.g:10713:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_1"


    // $ANTLR start "rule__ArrayInitializerExpression__ValuesAssignment_2_1"
    // InternalSTFunctionParser.g:10722:1: rule__ArrayInitializerExpression__ValuesAssignment_2_1 : ( ruleArrayInitElement ) ;
    public final void rule__ArrayInitializerExpression__ValuesAssignment_2_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10726:1: ( ( ruleArrayInitElement ) )
            // InternalSTFunctionParser.g:10727:2: ( ruleArrayInitElement )
            {
            // InternalSTFunctionParser.g:10727:2: ( ruleArrayInitElement )
            // InternalSTFunctionParser.g:10728:3: ruleArrayInitElement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleArrayInitElement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitializerExpressionAccess().getValuesArrayInitElementParserRuleCall_2_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitializerExpression__ValuesAssignment_2_1"


    // $ANTLR start "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"
    // InternalSTFunctionParser.g:10737:1: rule__ArrayInitElement__IndexOrInitExpressionAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__IndexOrInitExpressionAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10741:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10742:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10742:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10743:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getIndexOrInitExpressionSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__IndexOrInitExpressionAssignment_0"


    // $ANTLR start "rule__ArrayInitElement__InitExpressionAssignment_1_1"
    // InternalSTFunctionParser.g:10752:1: rule__ArrayInitElement__InitExpressionAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__ArrayInitElement__InitExpressionAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10756:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10757:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10757:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10758:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getArrayInitElementAccess().getInitExpressionSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__ArrayInitElement__InitExpressionAssignment_1_1"


    // $ANTLR start "rule__STAssignmentStatement__LeftAssignment_0"
    // InternalSTFunctionParser.g:10767:1: rule__STAssignmentStatement__LeftAssignment_0 : ( ruleSTAccessExpression ) ;
    public final void rule__STAssignmentStatement__LeftAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10771:1: ( ( ruleSTAccessExpression ) )
            // InternalSTFunctionParser.g:10772:2: ( ruleSTAccessExpression )
            {
            // InternalSTFunctionParser.g:10772:2: ( ruleSTAccessExpression )
            // InternalSTFunctionParser.g:10773:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getLeftSTAccessExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__LeftAssignment_0"


    // $ANTLR start "rule__STAssignmentStatement__RightAssignment_2"
    // InternalSTFunctionParser.g:10782:1: rule__STAssignmentStatement__RightAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STAssignmentStatement__RightAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10786:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10787:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10787:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10788:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAssignmentStatementAccess().getRightSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAssignmentStatement__RightAssignment_2"


    // $ANTLR start "rule__STCallStatement__CallAssignment"
    // InternalSTFunctionParser.g:10797:1: rule__STCallStatement__CallAssignment : ( ruleSTAccessExpression ) ;
    public final void rule__STCallStatement__CallAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10801:1: ( ( ruleSTAccessExpression ) )
            // InternalSTFunctionParser.g:10802:2: ( ruleSTAccessExpression )
            {
            // InternalSTFunctionParser.g:10802:2: ( ruleSTAccessExpression )
            // InternalSTFunctionParser.g:10803:3: ruleSTAccessExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallStatementAccess().getCallSTAccessExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAccessExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallStatementAccess().getCallSTAccessExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallStatement__CallAssignment"


    // $ANTLR start "rule__STCallUnnamedArgument__ArgAssignment"
    // InternalSTFunctionParser.g:10812:1: rule__STCallUnnamedArgument__ArgAssignment : ( ruleSTExpression ) ;
    public final void rule__STCallUnnamedArgument__ArgAssignment() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10816:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10817:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10817:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10818:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallUnnamedArgumentAccess().getArgSTExpressionParserRuleCall_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallUnnamedArgumentAccess().getArgSTExpressionParserRuleCall_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallUnnamedArgument__ArgAssignment"


    // $ANTLR start "rule__STCallNamedInputArgument__TargetAssignment_0"
    // InternalSTFunctionParser.g:10827:1: rule__STCallNamedInputArgument__TargetAssignment_0 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedInputArgument__TargetAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10831:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10832:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10832:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10833:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetINamedElementCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:10834:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10835:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetINamedElementIDTerminalRuleCall_0_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetINamedElementIDTerminalRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getTargetINamedElementCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__TargetAssignment_0"


    // $ANTLR start "rule__STCallNamedInputArgument__SourceAssignment_2"
    // InternalSTFunctionParser.g:10846:1: rule__STCallNamedInputArgument__SourceAssignment_2 : ( ruleSTExpression ) ;
    public final void rule__STCallNamedInputArgument__SourceAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10850:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10851:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10851:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10852:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedInputArgumentAccess().getSourceSTExpressionParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedInputArgumentAccess().getSourceSTExpressionParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedInputArgument__SourceAssignment_2"


    // $ANTLR start "rule__STCallNamedOutputArgument__NotAssignment_0"
    // InternalSTFunctionParser.g:10861:1: rule__STCallNamedOutputArgument__NotAssignment_0 : ( ( NOT ) ) ;
    public final void rule__STCallNamedOutputArgument__NotAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10865:1: ( ( ( NOT ) ) )
            // InternalSTFunctionParser.g:10866:2: ( ( NOT ) )
            {
            // InternalSTFunctionParser.g:10866:2: ( ( NOT ) )
            // InternalSTFunctionParser.g:10867:3: ( NOT )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            // InternalSTFunctionParser.g:10868:3: ( NOT )
            // InternalSTFunctionParser.g:10869:4: NOT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }
            match(input,NOT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getNotNOTKeyword_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__NotAssignment_0"


    // $ANTLR start "rule__STCallNamedOutputArgument__SourceAssignment_1"
    // InternalSTFunctionParser.g:10880:1: rule__STCallNamedOutputArgument__SourceAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedOutputArgument__SourceAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10884:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10885:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10885:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10886:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceINamedElementCrossReference_1_0()); 
            }
            // InternalSTFunctionParser.g:10887:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10888:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceINamedElementIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceINamedElementIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getSourceINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__SourceAssignment_1"


    // $ANTLR start "rule__STCallNamedOutputArgument__TargetAssignment_3"
    // InternalSTFunctionParser.g:10899:1: rule__STCallNamedOutputArgument__TargetAssignment_3 : ( ( RULE_ID ) ) ;
    public final void rule__STCallNamedOutputArgument__TargetAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10903:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:10904:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:10904:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:10905:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetINamedElementCrossReference_3_0()); 
            }
            // InternalSTFunctionParser.g:10906:3: ( RULE_ID )
            // InternalSTFunctionParser.g:10907:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetINamedElementIDTerminalRuleCall_3_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetINamedElementIDTerminalRuleCall_3_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCallNamedOutputArgumentAccess().getTargetINamedElementCrossReference_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCallNamedOutputArgument__TargetAssignment_3"


    // $ANTLR start "rule__STIfStatement__ConditionAssignment_1"
    // InternalSTFunctionParser.g:10918:1: rule__STIfStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STIfStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10922:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10923:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10923:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10924:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STIfStatement__StatementsAssignment_3"
    // InternalSTFunctionParser.g:10933:1: rule__STIfStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STIfStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10937:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10938:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10938:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10939:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STIfStatement__ElseifsAssignment_4"
    // InternalSTFunctionParser.g:10948:1: rule__STIfStatement__ElseifsAssignment_4 : ( ruleSTElseIfPart ) ;
    public final void rule__STIfStatement__ElseifsAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10952:1: ( ( ruleSTElseIfPart ) )
            // InternalSTFunctionParser.g:10953:2: ( ruleSTElseIfPart )
            {
            // InternalSTFunctionParser.g:10953:2: ( ruleSTElseIfPart )
            // InternalSTFunctionParser.g:10954:3: ruleSTElseIfPart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElseIfPart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseifsSTElseIfPartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseifsAssignment_4"


    // $ANTLR start "rule__STIfStatement__ElseAssignment_5"
    // InternalSTFunctionParser.g:10963:1: rule__STIfStatement__ElseAssignment_5 : ( ruleSTElsePart ) ;
    public final void rule__STIfStatement__ElseAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10967:1: ( ( ruleSTElsePart ) )
            // InternalSTFunctionParser.g:10968:2: ( ruleSTElsePart )
            {
            // InternalSTFunctionParser.g:10968:2: ( ruleSTElsePart )
            // InternalSTFunctionParser.g:10969:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTIfStatementAccess().getElseSTElsePartParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STIfStatement__ElseAssignment_5"


    // $ANTLR start "rule__STElseIfPart__ConditionAssignment_1"
    // InternalSTFunctionParser.g:10978:1: rule__STElseIfPart__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STElseIfPart__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10982:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:10983:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:10983:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:10984:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__ConditionAssignment_1"


    // $ANTLR start "rule__STElseIfPart__StatementsAssignment_3"
    // InternalSTFunctionParser.g:10993:1: rule__STElseIfPart__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STElseIfPart__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:10997:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:10998:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:10998:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:10999:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElseIfPartAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElseIfPart__StatementsAssignment_3"


    // $ANTLR start "rule__STCaseStatement__SelectorAssignment_1"
    // InternalSTFunctionParser.g:11008:1: rule__STCaseStatement__SelectorAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseStatement__SelectorAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11012:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11013:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11013:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11014:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getSelectorSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__SelectorAssignment_1"


    // $ANTLR start "rule__STCaseStatement__CasesAssignment_3"
    // InternalSTFunctionParser.g:11023:1: rule__STCaseStatement__CasesAssignment_3 : ( ruleSTCaseCases ) ;
    public final void rule__STCaseStatement__CasesAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11027:1: ( ( ruleSTCaseCases ) )
            // InternalSTFunctionParser.g:11028:2: ( ruleSTCaseCases )
            {
            // InternalSTFunctionParser.g:11028:2: ( ruleSTCaseCases )
            // InternalSTFunctionParser.g:11029:3: ruleSTCaseCases
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCaseCases();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getCasesSTCaseCasesParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__CasesAssignment_3"


    // $ANTLR start "rule__STCaseStatement__ElseAssignment_4"
    // InternalSTFunctionParser.g:11038:1: rule__STCaseStatement__ElseAssignment_4 : ( ruleSTElsePart ) ;
    public final void rule__STCaseStatement__ElseAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11042:1: ( ( ruleSTElsePart ) )
            // InternalSTFunctionParser.g:11043:2: ( ruleSTElsePart )
            {
            // InternalSTFunctionParser.g:11043:2: ( ruleSTElsePart )
            // InternalSTFunctionParser.g:11044:3: ruleSTElsePart
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTElsePart();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseStatementAccess().getElseSTElsePartParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseStatement__ElseAssignment_4"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_0"
    // InternalSTFunctionParser.g:11053:1: rule__STCaseCases__ConditionsAssignment_0 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11057:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11058:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11058:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11059:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_0"


    // $ANTLR start "rule__STCaseCases__ConditionsAssignment_1_1"
    // InternalSTFunctionParser.g:11068:1: rule__STCaseCases__ConditionsAssignment_1_1 : ( ruleSTExpression ) ;
    public final void rule__STCaseCases__ConditionsAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11072:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11073:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11073:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11074:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getConditionsSTExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__ConditionsAssignment_1_1"


    // $ANTLR start "rule__STCaseCases__StatementsAssignment_3"
    // InternalSTFunctionParser.g:11083:1: rule__STCaseCases__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STCaseCases__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11087:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:11088:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:11088:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:11089:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTCaseCasesAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STCaseCases__StatementsAssignment_3"


    // $ANTLR start "rule__STElsePart__StatementsAssignment_2"
    // InternalSTFunctionParser.g:11098:1: rule__STElsePart__StatementsAssignment_2 : ( ruleSTStatement ) ;
    public final void rule__STElsePart__StatementsAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11102:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:11103:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:11103:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:11104:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTElsePartAccess().getStatementsSTStatementParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STElsePart__StatementsAssignment_2"


    // $ANTLR start "rule__STForStatement__VariableAssignment_1"
    // InternalSTFunctionParser.g:11113:1: rule__STForStatement__VariableAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STForStatement__VariableAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11117:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:11118:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:11118:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:11119:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationCrossReference_1_0()); 
            }
            // InternalSTFunctionParser.g:11120:3: ( RULE_ID )
            // InternalSTFunctionParser.g:11121:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getVariableSTVarDeclarationCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__VariableAssignment_1"


    // $ANTLR start "rule__STForStatement__FromAssignment_3"
    // InternalSTFunctionParser.g:11132:1: rule__STForStatement__FromAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__FromAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11136:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11137:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11137:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11138:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getFromSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__FromAssignment_3"


    // $ANTLR start "rule__STForStatement__ToAssignment_5"
    // InternalSTFunctionParser.g:11147:1: rule__STForStatement__ToAssignment_5 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ToAssignment_5() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11151:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11152:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11152:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11153:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getToSTExpressionParserRuleCall_5_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ToAssignment_5"


    // $ANTLR start "rule__STForStatement__ByAssignment_6_1"
    // InternalSTFunctionParser.g:11162:1: rule__STForStatement__ByAssignment_6_1 : ( ruleSTExpression ) ;
    public final void rule__STForStatement__ByAssignment_6_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11166:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11167:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11167:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11168:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getBySTExpressionParserRuleCall_6_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__ByAssignment_6_1"


    // $ANTLR start "rule__STForStatement__StatementsAssignment_8"
    // InternalSTFunctionParser.g:11177:1: rule__STForStatement__StatementsAssignment_8 : ( ruleSTStatement ) ;
    public final void rule__STForStatement__StatementsAssignment_8() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11181:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:11182:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:11182:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:11183:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTForStatementAccess().getStatementsSTStatementParserRuleCall_8_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STForStatement__StatementsAssignment_8"


    // $ANTLR start "rule__STWhileStatement__ConditionAssignment_1"
    // InternalSTFunctionParser.g:11192:1: rule__STWhileStatement__ConditionAssignment_1 : ( ruleSTExpression ) ;
    public final void rule__STWhileStatement__ConditionAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11196:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11197:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11197:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11198:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getConditionSTExpressionParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__ConditionAssignment_1"


    // $ANTLR start "rule__STWhileStatement__StatementsAssignment_3"
    // InternalSTFunctionParser.g:11207:1: rule__STWhileStatement__StatementsAssignment_3 : ( ruleSTStatement ) ;
    public final void rule__STWhileStatement__StatementsAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11211:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:11212:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:11212:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:11213:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTWhileStatementAccess().getStatementsSTStatementParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STWhileStatement__StatementsAssignment_3"


    // $ANTLR start "rule__STRepeatStatement__StatementsAssignment_1"
    // InternalSTFunctionParser.g:11222:1: rule__STRepeatStatement__StatementsAssignment_1 : ( ruleSTStatement ) ;
    public final void rule__STRepeatStatement__StatementsAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11226:1: ( ( ruleSTStatement ) )
            // InternalSTFunctionParser.g:11227:2: ( ruleSTStatement )
            {
            // InternalSTFunctionParser.g:11227:2: ( ruleSTStatement )
            // InternalSTFunctionParser.g:11228:3: ruleSTStatement
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTStatement();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getStatementsSTStatementParserRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__StatementsAssignment_1"


    // $ANTLR start "rule__STRepeatStatement__ConditionAssignment_3"
    // InternalSTFunctionParser.g:11237:1: rule__STRepeatStatement__ConditionAssignment_3 : ( ruleSTExpression ) ;
    public final void rule__STRepeatStatement__ConditionAssignment_3() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11241:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11242:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11242:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11243:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTRepeatStatementAccess().getConditionSTExpressionParserRuleCall_3_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STRepeatStatement__ConditionAssignment_3"


    // $ANTLR start "rule__STSubrangeExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11252:1: rule__STSubrangeExpression__OpAssignment_1_0_1 : ( ruleSubrangeOperator ) ;
    public final void rule__STSubrangeExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11256:1: ( ( ruleSubrangeOperator ) )
            // InternalSTFunctionParser.g:11257:2: ( ruleSubrangeOperator )
            {
            // InternalSTFunctionParser.g:11257:2: ( ruleSubrangeOperator )
            // InternalSTFunctionParser.g:11258:3: ruleSubrangeOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSubrangeOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getOpSubrangeOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STSubrangeExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11267:1: rule__STSubrangeExpression__RightAssignment_1_1 : ( ruleSTOrExpression ) ;
    public final void rule__STSubrangeExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11271:1: ( ( ruleSTOrExpression ) )
            // InternalSTFunctionParser.g:11272:2: ( ruleSTOrExpression )
            {
            // InternalSTFunctionParser.g:11272:2: ( ruleSTOrExpression )
            // InternalSTFunctionParser.g:11273:3: ruleSTOrExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTOrExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTSubrangeExpressionAccess().getRightSTOrExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STSubrangeExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STOrExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11282:1: rule__STOrExpression__OpAssignment_1_0_1 : ( ruleOrOperator ) ;
    public final void rule__STOrExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11286:1: ( ( ruleOrOperator ) )
            // InternalSTFunctionParser.g:11287:2: ( ruleOrOperator )
            {
            // InternalSTFunctionParser.g:11287:2: ( ruleOrOperator )
            // InternalSTFunctionParser.g:11288:3: ruleOrOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleOrOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getOpOrOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STOrExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11297:1: rule__STOrExpression__RightAssignment_1_1 : ( ruleSTXorExpression ) ;
    public final void rule__STOrExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11301:1: ( ( ruleSTXorExpression ) )
            // InternalSTFunctionParser.g:11302:2: ( ruleSTXorExpression )
            {
            // InternalSTFunctionParser.g:11302:2: ( ruleSTXorExpression )
            // InternalSTFunctionParser.g:11303:3: ruleSTXorExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTXorExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTOrExpressionAccess().getRightSTXorExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STOrExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STXorExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11312:1: rule__STXorExpression__OpAssignment_1_0_1 : ( ruleXorOperator ) ;
    public final void rule__STXorExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11316:1: ( ( ruleXorOperator ) )
            // InternalSTFunctionParser.g:11317:2: ( ruleXorOperator )
            {
            // InternalSTFunctionParser.g:11317:2: ( ruleXorOperator )
            // InternalSTFunctionParser.g:11318:3: ruleXorOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleXorOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getOpXorOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STXorExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11327:1: rule__STXorExpression__RightAssignment_1_1 : ( ruleSTAndExpression ) ;
    public final void rule__STXorExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11331:1: ( ( ruleSTAndExpression ) )
            // InternalSTFunctionParser.g:11332:2: ( ruleSTAndExpression )
            {
            // InternalSTFunctionParser.g:11332:2: ( ruleSTAndExpression )
            // InternalSTFunctionParser.g:11333:3: ruleSTAndExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAndExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTXorExpressionAccess().getRightSTAndExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STXorExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAndExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11342:1: rule__STAndExpression__OpAssignment_1_0_1 : ( ruleAndOperator ) ;
    public final void rule__STAndExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11346:1: ( ( ruleAndOperator ) )
            // InternalSTFunctionParser.g:11347:2: ( ruleAndOperator )
            {
            // InternalSTFunctionParser.g:11347:2: ( ruleAndOperator )
            // InternalSTFunctionParser.g:11348:3: ruleAndOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAndOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getOpAndOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAndExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11357:1: rule__STAndExpression__RightAssignment_1_1 : ( ruleSTEqualityExpression ) ;
    public final void rule__STAndExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11361:1: ( ( ruleSTEqualityExpression ) )
            // InternalSTFunctionParser.g:11362:2: ( ruleSTEqualityExpression )
            {
            // InternalSTFunctionParser.g:11362:2: ( ruleSTEqualityExpression )
            // InternalSTFunctionParser.g:11363:3: ruleSTEqualityExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTEqualityExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAndExpressionAccess().getRightSTEqualityExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAndExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STEqualityExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11372:1: rule__STEqualityExpression__OpAssignment_1_0_1 : ( ruleEqualityOperator ) ;
    public final void rule__STEqualityExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11376:1: ( ( ruleEqualityOperator ) )
            // InternalSTFunctionParser.g:11377:2: ( ruleEqualityOperator )
            {
            // InternalSTFunctionParser.g:11377:2: ( ruleEqualityOperator )
            // InternalSTFunctionParser.g:11378:3: ruleEqualityOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleEqualityOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getOpEqualityOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STEqualityExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11387:1: rule__STEqualityExpression__RightAssignment_1_1 : ( ruleSTComparisonExpression ) ;
    public final void rule__STEqualityExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11391:1: ( ( ruleSTComparisonExpression ) )
            // InternalSTFunctionParser.g:11392:2: ( ruleSTComparisonExpression )
            {
            // InternalSTFunctionParser.g:11392:2: ( ruleSTComparisonExpression )
            // InternalSTFunctionParser.g:11393:3: ruleSTComparisonExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTComparisonExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTEqualityExpressionAccess().getRightSTComparisonExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STEqualityExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STComparisonExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11402:1: rule__STComparisonExpression__OpAssignment_1_0_1 : ( ruleCompareOperator ) ;
    public final void rule__STComparisonExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11406:1: ( ( ruleCompareOperator ) )
            // InternalSTFunctionParser.g:11407:2: ( ruleCompareOperator )
            {
            // InternalSTFunctionParser.g:11407:2: ( ruleCompareOperator )
            // InternalSTFunctionParser.g:11408:3: ruleCompareOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleCompareOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getOpCompareOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STComparisonExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11417:1: rule__STComparisonExpression__RightAssignment_1_1 : ( ruleSTAddSubExpression ) ;
    public final void rule__STComparisonExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11421:1: ( ( ruleSTAddSubExpression ) )
            // InternalSTFunctionParser.g:11422:2: ( ruleSTAddSubExpression )
            {
            // InternalSTFunctionParser.g:11422:2: ( ruleSTAddSubExpression )
            // InternalSTFunctionParser.g:11423:3: ruleSTAddSubExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAddSubExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTComparisonExpressionAccess().getRightSTAddSubExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STComparisonExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STAddSubExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11432:1: rule__STAddSubExpression__OpAssignment_1_0_1 : ( ruleAddSubOperator ) ;
    public final void rule__STAddSubExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11436:1: ( ( ruleAddSubOperator ) )
            // InternalSTFunctionParser.g:11437:2: ( ruleAddSubOperator )
            {
            // InternalSTFunctionParser.g:11437:2: ( ruleAddSubOperator )
            // InternalSTFunctionParser.g:11438:3: ruleAddSubOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleAddSubOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getOpAddSubOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STAddSubExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11447:1: rule__STAddSubExpression__RightAssignment_1_1 : ( ruleSTMulDivModExpression ) ;
    public final void rule__STAddSubExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11451:1: ( ( ruleSTMulDivModExpression ) )
            // InternalSTFunctionParser.g:11452:2: ( ruleSTMulDivModExpression )
            {
            // InternalSTFunctionParser.g:11452:2: ( ruleSTMulDivModExpression )
            // InternalSTFunctionParser.g:11453:3: ruleSTMulDivModExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMulDivModExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAddSubExpressionAccess().getRightSTMulDivModExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAddSubExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STMulDivModExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11462:1: rule__STMulDivModExpression__OpAssignment_1_0_1 : ( ruleMulDivModOperator ) ;
    public final void rule__STMulDivModExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11466:1: ( ( ruleMulDivModOperator ) )
            // InternalSTFunctionParser.g:11467:2: ( ruleMulDivModOperator )
            {
            // InternalSTFunctionParser.g:11467:2: ( ruleMulDivModOperator )
            // InternalSTFunctionParser.g:11468:3: ruleMulDivModOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleMulDivModOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getOpMulDivModOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STMulDivModExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11477:1: rule__STMulDivModExpression__RightAssignment_1_1 : ( ruleSTPowerExpression ) ;
    public final void rule__STMulDivModExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11481:1: ( ( ruleSTPowerExpression ) )
            // InternalSTFunctionParser.g:11482:2: ( ruleSTPowerExpression )
            {
            // InternalSTFunctionParser.g:11482:2: ( ruleSTPowerExpression )
            // InternalSTFunctionParser.g:11483:3: ruleSTPowerExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTPowerExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMulDivModExpressionAccess().getRightSTPowerExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMulDivModExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STPowerExpression__OpAssignment_1_0_1"
    // InternalSTFunctionParser.g:11492:1: rule__STPowerExpression__OpAssignment_1_0_1 : ( rulePowerOperator ) ;
    public final void rule__STPowerExpression__OpAssignment_1_0_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11496:1: ( ( rulePowerOperator ) )
            // InternalSTFunctionParser.g:11497:2: ( rulePowerOperator )
            {
            // InternalSTFunctionParser.g:11497:2: ( rulePowerOperator )
            // InternalSTFunctionParser.g:11498:3: rulePowerOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }
            pushFollow(FOLLOW_2);
            rulePowerOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getOpPowerOperatorEnumRuleCall_1_0_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__OpAssignment_1_0_1"


    // $ANTLR start "rule__STPowerExpression__RightAssignment_1_1"
    // InternalSTFunctionParser.g:11507:1: rule__STPowerExpression__RightAssignment_1_1 : ( ruleSTUnaryExpression ) ;
    public final void rule__STPowerExpression__RightAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11511:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:11512:2: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:11512:2: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:11513:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTPowerExpressionAccess().getRightSTUnaryExpressionParserRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STPowerExpression__RightAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__OpAssignment_1_1"
    // InternalSTFunctionParser.g:11522:1: rule__STUnaryExpression__OpAssignment_1_1 : ( ruleUnaryOperator ) ;
    public final void rule__STUnaryExpression__OpAssignment_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11526:1: ( ( ruleUnaryOperator ) )
            // InternalSTFunctionParser.g:11527:2: ( ruleUnaryOperator )
            {
            // InternalSTFunctionParser.g:11527:2: ( ruleUnaryOperator )
            // InternalSTFunctionParser.g:11528:3: ruleUnaryOperator
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleUnaryOperator();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getOpUnaryOperatorEnumRuleCall_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__OpAssignment_1_1"


    // $ANTLR start "rule__STUnaryExpression__ExpressionAssignment_1_2"
    // InternalSTFunctionParser.g:11537:1: rule__STUnaryExpression__ExpressionAssignment_1_2 : ( ruleSTUnaryExpression ) ;
    public final void rule__STUnaryExpression__ExpressionAssignment_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11541:1: ( ( ruleSTUnaryExpression ) )
            // InternalSTFunctionParser.g:11542:2: ( ruleSTUnaryExpression )
            {
            // InternalSTFunctionParser.g:11542:2: ( ruleSTUnaryExpression )
            // InternalSTFunctionParser.g:11543:3: ruleSTUnaryExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTUnaryExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTUnaryExpressionAccess().getExpressionSTUnaryExpressionParserRuleCall_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STUnaryExpression__ExpressionAssignment_1_2"


    // $ANTLR start "rule__STAccessExpression__MemberAssignment_1_0_2"
    // InternalSTFunctionParser.g:11552:1: rule__STAccessExpression__MemberAssignment_1_0_2 : ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) ;
    public final void rule__STAccessExpression__MemberAssignment_1_0_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11556:1: ( ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) ) )
            // InternalSTFunctionParser.g:11557:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            {
            // InternalSTFunctionParser.g:11557:2: ( ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 ) )
            // InternalSTFunctionParser.g:11558:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }
            // InternalSTFunctionParser.g:11559:3: ( rule__STAccessExpression__MemberAlternatives_1_0_2_0 )
            // InternalSTFunctionParser.g:11559:4: rule__STAccessExpression__MemberAlternatives_1_0_2_0
            {
            pushFollow(FOLLOW_2);
            rule__STAccessExpression__MemberAlternatives_1_0_2_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getMemberAlternatives_1_0_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__MemberAssignment_1_0_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_2"
    // InternalSTFunctionParser.g:11567:1: rule__STAccessExpression__IndexAssignment_1_1_2 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11571:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11572:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11572:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11573:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_2"


    // $ANTLR start "rule__STAccessExpression__IndexAssignment_1_1_3_1"
    // InternalSTFunctionParser.g:11582:1: rule__STAccessExpression__IndexAssignment_1_1_3_1 : ( ruleSTExpression ) ;
    public final void rule__STAccessExpression__IndexAssignment_1_1_3_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11586:1: ( ( ruleSTExpression ) )
            // InternalSTFunctionParser.g:11587:2: ( ruleSTExpression )
            {
            // InternalSTFunctionParser.g:11587:2: ( ruleSTExpression )
            // InternalSTFunctionParser.g:11588:3: ruleSTExpression
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTExpression();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTAccessExpressionAccess().getIndexSTExpressionParserRuleCall_1_1_3_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STAccessExpression__IndexAssignment_1_1_3_1"


    // $ANTLR start "rule__STFeatureExpression__FeatureAssignment_1"
    // InternalSTFunctionParser.g:11597:1: rule__STFeatureExpression__FeatureAssignment_1 : ( ( RULE_ID ) ) ;
    public final void rule__STFeatureExpression__FeatureAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11601:1: ( ( ( RULE_ID ) ) )
            // InternalSTFunctionParser.g:11602:2: ( ( RULE_ID ) )
            {
            // InternalSTFunctionParser.g:11602:2: ( ( RULE_ID ) )
            // InternalSTFunctionParser.g:11603:3: ( RULE_ID )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }
            // InternalSTFunctionParser.g:11604:3: ( RULE_ID )
            // InternalSTFunctionParser.g:11605:4: RULE_ID
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementIDTerminalRuleCall_1_0_1()); 
            }
            match(input,RULE_ID,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementIDTerminalRuleCall_1_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getFeatureINamedElementCrossReference_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__FeatureAssignment_1"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_0"
    // InternalSTFunctionParser.g:11616:1: rule__STFeatureExpression__ParametersAssignment_2_1_0 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11620:1: ( ( ruleSTCallArgument ) )
            // InternalSTFunctionParser.g:11621:2: ( ruleSTCallArgument )
            {
            // InternalSTFunctionParser.g:11621:2: ( ruleSTCallArgument )
            // InternalSTFunctionParser.g:11622:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_0"


    // $ANTLR start "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"
    // InternalSTFunctionParser.g:11631:1: rule__STFeatureExpression__ParametersAssignment_2_1_1_1 : ( ruleSTCallArgument ) ;
    public final void rule__STFeatureExpression__ParametersAssignment_2_1_1_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11635:1: ( ( ruleSTCallArgument ) )
            // InternalSTFunctionParser.g:11636:2: ( ruleSTCallArgument )
            {
            // InternalSTFunctionParser.g:11636:2: ( ruleSTCallArgument )
            // InternalSTFunctionParser.g:11637:3: ruleSTCallArgument
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTCallArgument();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTFeatureExpressionAccess().getParametersSTCallArgumentParserRuleCall_2_1_1_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STFeatureExpression__ParametersAssignment_2_1_1_1"


    // $ANTLR start "rule__STMultibitPartialExpression__SpecifierAssignment_1"
    // InternalSTFunctionParser.g:11646:1: rule__STMultibitPartialExpression__SpecifierAssignment_1 : ( ruleSTMultiBitAccessSpecifier ) ;
    public final void rule__STMultibitPartialExpression__SpecifierAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11650:1: ( ( ruleSTMultiBitAccessSpecifier ) )
            // InternalSTFunctionParser.g:11651:2: ( ruleSTMultiBitAccessSpecifier )
            {
            // InternalSTFunctionParser.g:11651:2: ( ruleSTMultiBitAccessSpecifier )
            // InternalSTFunctionParser.g:11652:3: ruleSTMultiBitAccessSpecifier
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTMultiBitAccessSpecifier();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getSpecifierSTMultiBitAccessSpecifierEnumRuleCall_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__SpecifierAssignment_1"


    // $ANTLR start "rule__STMultibitPartialExpression__IndexAssignment_2"
    // InternalSTFunctionParser.g:11661:1: rule__STMultibitPartialExpression__IndexAssignment_2 : ( RULE_INT ) ;
    public final void rule__STMultibitPartialExpression__IndexAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11665:1: ( ( RULE_INT ) )
            // InternalSTFunctionParser.g:11666:2: ( RULE_INT )
            {
            // InternalSTFunctionParser.g:11666:2: ( RULE_INT )
            // InternalSTFunctionParser.g:11667:3: RULE_INT
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0()); 
            }
            match(input,RULE_INT,FOLLOW_2); if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTMultibitPartialExpressionAccess().getIndexINTTerminalRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STMultibitPartialExpression__IndexAssignment_2"


    // $ANTLR start "rule__STNumericLiteral__TypeAssignment_0_0"
    // InternalSTFunctionParser.g:11676:1: rule__STNumericLiteral__TypeAssignment_0_0 : ( ( ruleSTNumericLiteralType ) ) ;
    public final void rule__STNumericLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11680:1: ( ( ( ruleSTNumericLiteralType ) ) )
            // InternalSTFunctionParser.g:11681:2: ( ( ruleSTNumericLiteralType ) )
            {
            // InternalSTFunctionParser.g:11681:2: ( ( ruleSTNumericLiteralType ) )
            // InternalSTFunctionParser.g:11682:3: ( ruleSTNumericLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalSTFunctionParser.g:11683:3: ( ruleSTNumericLiteralType )
            // InternalSTFunctionParser.g:11684:4: ruleSTNumericLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTNumericLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeSTNumericLiteralTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STNumericLiteral__ValueAssignment_1"
    // InternalSTFunctionParser.g:11695:1: rule__STNumericLiteral__ValueAssignment_1 : ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) ) ;
    public final void rule__STNumericLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11699:1: ( ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) ) )
            // InternalSTFunctionParser.g:11700:2: ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) )
            {
            // InternalSTFunctionParser.g:11700:2: ( ( rule__STNumericLiteral__ValueAlternatives_1_0 ) )
            // InternalSTFunctionParser.g:11701:3: ( rule__STNumericLiteral__ValueAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTNumericLiteralAccess().getValueAlternatives_1_0()); 
            }
            // InternalSTFunctionParser.g:11702:3: ( rule__STNumericLiteral__ValueAlternatives_1_0 )
            // InternalSTFunctionParser.g:11702:4: rule__STNumericLiteral__ValueAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STNumericLiteral__ValueAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTNumericLiteralAccess().getValueAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STNumericLiteral__ValueAssignment_1"


    // $ANTLR start "rule__STDateLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:11710:1: rule__STDateLiteral__TypeAssignment_0 : ( ( ruleSTDateLiteralType ) ) ;
    public final void rule__STDateLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11714:1: ( ( ( ruleSTDateLiteralType ) ) )
            // InternalSTFunctionParser.g:11715:2: ( ( ruleSTDateLiteralType ) )
            {
            // InternalSTFunctionParser.g:11715:2: ( ( ruleSTDateLiteralType ) )
            // InternalSTFunctionParser.g:11716:3: ( ruleSTDateLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:11717:3: ( ruleSTDateLiteralType )
            // InternalSTFunctionParser.g:11718:4: ruleSTDateLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeSTDateLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateLiteral__ValueAssignment_2"
    // InternalSTFunctionParser.g:11729:1: rule__STDateLiteral__ValueAssignment_2 : ( ruleDate ) ;
    public final void rule__STDateLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11733:1: ( ( ruleDate ) )
            // InternalSTFunctionParser.g:11734:2: ( ruleDate )
            {
            // InternalSTFunctionParser.g:11734:2: ( ruleDate )
            // InternalSTFunctionParser.g:11735:3: ruleDate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateLiteralAccess().getValueDateParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:11744:1: rule__STTimeLiteral__TypeAssignment_0 : ( ( ruleSTTimeLiteralType ) ) ;
    public final void rule__STTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11748:1: ( ( ( ruleSTTimeLiteralType ) ) )
            // InternalSTFunctionParser.g:11749:2: ( ( ruleSTTimeLiteralType ) )
            {
            // InternalSTFunctionParser.g:11749:2: ( ( ruleSTTimeLiteralType ) )
            // InternalSTFunctionParser.g:11750:3: ( ruleSTTimeLiteralType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:11751:3: ( ruleSTTimeLiteralType )
            // InternalSTFunctionParser.g:11752:4: ruleSTTimeLiteralType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeLiteralType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeSTTimeLiteralTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeLiteral__ValueAssignment_2"
    // InternalSTFunctionParser.g:11763:1: rule__STTimeLiteral__ValueAssignment_2 : ( ruleTime ) ;
    public final void rule__STTimeLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11767:1: ( ( ruleTime ) )
            // InternalSTFunctionParser.g:11768:2: ( ruleTime )
            {
            // InternalSTFunctionParser.g:11768:2: ( ruleTime )
            // InternalSTFunctionParser.g:11769:3: ruleTime
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTime();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeLiteralAccess().getValueTimeParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STTimeOfDayLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:11778:1: rule__STTimeOfDayLiteral__TypeAssignment_0 : ( ( ruleSTTimeOfDayType ) ) ;
    public final void rule__STTimeOfDayLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11782:1: ( ( ( ruleSTTimeOfDayType ) ) )
            // InternalSTFunctionParser.g:11783:2: ( ( ruleSTTimeOfDayType ) )
            {
            // InternalSTFunctionParser.g:11783:2: ( ( ruleSTTimeOfDayType ) )
            // InternalSTFunctionParser.g:11784:3: ( ruleSTTimeOfDayType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:11785:3: ( ruleSTTimeOfDayType )
            // InternalSTFunctionParser.g:11786:4: ruleSTTimeOfDayType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTTimeOfDayType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeSTTimeOfDayTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STTimeOfDayLiteral__ValueAssignment_2"
    // InternalSTFunctionParser.g:11797:1: rule__STTimeOfDayLiteral__ValueAssignment_2 : ( ruleTimeOfDay ) ;
    public final void rule__STTimeOfDayLiteral__ValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11801:1: ( ( ruleTimeOfDay ) )
            // InternalSTFunctionParser.g:11802:2: ( ruleTimeOfDay )
            {
            // InternalSTFunctionParser.g:11802:2: ( ruleTimeOfDay )
            // InternalSTFunctionParser.g:11803:3: ruleTimeOfDay
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTTimeOfDayLiteralAccess().getValueTimeOfDayParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STTimeOfDayLiteral__ValueAssignment_2"


    // $ANTLR start "rule__STDateAndTimeLiteral__TypeAssignment_0"
    // InternalSTFunctionParser.g:11812:1: rule__STDateAndTimeLiteral__TypeAssignment_0 : ( ( ruleSTDateAndTimeType ) ) ;
    public final void rule__STDateAndTimeLiteral__TypeAssignment_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11816:1: ( ( ( ruleSTDateAndTimeType ) ) )
            // InternalSTFunctionParser.g:11817:2: ( ( ruleSTDateAndTimeType ) )
            {
            // InternalSTFunctionParser.g:11817:2: ( ( ruleSTDateAndTimeType ) )
            // InternalSTFunctionParser.g:11818:3: ( ruleSTDateAndTimeType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }
            // InternalSTFunctionParser.g:11819:3: ( ruleSTDateAndTimeType )
            // InternalSTFunctionParser.g:11820:4: ruleSTDateAndTimeType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTDateAndTimeType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeSTDateAndTimeTypeParserRuleCall_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTypeDataTypeCrossReference_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__TypeAssignment_0"


    // $ANTLR start "rule__STDateAndTimeLiteral__DateValueAssignment_2"
    // InternalSTFunctionParser.g:11831:1: rule__STDateAndTimeLiteral__DateValueAssignment_2 : ( ruleDate ) ;
    public final void rule__STDateAndTimeLiteral__DateValueAssignment_2() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11835:1: ( ( ruleDate ) )
            // InternalSTFunctionParser.g:11836:2: ( ruleDate )
            {
            // InternalSTFunctionParser.g:11836:2: ( ruleDate )
            // InternalSTFunctionParser.g:11837:3: ruleDate
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getDateValueDateParserRuleCall_2_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleDate();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getDateValueDateParserRuleCall_2_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__DateValueAssignment_2"


    // $ANTLR start "rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4"
    // InternalSTFunctionParser.g:11846:1: rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4 : ( ruleTimeOfDay ) ;
    public final void rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11850:1: ( ( ruleTimeOfDay ) )
            // InternalSTFunctionParser.g:11851:2: ( ruleTimeOfDay )
            {
            // InternalSTFunctionParser.g:11851:2: ( ruleTimeOfDay )
            // InternalSTFunctionParser.g:11852:3: ruleTimeOfDay
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTDateAndTimeLiteralAccess().getTimeOfDayValueTimeOfDayParserRuleCall_4_0()); 
            }
            pushFollow(FOLLOW_2);
            ruleTimeOfDay();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTDateAndTimeLiteralAccess().getTimeOfDayValueTimeOfDayParserRuleCall_4_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STDateAndTimeLiteral__TimeOfDayValueAssignment_4"


    // $ANTLR start "rule__STStringLiteral__TypeAssignment_0_0"
    // InternalSTFunctionParser.g:11861:1: rule__STStringLiteral__TypeAssignment_0_0 : ( ( ruleSTAnyCharsType ) ) ;
    public final void rule__STStringLiteral__TypeAssignment_0_0() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11865:1: ( ( ( ruleSTAnyCharsType ) ) )
            // InternalSTFunctionParser.g:11866:2: ( ( ruleSTAnyCharsType ) )
            {
            // InternalSTFunctionParser.g:11866:2: ( ( ruleSTAnyCharsType ) )
            // InternalSTFunctionParser.g:11867:3: ( ruleSTAnyCharsType )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }
            // InternalSTFunctionParser.g:11868:3: ( ruleSTAnyCharsType )
            // InternalSTFunctionParser.g:11869:4: ruleSTAnyCharsType
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }
            pushFollow(FOLLOW_2);
            ruleSTAnyCharsType();

            state._fsp--;
            if (state.failed) return ;
            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeSTAnyCharsTypeParserRuleCall_0_0_0_1()); 
            }

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getTypeDataTypeCrossReference_0_0_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__TypeAssignment_0_0"


    // $ANTLR start "rule__STStringLiteral__ValueAssignment_1"
    // InternalSTFunctionParser.g:11880:1: rule__STStringLiteral__ValueAssignment_1 : ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) ) ;
    public final void rule__STStringLiteral__ValueAssignment_1() throws RecognitionException {

        		int stackSize = keepStackSize();
        	
        try {
            // InternalSTFunctionParser.g:11884:1: ( ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) ) )
            // InternalSTFunctionParser.g:11885:2: ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) )
            {
            // InternalSTFunctionParser.g:11885:2: ( ( rule__STStringLiteral__ValueAlternatives_1_0 ) )
            // InternalSTFunctionParser.g:11886:3: ( rule__STStringLiteral__ValueAlternatives_1_0 )
            {
            if ( state.backtracking==0 ) {
               before(grammarAccess.getSTStringLiteralAccess().getValueAlternatives_1_0()); 
            }
            // InternalSTFunctionParser.g:11887:3: ( rule__STStringLiteral__ValueAlternatives_1_0 )
            // InternalSTFunctionParser.g:11887:4: rule__STStringLiteral__ValueAlternatives_1_0
            {
            pushFollow(FOLLOW_2);
            rule__STStringLiteral__ValueAlternatives_1_0();

            state._fsp--;
            if (state.failed) return ;

            }

            if ( state.backtracking==0 ) {
               after(grammarAccess.getSTStringLiteralAccess().getValueAlternatives_1_0()); 
            }

            }


            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {

            	restoreStackSize(stackSize);

        }
        return ;
    }
    // $ANTLR end "rule__STStringLiteral__ValueAssignment_1"

    // $ANTLR start synpred14_InternalSTFunctionParser
    public final void synpred14_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:2103:2: ( ( ( ruleSTAssignmentStatement ) ) )
        // InternalSTFunctionParser.g:2103:2: ( ( ruleSTAssignmentStatement ) )
        {
        // InternalSTFunctionParser.g:2103:2: ( ( ruleSTAssignmentStatement ) )
        // InternalSTFunctionParser.g:2104:3: ( ruleSTAssignmentStatement )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTStatementAccess().getSTAssignmentStatementParserRuleCall_0_0_5()); 
        }
        // InternalSTFunctionParser.g:2105:3: ( ruleSTAssignmentStatement )
        // InternalSTFunctionParser.g:2105:4: ruleSTAssignmentStatement
        {
        pushFollow(FOLLOW_2);
        ruleSTAssignmentStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred14_InternalSTFunctionParser

    // $ANTLR start synpred15_InternalSTFunctionParser
    public final void synpred15_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:2109:2: ( ( ruleSTCallStatement ) )
        // InternalSTFunctionParser.g:2109:2: ( ruleSTCallStatement )
        {
        // InternalSTFunctionParser.g:2109:2: ( ruleSTCallStatement )
        // InternalSTFunctionParser.g:2110:3: ruleSTCallStatement
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTStatementAccess().getSTCallStatementParserRuleCall_0_0_6()); 
        }
        pushFollow(FOLLOW_2);
        ruleSTCallStatement();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred15_InternalSTFunctionParser

    // $ANTLR start synpred20_InternalSTFunctionParser
    public final void synpred20_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:2169:2: ( ( ( ruleSTAccessExpression ) ) )
        // InternalSTFunctionParser.g:2169:2: ( ( ruleSTAccessExpression ) )
        {
        // InternalSTFunctionParser.g:2169:2: ( ( ruleSTAccessExpression ) )
        // InternalSTFunctionParser.g:2170:3: ( ruleSTAccessExpression )
        {
        if ( state.backtracking==0 ) {
           before(grammarAccess.getSTUnaryExpressionAccess().getSTAccessExpressionParserRuleCall_0()); 
        }
        // InternalSTFunctionParser.g:2171:3: ( ruleSTAccessExpression )
        // InternalSTFunctionParser.g:2171:4: ruleSTAccessExpression
        {
        pushFollow(FOLLOW_2);
        ruleSTAccessExpression();

        state._fsp--;
        if (state.failed) return ;

        }


        }


        }
    }
    // $ANTLR end synpred20_InternalSTFunctionParser

    // $ANTLR start synpred119_InternalSTFunctionParser
    public final void synpred119_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:6083:3: ( rule__STCaseCases__StatementsAssignment_3 )
        // InternalSTFunctionParser.g:6083:3: rule__STCaseCases__StatementsAssignment_3
        {
        pushFollow(FOLLOW_2);
        rule__STCaseCases__StatementsAssignment_3();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred119_InternalSTFunctionParser

    // $ANTLR start synpred136_InternalSTFunctionParser
    public final void synpred136_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:8837:3: ( rule__STFeatureExpression__Group_2__0 )
        // InternalSTFunctionParser.g:8837:3: rule__STFeatureExpression__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__STFeatureExpression__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred136_InternalSTFunctionParser

    // $ANTLR start synpred143_InternalSTFunctionParser
    public final void synpred143_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:9782:3: ( rule__Number__Group_2__0 )
        // InternalSTFunctionParser.g:9782:3: rule__Number__Group_2__0
        {
        pushFollow(FOLLOW_2);
        rule__Number__Group_2__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred143_InternalSTFunctionParser

    // $ANTLR start synpred144_InternalSTFunctionParser
    public final void synpred144_InternalSTFunctionParser_fragment() throws RecognitionException {   
        // InternalSTFunctionParser.g:10133:3: ( rule__TimeOfDay__Group_5__0 )
        // InternalSTFunctionParser.g:10133:3: rule__TimeOfDay__Group_5__0
        {
        pushFollow(FOLLOW_2);
        rule__TimeOfDay__Group_5__0();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred144_InternalSTFunctionParser

    // Delegated rules

    public final boolean synpred20_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred20_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred119_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred119_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred143_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred143_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred14_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred14_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred144_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred144_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred15_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred15_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred136_InternalSTFunctionParser() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred136_InternalSTFunctionParser_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA7 dfa7 = new DFA7(this);
    protected DFA67 dfa67 = new DFA67(this);
    protected DFA84 dfa84 = new DFA84(this);
    static final String dfa_1s = "\70\uffff";
    static final String dfa_2s = "\1\4\5\uffff\55\0\5\uffff";
    static final String dfa_3s = "\1\167\5\uffff\55\0\5\uffff";
    static final String dfa_4s = "\1\uffff\1\1\1\2\1\3\1\4\1\5\55\uffff\1\10\1\11\1\12\1\6\1\7";
    static final String dfa_5s = "\6\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\5\uffff}>";
    static final String[] dfa_6s = {
            "\1\52\1\51\1\uffff\1\46\1\45\5\uffff\1\64\5\uffff\1\56\1\uffff\1\5\1\63\1\55\1\uffff\1\13\1\uffff\1\30\1\36\1\26\1\42\1\14\1\23\1\24\1\uffff\1\21\1\60\1\4\1\10\1\11\1\2\1\57\1\35\1\17\1\uffff\1\65\1\20\1\50\1\25\1\15\1\uffff\1\41\1\27\1\22\1\12\1\uffff\1\3\1\16\1\54\2\uffff\1\47\21\uffff\1\53\1\1\1\40\1\44\10\uffff\1\6\2\uffff\1\31\1\uffff\1\32\7\uffff\1\37\3\uffff\1\43\4\uffff\1\34\1\33\1\uffff\1\7\1\61\1\62",
            "",
            "",
            "",
            "",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_1 = DFA.unpackEncodedString(dfa_1s);
    static final char[] dfa_2 = DFA.unpackEncodedStringToUnsignedChars(dfa_2s);
    static final char[] dfa_3 = DFA.unpackEncodedStringToUnsignedChars(dfa_3s);
    static final short[] dfa_4 = DFA.unpackEncodedString(dfa_4s);
    static final short[] dfa_5 = DFA.unpackEncodedString(dfa_5s);
    static final short[][] dfa_6 = unpackEncodedStringArray(dfa_6s);

    class DFA7 extends DFA {

        public DFA7(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 7;
            this.eot = dfa_1;
            this.eof = dfa_1;
            this.min = dfa_2;
            this.max = dfa_3;
            this.accept = dfa_4;
            this.special = dfa_5;
            this.transition = dfa_6;
        }
        public String getDescription() {
            return "2068:1: rule__STStatement__Alternatives_0_0 : ( ( ruleSTIfStatement ) | ( ruleSTCaseStatement ) | ( ruleSTForStatement ) | ( ruleSTWhileStatement ) | ( ruleSTRepeatStatement ) | ( ( ruleSTAssignmentStatement ) ) | ( ruleSTCallStatement ) | ( ( rule__STStatement__Group_0_0_7__0 ) ) | ( ( rule__STStatement__Group_0_0_8__0 ) ) | ( ( rule__STStatement__Group_0_0_9__0 ) ) );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA7_6 = input.LA(1);

                         
                        int index7_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_6);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA7_7 = input.LA(1);

                         
                        int index7_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_7);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA7_8 = input.LA(1);

                         
                        int index7_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_8);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA7_9 = input.LA(1);

                         
                        int index7_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_9);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA7_10 = input.LA(1);

                         
                        int index7_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_10);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA7_11 = input.LA(1);

                         
                        int index7_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_11);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA7_12 = input.LA(1);

                         
                        int index7_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_12);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA7_13 = input.LA(1);

                         
                        int index7_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_13);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA7_14 = input.LA(1);

                         
                        int index7_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_14);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA7_15 = input.LA(1);

                         
                        int index7_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_15);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA7_16 = input.LA(1);

                         
                        int index7_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_16);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA7_17 = input.LA(1);

                         
                        int index7_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_17);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA7_18 = input.LA(1);

                         
                        int index7_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_18);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA7_19 = input.LA(1);

                         
                        int index7_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_19);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA7_20 = input.LA(1);

                         
                        int index7_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_20);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA7_21 = input.LA(1);

                         
                        int index7_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_21);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA7_22 = input.LA(1);

                         
                        int index7_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_22);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA7_23 = input.LA(1);

                         
                        int index7_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_23);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA7_24 = input.LA(1);

                         
                        int index7_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_24);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA7_25 = input.LA(1);

                         
                        int index7_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_25);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA7_26 = input.LA(1);

                         
                        int index7_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_26);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA7_27 = input.LA(1);

                         
                        int index7_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_27);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA7_28 = input.LA(1);

                         
                        int index7_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_28);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA7_29 = input.LA(1);

                         
                        int index7_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_29);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA7_30 = input.LA(1);

                         
                        int index7_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_30);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA7_31 = input.LA(1);

                         
                        int index7_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_31);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA7_32 = input.LA(1);

                         
                        int index7_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_32);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA7_33 = input.LA(1);

                         
                        int index7_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_33);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA7_34 = input.LA(1);

                         
                        int index7_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_34);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA7_35 = input.LA(1);

                         
                        int index7_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_35);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA7_36 = input.LA(1);

                         
                        int index7_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_36);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA7_37 = input.LA(1);

                         
                        int index7_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_37);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA7_38 = input.LA(1);

                         
                        int index7_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_38);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA7_39 = input.LA(1);

                         
                        int index7_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_39);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA7_40 = input.LA(1);

                         
                        int index7_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_40);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA7_41 = input.LA(1);

                         
                        int index7_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_41);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA7_42 = input.LA(1);

                         
                        int index7_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_42);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA7_43 = input.LA(1);

                         
                        int index7_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_43);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA7_44 = input.LA(1);

                         
                        int index7_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_44);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA7_45 = input.LA(1);

                         
                        int index7_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_45);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA7_46 = input.LA(1);

                         
                        int index7_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_46);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA7_47 = input.LA(1);

                         
                        int index7_47 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_47);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA7_48 = input.LA(1);

                         
                        int index7_48 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_48);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA7_49 = input.LA(1);

                         
                        int index7_49 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_49);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA7_50 = input.LA(1);

                         
                        int index7_50 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred14_InternalSTFunctionParser()) ) {s = 54;}

                        else if ( (synpred15_InternalSTFunctionParser()) ) {s = 55;}

                         
                        input.seek(index7_50);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 7, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_7s = "\73\uffff";
    static final String dfa_8s = "\1\1\72\uffff";
    static final String dfa_9s = "\1\4\1\uffff\55\0\14\uffff";
    static final String dfa_10s = "\1\167\1\uffff\55\0\14\uffff";
    static final String dfa_11s = "\1\uffff\1\2\60\uffff\1\1\10\uffff";
    static final String dfa_12s = "\2\uffff\1\0\1\1\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51\1\52\1\53\1\54\14\uffff}>";
    static final String[] dfa_13s = {
            "\1\46\1\45\1\uffff\1\42\1\41\5\uffff\1\62\1\1\4\uffff\1\52\1\uffff\2\62\1\51\1\uffff\1\7\1\uffff\1\24\1\32\1\22\1\36\1\10\1\17\1\20\1\uffff\1\15\1\54\1\62\1\4\1\5\1\62\1\53\1\31\1\13\1\1\1\62\1\14\1\44\1\21\1\11\1\uffff\1\35\1\23\1\16\1\6\1\uffff\1\62\1\12\1\50\1\uffff\1\1\1\43\21\uffff\1\47\1\62\1\34\1\40\10\uffff\1\2\2\uffff\1\25\1\uffff\1\26\3\uffff\1\62\3\uffff\1\33\3\uffff\1\37\4\uffff\1\30\1\27\1\uffff\1\3\1\55\1\56",
            "",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_7 = DFA.unpackEncodedString(dfa_7s);
    static final short[] dfa_8 = DFA.unpackEncodedString(dfa_8s);
    static final char[] dfa_9 = DFA.unpackEncodedStringToUnsignedChars(dfa_9s);
    static final char[] dfa_10 = DFA.unpackEncodedStringToUnsignedChars(dfa_10s);
    static final short[] dfa_11 = DFA.unpackEncodedString(dfa_11s);
    static final short[] dfa_12 = DFA.unpackEncodedString(dfa_12s);
    static final short[][] dfa_13 = unpackEncodedStringArray(dfa_13s);

    class DFA67 extends DFA {

        public DFA67(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 67;
            this.eot = dfa_7;
            this.eof = dfa_8;
            this.min = dfa_9;
            this.max = dfa_10;
            this.accept = dfa_11;
            this.special = dfa_12;
            this.transition = dfa_13;
        }
        public String getDescription() {
            return "()* loopback of 6083:2: ( rule__STCaseCases__StatementsAssignment_3 )*";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA67_2 = input.LA(1);

                         
                        int index67_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_2);
                        if ( s>=0 ) return s;
                        break;
                    case 1 : 
                        int LA67_3 = input.LA(1);

                         
                        int index67_3 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_3);
                        if ( s>=0 ) return s;
                        break;
                    case 2 : 
                        int LA67_4 = input.LA(1);

                         
                        int index67_4 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_4);
                        if ( s>=0 ) return s;
                        break;
                    case 3 : 
                        int LA67_5 = input.LA(1);

                         
                        int index67_5 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_5);
                        if ( s>=0 ) return s;
                        break;
                    case 4 : 
                        int LA67_6 = input.LA(1);

                         
                        int index67_6 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_6);
                        if ( s>=0 ) return s;
                        break;
                    case 5 : 
                        int LA67_7 = input.LA(1);

                         
                        int index67_7 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_7);
                        if ( s>=0 ) return s;
                        break;
                    case 6 : 
                        int LA67_8 = input.LA(1);

                         
                        int index67_8 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_8);
                        if ( s>=0 ) return s;
                        break;
                    case 7 : 
                        int LA67_9 = input.LA(1);

                         
                        int index67_9 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_9);
                        if ( s>=0 ) return s;
                        break;
                    case 8 : 
                        int LA67_10 = input.LA(1);

                         
                        int index67_10 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_10);
                        if ( s>=0 ) return s;
                        break;
                    case 9 : 
                        int LA67_11 = input.LA(1);

                         
                        int index67_11 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_11);
                        if ( s>=0 ) return s;
                        break;
                    case 10 : 
                        int LA67_12 = input.LA(1);

                         
                        int index67_12 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_12);
                        if ( s>=0 ) return s;
                        break;
                    case 11 : 
                        int LA67_13 = input.LA(1);

                         
                        int index67_13 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_13);
                        if ( s>=0 ) return s;
                        break;
                    case 12 : 
                        int LA67_14 = input.LA(1);

                         
                        int index67_14 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_14);
                        if ( s>=0 ) return s;
                        break;
                    case 13 : 
                        int LA67_15 = input.LA(1);

                         
                        int index67_15 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_15);
                        if ( s>=0 ) return s;
                        break;
                    case 14 : 
                        int LA67_16 = input.LA(1);

                         
                        int index67_16 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_16);
                        if ( s>=0 ) return s;
                        break;
                    case 15 : 
                        int LA67_17 = input.LA(1);

                         
                        int index67_17 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_17);
                        if ( s>=0 ) return s;
                        break;
                    case 16 : 
                        int LA67_18 = input.LA(1);

                         
                        int index67_18 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_18);
                        if ( s>=0 ) return s;
                        break;
                    case 17 : 
                        int LA67_19 = input.LA(1);

                         
                        int index67_19 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_19);
                        if ( s>=0 ) return s;
                        break;
                    case 18 : 
                        int LA67_20 = input.LA(1);

                         
                        int index67_20 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_20);
                        if ( s>=0 ) return s;
                        break;
                    case 19 : 
                        int LA67_21 = input.LA(1);

                         
                        int index67_21 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_21);
                        if ( s>=0 ) return s;
                        break;
                    case 20 : 
                        int LA67_22 = input.LA(1);

                         
                        int index67_22 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_22);
                        if ( s>=0 ) return s;
                        break;
                    case 21 : 
                        int LA67_23 = input.LA(1);

                         
                        int index67_23 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_23);
                        if ( s>=0 ) return s;
                        break;
                    case 22 : 
                        int LA67_24 = input.LA(1);

                         
                        int index67_24 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_24);
                        if ( s>=0 ) return s;
                        break;
                    case 23 : 
                        int LA67_25 = input.LA(1);

                         
                        int index67_25 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_25);
                        if ( s>=0 ) return s;
                        break;
                    case 24 : 
                        int LA67_26 = input.LA(1);

                         
                        int index67_26 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_26);
                        if ( s>=0 ) return s;
                        break;
                    case 25 : 
                        int LA67_27 = input.LA(1);

                         
                        int index67_27 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_27);
                        if ( s>=0 ) return s;
                        break;
                    case 26 : 
                        int LA67_28 = input.LA(1);

                         
                        int index67_28 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_28);
                        if ( s>=0 ) return s;
                        break;
                    case 27 : 
                        int LA67_29 = input.LA(1);

                         
                        int index67_29 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_29);
                        if ( s>=0 ) return s;
                        break;
                    case 28 : 
                        int LA67_30 = input.LA(1);

                         
                        int index67_30 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_30);
                        if ( s>=0 ) return s;
                        break;
                    case 29 : 
                        int LA67_31 = input.LA(1);

                         
                        int index67_31 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_31);
                        if ( s>=0 ) return s;
                        break;
                    case 30 : 
                        int LA67_32 = input.LA(1);

                         
                        int index67_32 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_32);
                        if ( s>=0 ) return s;
                        break;
                    case 31 : 
                        int LA67_33 = input.LA(1);

                         
                        int index67_33 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_33);
                        if ( s>=0 ) return s;
                        break;
                    case 32 : 
                        int LA67_34 = input.LA(1);

                         
                        int index67_34 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_34);
                        if ( s>=0 ) return s;
                        break;
                    case 33 : 
                        int LA67_35 = input.LA(1);

                         
                        int index67_35 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_35);
                        if ( s>=0 ) return s;
                        break;
                    case 34 : 
                        int LA67_36 = input.LA(1);

                         
                        int index67_36 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_36);
                        if ( s>=0 ) return s;
                        break;
                    case 35 : 
                        int LA67_37 = input.LA(1);

                         
                        int index67_37 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_37);
                        if ( s>=0 ) return s;
                        break;
                    case 36 : 
                        int LA67_38 = input.LA(1);

                         
                        int index67_38 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_38);
                        if ( s>=0 ) return s;
                        break;
                    case 37 : 
                        int LA67_39 = input.LA(1);

                         
                        int index67_39 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_39);
                        if ( s>=0 ) return s;
                        break;
                    case 38 : 
                        int LA67_40 = input.LA(1);

                         
                        int index67_40 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_40);
                        if ( s>=0 ) return s;
                        break;
                    case 39 : 
                        int LA67_41 = input.LA(1);

                         
                        int index67_41 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_41);
                        if ( s>=0 ) return s;
                        break;
                    case 40 : 
                        int LA67_42 = input.LA(1);

                         
                        int index67_42 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_42);
                        if ( s>=0 ) return s;
                        break;
                    case 41 : 
                        int LA67_43 = input.LA(1);

                         
                        int index67_43 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_43);
                        if ( s>=0 ) return s;
                        break;
                    case 42 : 
                        int LA67_44 = input.LA(1);

                         
                        int index67_44 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_44);
                        if ( s>=0 ) return s;
                        break;
                    case 43 : 
                        int LA67_45 = input.LA(1);

                         
                        int index67_45 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_45);
                        if ( s>=0 ) return s;
                        break;
                    case 44 : 
                        int LA67_46 = input.LA(1);

                         
                        int index67_46 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred119_InternalSTFunctionParser()) ) {s = 50;}

                        else if ( (true) ) {s = 1;}

                         
                        input.seek(index67_46);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 67, _s, input);
            error(nvae);
            throw nvae;
        }
    }
    static final String dfa_14s = "\43\uffff";
    static final String dfa_15s = "\1\2\42\uffff";
    static final String dfa_16s = "\1\11\1\0\41\uffff";
    static final String dfa_17s = "\1\157\1\0\41\uffff";
    static final String dfa_18s = "\2\uffff\1\2\37\uffff\1\1";
    static final String dfa_19s = "\1\uffff\1\0\41\uffff}>";
    static final String[] dfa_20s = {
            "\1\2\51\uffff\1\2\4\uffff\1\2\3\uffff\1\2\3\uffff\1\2\5\uffff\5\2\1\uffff\1\2\1\uffff\2\2\6\uffff\3\2\2\uffff\1\2\1\1\14\2\5\uffff\2\2",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] dfa_14 = DFA.unpackEncodedString(dfa_14s);
    static final short[] dfa_15 = DFA.unpackEncodedString(dfa_15s);
    static final char[] dfa_16 = DFA.unpackEncodedStringToUnsignedChars(dfa_16s);
    static final char[] dfa_17 = DFA.unpackEncodedStringToUnsignedChars(dfa_17s);
    static final short[] dfa_18 = DFA.unpackEncodedString(dfa_18s);
    static final short[] dfa_19 = DFA.unpackEncodedString(dfa_19s);
    static final short[][] dfa_20 = unpackEncodedStringArray(dfa_20s);

    class DFA84 extends DFA {

        public DFA84(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 84;
            this.eot = dfa_14;
            this.eof = dfa_15;
            this.min = dfa_16;
            this.max = dfa_17;
            this.accept = dfa_18;
            this.special = dfa_19;
            this.transition = dfa_20;
        }
        public String getDescription() {
            return "8837:2: ( rule__STFeatureExpression__Group_2__0 )?";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA84_1 = input.LA(1);

                         
                        int index84_1 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred136_InternalSTFunctionParser()) ) {s = 34;}

                        else if ( (true) ) {s = 2;}

                         
                        input.seek(index84_1);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 84, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_1 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_2 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_3 = new BitSet(new long[]{0x0000000000010002L});
    public static final BitSet FOLLOW_4 = new BitSet(new long[]{0x0000000000000002L,0x0008000280000000L});
    public static final BitSet FOLLOW_5 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_6 = new BitSet(new long[]{0x0000000000000000L,0x0020000000000000L});
    public static final BitSet FOLLOW_7 = new BitSet(new long[]{0xCEF7DFF7F5D255F0L,0x00EC2232900F0000L});
    public static final BitSet FOLLOW_8 = new BitSet(new long[]{0x8000000000021402L});
    public static final BitSet FOLLOW_9 = new BitSet(new long[]{0x4EF7DFF7F5D041B2L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_10 = new BitSet(new long[]{0x8000000000000000L});
    public static final BitSet FOLLOW_11 = new BitSet(new long[]{0x0000000000082000L,0x0020000000000000L});
    public static final BitSet FOLLOW_12 = new BitSet(new long[]{0x0000000000000002L,0x0020000000000000L});
    public static final BitSet FOLLOW_13 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_14 = new BitSet(new long[]{0x0000000000001000L});
    public static final BitSet FOLLOW_15 = new BitSet(new long[]{0x8000000000021400L});
    public static final BitSet FOLLOW_16 = new BitSet(new long[]{0x0000000000000000L,0x0000001000002000L});
    public static final BitSet FOLLOW_17 = new BitSet(new long[]{0x4CD79DB7E71001B0L,0x0020000000010000L});
    public static final BitSet FOLLOW_18 = new BitSet(new long[]{0x0000000000000000L,0x0000402000000100L});
    public static final BitSet FOLLOW_19 = new BitSet(new long[]{0x0000000000000000L,0x0000400000000000L});
    public static final BitSet FOLLOW_20 = new BitSet(new long[]{0x0000000000000000L,0x0000000000400000L});
    public static final BitSet FOLLOW_21 = new BitSet(new long[]{0x6CF79DB7F51001B0L,0x00EC2202900D0000L});
    public static final BitSet FOLLOW_22 = new BitSet(new long[]{0x0000000000000000L,0x0000800100000000L});
    public static final BitSet FOLLOW_23 = new BitSet(new long[]{0x0000000000000002L,0x0000000100000000L});
    public static final BitSet FOLLOW_24 = new BitSet(new long[]{0x0000000000000000L,0x0000000040000000L});
    public static final BitSet FOLLOW_25 = new BitSet(new long[]{0x0000000000000000L,0x0000800000000000L});
    public static final BitSet FOLLOW_26 = new BitSet(new long[]{0x6CF79DB7F51001B0L,0x00EC6202900D0000L});
    public static final BitSet FOLLOW_27 = new BitSet(new long[]{0x0000000000000000L,0x0000000010000000L});
    public static final BitSet FOLLOW_28 = new BitSet(new long[]{0x0000000000000000L,0x0000000020000000L});
    public static final BitSet FOLLOW_29 = new BitSet(new long[]{0x0000000000000000L,0x0000002000000000L});
    public static final BitSet FOLLOW_30 = new BitSet(new long[]{0x0000000000800000L});
    public static final BitSet FOLLOW_31 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_32 = new BitSet(new long[]{0x4EF7DFF7F5D041B0L,0x00EC2202900F0000L});
    public static final BitSet FOLLOW_33 = new BitSet(new long[]{0x4EF7DFF7F5D041B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_34 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000100L});
    public static final BitSet FOLLOW_35 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000800L});
    public static final BitSet FOLLOW_36 = new BitSet(new long[]{0x0008000000000000L});
    public static final BitSet FOLLOW_37 = new BitSet(new long[]{0x4EF7FFF7FDF041B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_38 = new BitSet(new long[]{0x0000000008000002L});
    public static final BitSet FOLLOW_39 = new BitSet(new long[]{0x0000200000008000L});
    public static final BitSet FOLLOW_40 = new BitSet(new long[]{0x6CF79DB7F51001B2L,0x00EC2202900D0000L});
    public static final BitSet FOLLOW_41 = new BitSet(new long[]{0x0000000000000000L,0x0000001100000000L});
    public static final BitSet FOLLOW_42 = new BitSet(new long[]{0x0000200000000000L});
    public static final BitSet FOLLOW_43 = new BitSet(new long[]{0x0000000000000000L,0x0000000001000000L});
    public static final BitSet FOLLOW_44 = new BitSet(new long[]{0x0000000000000000L,0x000000000000C000L});
    public static final BitSet FOLLOW_45 = new BitSet(new long[]{0x4EF7DFF7F5D441B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_46 = new BitSet(new long[]{0x0000000000000000L,0x0000000000008000L});
    public static final BitSet FOLLOW_47 = new BitSet(new long[]{0x4EF7DFF7F5D049B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_48 = new BitSet(new long[]{0x4EF7DFFFF5D041B0L,0x00EC2222900F0000L});
    public static final BitSet FOLLOW_49 = new BitSet(new long[]{0x0000000000000200L});
    public static final BitSet FOLLOW_50 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000080L});
    public static final BitSet FOLLOW_51 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000080L});
    public static final BitSet FOLLOW_52 = new BitSet(new long[]{0x0000000000000000L,0x0000000000800000L});
    public static final BitSet FOLLOW_53 = new BitSet(new long[]{0x0000000000000002L,0x0000000000800000L});
    public static final BitSet FOLLOW_54 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000001L});
    public static final BitSet FOLLOW_55 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000001L});
    public static final BitSet FOLLOW_56 = new BitSet(new long[]{0x0100000000000000L,0x0000000008000000L});
    public static final BitSet FOLLOW_57 = new BitSet(new long[]{0x0100000000000002L,0x0000000008000000L});
    public static final BitSet FOLLOW_58 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000400L});
    public static final BitSet FOLLOW_59 = new BitSet(new long[]{0x0000000000000002L,0x0000008000000400L});
    public static final BitSet FOLLOW_60 = new BitSet(new long[]{0x0000000000000000L,0x0000014000001200L});
    public static final BitSet FOLLOW_61 = new BitSet(new long[]{0x0000000000000002L,0x0000014000001200L});
    public static final BitSet FOLLOW_62 = new BitSet(new long[]{0x0000000000000000L,0x0000000280000000L});
    public static final BitSet FOLLOW_63 = new BitSet(new long[]{0x0000000000000002L,0x0000000280000000L});
    public static final BitSet FOLLOW_64 = new BitSet(new long[]{0x1000000000000000L,0x0000000840000000L});
    public static final BitSet FOLLOW_65 = new BitSet(new long[]{0x1000000000000002L,0x0000000840000000L});
    public static final BitSet FOLLOW_66 = new BitSet(new long[]{0x0000000000000000L,0x0000000000000040L});
    public static final BitSet FOLLOW_67 = new BitSet(new long[]{0x0000000000000002L,0x0000000000000040L});
    public static final BitSet FOLLOW_68 = new BitSet(new long[]{0x0000000000000000L,0x0000400400000000L});
    public static final BitSet FOLLOW_69 = new BitSet(new long[]{0x0000000000000002L,0x0000400400000000L});
    public static final BitSet FOLLOW_70 = new BitSet(new long[]{0x0000000000000000L,0x0000000400000000L});
    public static final BitSet FOLLOW_71 = new BitSet(new long[]{0x0000000000000000L,0x002800000000003EL});
    public static final BitSet FOLLOW_72 = new BitSet(new long[]{0x6CF79DB7F51001B0L,0x00EC2202B00D0000L});
    public static final BitSet FOLLOW_73 = new BitSet(new long[]{0x0000000000000000L,0x0000000100000000L});
    public static final BitSet FOLLOW_74 = new BitSet(new long[]{0x04E6919754000000L,0x000C000280000000L});
    public static final BitSet FOLLOW_75 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_76 = new BitSet(new long[]{0x0000000000000000L,0x0008000000000000L});
    public static final BitSet FOLLOW_77 = new BitSet(new long[]{0x0000000000000000L,0x0008000280000000L});
    public static final BitSet FOLLOW_78 = new BitSet(new long[]{0x0000000000000000L,0x0000000200000000L});
    public static final BitSet FOLLOW_79 = new BitSet(new long[]{0x4CF79DB7F51001B0L,0x00EC2202900D0000L});
    public static final BitSet FOLLOW_80 = new BitSet(new long[]{0x0000000000000000L,0x0018000000000000L});
    public static final BitSet FOLLOW_81 = new BitSet(new long[]{0x0000000000000000L,0x0000001000000000L});
    public static final BitSet FOLLOW_82 = new BitSet(new long[]{0x0000000000000000L,0x00001E0002300000L});
    public static final BitSet FOLLOW_83 = new BitSet(new long[]{0x0000000000000000L,0x0001000000000000L});

}