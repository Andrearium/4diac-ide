/**
 * generated by Xtext 2.25.0
 */
package org.eclipse.fordiac.ide.structuredtextcore.sTCore;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.eclipse.fordiac.ide.structuredtextcore.sTCore.STCorePackage
 * @generated
 */
public interface STCoreFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  STCoreFactory eINSTANCE = org.eclipse.fordiac.ide.structuredtextcore.sTCore.impl.STCoreFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Code</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Code</em>'.
   * @generated
   */
  Code createCode();

  /**
   * Returns a new object of class '<em>Var Declaration Block</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Var Declaration Block</em>'.
   * @generated
   */
  VarDeclarationBlock createVarDeclarationBlock();

  /**
   * Returns a new object of class '<em>Var Declaration</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Var Declaration</em>'.
   * @generated
   */
  VarDeclaration createVarDeclaration();

  /**
   * Returns a new object of class '<em>Initializer Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Initializer Expression</em>'.
   * @generated
   */
  InitializerExpression createInitializerExpression();

  /**
   * Returns a new object of class '<em>Array Initializer Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Array Initializer Expression</em>'.
   * @generated
   */
  ArrayInitializerExpression createArrayInitializerExpression();

  /**
   * Returns a new object of class '<em>Array Init Element</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Array Init Element</em>'.
   * @generated
   */
  ArrayInitElement createArrayInitElement();

  /**
   * Returns a new object of class '<em>ST Statements</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Statements</em>'.
   * @generated
   */
  STStatements createSTStatements();

  /**
   * Returns a new object of class '<em>ST Assignment Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Assignment Statement</em>'.
   * @generated
   */
  STAssignmentStatement createSTAssignmentStatement();

  /**
   * Returns a new object of class '<em>ST Branch Statements</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Branch Statements</em>'.
   * @generated
   */
  STBranchStatements createSTBranchStatements();

  /**
   * Returns a new object of class '<em>ST If Statment</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST If Statment</em>'.
   * @generated
   */
  STIfStatment createSTIfStatment();

  /**
   * Returns a new object of class '<em>ST Else If Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Else If Part</em>'.
   * @generated
   */
  STElseIfPart createSTElseIfPart();

  /**
   * Returns a new object of class '<em>ST Case Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Case Statement</em>'.
   * @generated
   */
  STCaseStatement createSTCaseStatement();

  /**
   * Returns a new object of class '<em>ST Case Cases</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Case Cases</em>'.
   * @generated
   */
  STCaseCases createSTCaseCases();

  /**
   * Returns a new object of class '<em>ST Else Part</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Else Part</em>'.
   * @generated
   */
  STElsePart createSTElsePart();

  /**
   * Returns a new object of class '<em>ST Loop Statements</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Loop Statements</em>'.
   * @generated
   */
  STLoopStatements createSTLoopStatements();

  /**
   * Returns a new object of class '<em>ST For Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST For Statement</em>'.
   * @generated
   */
  STForStatement createSTForStatement();

  /**
   * Returns a new object of class '<em>ST While Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST While Statement</em>'.
   * @generated
   */
  STWhileStatement createSTWhileStatement();

  /**
   * Returns a new object of class '<em>ST Repeat Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Repeat Statement</em>'.
   * @generated
   */
  STRepeatStatement createSTRepeatStatement();

  /**
   * Returns a new object of class '<em>ST Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Expression</em>'.
   * @generated
   */
  STExpression createSTExpression();

  /**
   * Returns a new object of class '<em>Multibit Partial Access</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Multibit Partial Access</em>'.
   * @generated
   */
  MultibitPartialAccess createMultibitPartialAccess();

  /**
   * Returns a new object of class '<em>NUMERIC LITERAL</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>NUMERIC LITERAL</em>'.
   * @generated
   */
  NUMERIC_LITERAL createNUMERIC_LITERAL();

  /**
   * Returns a new object of class '<em>DATE LITERAL</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>DATE LITERAL</em>'.
   * @generated
   */
  DATE_LITERAL createDATE_LITERAL();

  /**
   * Returns a new object of class '<em>TIME LITERAL</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>TIME LITERAL</em>'.
   * @generated
   */
  TIME_LITERAL createTIME_LITERAL();

  /**
   * Returns a new object of class '<em>TIME OF DAY LITERAL</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>TIME OF DAY LITERAL</em>'.
   * @generated
   */
  TIME_OF_DAY_LITERAL createTIME_OF_DAY_LITERAL();

  /**
   * Returns a new object of class '<em>DATE AND TIME LITERAL</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>DATE AND TIME LITERAL</em>'.
   * @generated
   */
  DATE_AND_TIME_LITERAL createDATE_AND_TIME_LITERAL();

  /**
   * Returns a new object of class '<em>STRING LITERAL</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>STRING LITERAL</em>'.
   * @generated
   */
  STRING_LITERAL createSTRING_LITERAL();

  /**
   * Returns a new object of class '<em>ST Subrange Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Subrange Expression</em>'.
   * @generated
   */
  STSubrangeExpression createSTSubrangeExpression();

  /**
   * Returns a new object of class '<em>ST Or Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Or Expression</em>'.
   * @generated
   */
  STOrExpression createSTOrExpression();

  /**
   * Returns a new object of class '<em>ST Xor Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Xor Expression</em>'.
   * @generated
   */
  STXorExpression createSTXorExpression();

  /**
   * Returns a new object of class '<em>ST And Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST And Expression</em>'.
   * @generated
   */
  STAndExpression createSTAndExpression();

  /**
   * Returns a new object of class '<em>ST Equality Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Equality Expression</em>'.
   * @generated
   */
  STEqualityExpression createSTEqualityExpression();

  /**
   * Returns a new object of class '<em>ST Comparison Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Comparison Expression</em>'.
   * @generated
   */
  STComparisonExpression createSTComparisonExpression();

  /**
   * Returns a new object of class '<em>ST Add Sub Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Add Sub Expression</em>'.
   * @generated
   */
  STAddSubExpression createSTAddSubExpression();

  /**
   * Returns a new object of class '<em>ST Mul Div Mod Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Mul Div Mod Expression</em>'.
   * @generated
   */
  STMulDivModExpression createSTMulDivModExpression();

  /**
   * Returns a new object of class '<em>ST Power Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Power Expression</em>'.
   * @generated
   */
  STPowerExpression createSTPowerExpression();

  /**
   * Returns a new object of class '<em>ST Signum Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Signum Expression</em>'.
   * @generated
   */
  STSignumExpression createSTSignumExpression();

  /**
   * Returns a new object of class '<em>ST Member Selection</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Member Selection</em>'.
   * @generated
   */
  STMemberSelection createSTMemberSelection();

  /**
   * Returns a new object of class '<em>ST Symbol</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Symbol</em>'.
   * @generated
   */
  STSymbol createSTSymbol();

  /**
   * Returns a new object of class '<em>ST Return</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Return</em>'.
   * @generated
   */
  STReturn createSTReturn();

  /**
   * Returns a new object of class '<em>ST Continue</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Continue</em>'.
   * @generated
   */
  STContinue createSTContinue();

  /**
   * Returns a new object of class '<em>ST Exit</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Exit</em>'.
   * @generated
   */
  STExit createSTExit();

  /**
   * Returns a new object of class '<em>ST Numeric Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Numeric Literal</em>'.
   * @generated
   */
  STNumericLiteral createSTNumericLiteral();

  /**
   * Returns a new object of class '<em>ST Date Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Date Literal</em>'.
   * @generated
   */
  STDateLiteral createSTDateLiteral();

  /**
   * Returns a new object of class '<em>ST Time Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Time Literal</em>'.
   * @generated
   */
  STTimeLiteral createSTTimeLiteral();

  /**
   * Returns a new object of class '<em>ST Time Of Day Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Time Of Day Literal</em>'.
   * @generated
   */
  STTimeOfDayLiteral createSTTimeOfDayLiteral();

  /**
   * Returns a new object of class '<em>ST Date And Time Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST Date And Time Literal</em>'.
   * @generated
   */
  STDateAndTimeLiteral createSTDateAndTimeLiteral();

  /**
   * Returns a new object of class '<em>ST String Literal</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>ST String Literal</em>'.
   * @generated
   */
  STStringLiteral createSTStringLiteral();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  STCorePackage getSTCorePackage();

} //STCoreFactory
