/**
 * generated by Xtext 2.25.0
 */
package org.eclipse.fordiac.ide.structuredtextcore.sTCore.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.fordiac.ide.structuredtextcore.sTCore.STCorePackage;
import org.eclipse.fordiac.ide.structuredtextcore.sTCore.STRING_LITERAL;
import org.eclipse.fordiac.ide.structuredtextcore.sTCore.STStringLiteral;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ST String Literal</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.fordiac.ide.structuredtextcore.sTCore.impl.STStringLiteralImpl#getStringLiteral <em>String Literal</em>}</li>
 * </ul>
 *
 * @generated
 */
public class STStringLiteralImpl extends STExpressionImpl implements STStringLiteral
{
  /**
   * The cached value of the '{@link #getStringLiteral() <em>String Literal</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getStringLiteral()
   * @generated
   * @ordered
   */
  protected STRING_LITERAL stringLiteral;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected STStringLiteralImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return STCorePackage.Literals.ST_STRING_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public STRING_LITERAL getStringLiteral()
  {
    return stringLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetStringLiteral(STRING_LITERAL newStringLiteral, NotificationChain msgs)
  {
    STRING_LITERAL oldStringLiteral = stringLiteral;
    stringLiteral = newStringLiteral;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, STCorePackage.ST_STRING_LITERAL__STRING_LITERAL, oldStringLiteral, newStringLiteral);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setStringLiteral(STRING_LITERAL newStringLiteral)
  {
    if (newStringLiteral != stringLiteral)
    {
      NotificationChain msgs = null;
      if (stringLiteral != null)
        msgs = ((InternalEObject)stringLiteral).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - STCorePackage.ST_STRING_LITERAL__STRING_LITERAL, null, msgs);
      if (newStringLiteral != null)
        msgs = ((InternalEObject)newStringLiteral).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - STCorePackage.ST_STRING_LITERAL__STRING_LITERAL, null, msgs);
      msgs = basicSetStringLiteral(newStringLiteral, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, STCorePackage.ST_STRING_LITERAL__STRING_LITERAL, newStringLiteral, newStringLiteral));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case STCorePackage.ST_STRING_LITERAL__STRING_LITERAL:
        return basicSetStringLiteral(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case STCorePackage.ST_STRING_LITERAL__STRING_LITERAL:
        return getStringLiteral();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case STCorePackage.ST_STRING_LITERAL__STRING_LITERAL:
        setStringLiteral((STRING_LITERAL)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case STCorePackage.ST_STRING_LITERAL__STRING_LITERAL:
        setStringLiteral((STRING_LITERAL)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case STCorePackage.ST_STRING_LITERAL__STRING_LITERAL:
        return stringLiteral != null;
    }
    return super.eIsSet(featureID);
  }

} //STStringLiteralImpl
