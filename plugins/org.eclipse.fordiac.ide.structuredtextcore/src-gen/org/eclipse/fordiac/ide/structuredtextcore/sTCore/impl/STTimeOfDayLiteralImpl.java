/**
 * generated by Xtext 2.25.0
 */
package org.eclipse.fordiac.ide.structuredtextcore.sTCore.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.fordiac.ide.structuredtextcore.sTCore.STCorePackage;
import org.eclipse.fordiac.ide.structuredtextcore.sTCore.STTimeOfDayLiteral;
import org.eclipse.fordiac.ide.structuredtextcore.sTCore.TIME_OF_DAY_LITERAL;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>ST Time Of Day Literal</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.eclipse.fordiac.ide.structuredtextcore.sTCore.impl.STTimeOfDayLiteralImpl#getTimeOfDayLiteral <em>Time Of Day Literal</em>}</li>
 * </ul>
 *
 * @generated
 */
public class STTimeOfDayLiteralImpl extends STExpressionImpl implements STTimeOfDayLiteral
{
  /**
   * The cached value of the '{@link #getTimeOfDayLiteral() <em>Time Of Day Literal</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTimeOfDayLiteral()
   * @generated
   * @ordered
   */
  protected TIME_OF_DAY_LITERAL timeOfDayLiteral;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected STTimeOfDayLiteralImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return STCorePackage.Literals.ST_TIME_OF_DAY_LITERAL;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TIME_OF_DAY_LITERAL getTimeOfDayLiteral()
  {
    return timeOfDayLiteral;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetTimeOfDayLiteral(TIME_OF_DAY_LITERAL newTimeOfDayLiteral, NotificationChain msgs)
  {
    TIME_OF_DAY_LITERAL oldTimeOfDayLiteral = timeOfDayLiteral;
    timeOfDayLiteral = newTimeOfDayLiteral;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL, oldTimeOfDayLiteral, newTimeOfDayLiteral);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTimeOfDayLiteral(TIME_OF_DAY_LITERAL newTimeOfDayLiteral)
  {
    if (newTimeOfDayLiteral != timeOfDayLiteral)
    {
      NotificationChain msgs = null;
      if (timeOfDayLiteral != null)
        msgs = ((InternalEObject)timeOfDayLiteral).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL, null, msgs);
      if (newTimeOfDayLiteral != null)
        msgs = ((InternalEObject)newTimeOfDayLiteral).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL, null, msgs);
      msgs = basicSetTimeOfDayLiteral(newTimeOfDayLiteral, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL, newTimeOfDayLiteral, newTimeOfDayLiteral));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL:
        return basicSetTimeOfDayLiteral(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL:
        return getTimeOfDayLiteral();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL:
        setTimeOfDayLiteral((TIME_OF_DAY_LITERAL)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL:
        setTimeOfDayLiteral((TIME_OF_DAY_LITERAL)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case STCorePackage.ST_TIME_OF_DAY_LITERAL__TIME_OF_DAY_LITERAL:
        return timeOfDayLiteral != null;
    }
    return super.eIsSet(featureID);
  }

} //STTimeOfDayLiteralImpl
